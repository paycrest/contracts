{"id":"9d70d1d42ae8334f6c5416eec0317695","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./OwnableUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    function __Ownable2Step_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\n        _transferOwnership(sender);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"contracts/Gateway.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\n\nimport {GatewaySettingManager} from './GatewaySettingManager.sol';\nimport {IGateway, IERC20} from './interfaces/IGateway.sol';\n\n/**\n * @title Gateway\n * @notice This contract serves as a gateway for creating orders and managing settlements.\n */\ncontract Gateway is IGateway, GatewaySettingManager, PausableUpgradeable {\n\tstruct fee {\n\t\tuint256 protocolFee;\n\t\tuint256 liquidityProviderAmount;\n\t}\n\n\tmapping(bytes32 => Order) private order;\n\tmapping(address => uint256) private _nonce;\n\tuint256[50] private __gap;\n\n\t/// @custom:oz-upgrades-unsafe-allow constructor\n\tconstructor() {\n\t\t_disableInitializers();\n\t}\n\n\t/**\n\t * @dev Initialize function.\n\t */\n\tfunction initialize() external initializer {\n\t\tMAX_BPS = 100_000;\n\t\t__Ownable2Step_init();\n\t\t__Pausable_init();\n\t}\n\n\t/**\n\t * @dev Modifier that allows only the aggregator to call a function.\n\t */\n\tmodifier onlyAggregator() {\n\t\trequire(msg.sender == _aggregatorAddress, 'OnlyAggregator');\n\t\t_;\n\t}\n\n\t/* ##################################################################\n                                OWNER FUNCTIONS\n    ################################################################## */\n\t/**\n\t * @dev Pause the contract.\n\t */\n\tfunction pause() external onlyOwner {\n\t\t_pause();\n\t}\n\n\t/**\n\t * @dev Unpause the contract.\n\t */\n\tfunction unpause() external onlyOwner {\n\t\t_unpause();\n\t}\n\n\t/* ##################################################################\n                                USER CALLS\n    ################################################################## */\n\t/** @dev See {createOrder-IGateway}. */\n\tfunction createOrder(\n\t\taddress _token,\n\t\tuint256 _amount,\n\t\tuint96 _rate,\n\t\taddress _senderFeeRecipient,\n\t\tuint256 _senderFee,\n\t\taddress _refundAddress,\n\t\tstring calldata messageHash\n\t) external whenNotPaused returns (bytes32 orderId) {\n\t\t// checks that are required\n\t\t_handler(_token, _amount, _refundAddress, _senderFeeRecipient, _senderFee);\n\n\t\t// validate messageHash\n\t\trequire(bytes(messageHash).length != 0, 'InvalidMessageHash');\n\n\t\t// transfer token from msg.sender to contract\n\t\tIERC20(_token).transferFrom(msg.sender, address(this), _amount + _senderFee);\n\n\t\t// increase users nonce to avoid replay attacks\n\t\t_nonce[msg.sender]++;\n\n\t\t// generate transaction id for the transaction\n\t\torderId = keccak256(abi.encode(msg.sender, _nonce[msg.sender]));\n\n\t\t// update transaction\n\t\tuint256 _protocolFee = (_amount * protocolFeePercent) / MAX_BPS;\n\t\torder[orderId] = Order({\n\t\t\tsender: msg.sender,\n\t\t\ttoken: _token,\n\t\t\tsenderFeeRecipient: _senderFeeRecipient,\n\t\t\tsenderFee: _senderFee,\n\t\t\tprotocolFee: _protocolFee,\n\t\t\tisFulfilled: false,\n\t\t\tisRefunded: false,\n\t\t\trefundAddress: _refundAddress,\n\t\t\tcurrentBPS: uint64(MAX_BPS),\n\t\t\tamount: _amount\n\t\t});\n\n\t\t// emit order created event\n\t\temit OrderCreated(\n\t\t\t_refundAddress,\n\t\t\t_token,\n\t\t\torder[orderId].amount,\n\t\t\t_protocolFee,\n\t\t\torderId,\n\t\t\t_rate,\n\t\t\tmessageHash\n\t\t);\n\t}\n\n\t/**\n\t * @dev Internal function to handle order creation.\n\t * @param _token The address of the token being traded.\n\t * @param _amount The amount of tokens being traded.\n\t * @param _refundAddress The address to refund the tokens in case of cancellation.\n\t * @param _senderFeeRecipient The address of the recipient for the sender fee.\n\t * @param _senderFee The amount of the sender fee.\n\t */\n\tfunction _handler(\n\t\taddress _token,\n\t\tuint256 _amount,\n\t\taddress _refundAddress,\n\t\taddress _senderFeeRecipient,\n\t\tuint256 _senderFee\n\t) internal view {\n\t\trequire(_isTokenSupported[_token] == 1, 'TokenNotSupported');\n\t\trequire(_amount != 0, 'AmountIsZero');\n\t\trequire(_refundAddress != address(0), 'ThrowZeroAddress');\n\n\t\tif (_senderFee != 0) {\n\t\t\trequire(_senderFeeRecipient != address(0), 'InvalidSenderFeeRecipient');\n\t\t}\n\t}\n\n\t/* ##################################################################\n                                AGGREGATOR FUNCTIONS\n    ################################################################## */\n\t/** @dev See {settle-IGateway}. */\n\tfunction settle(\n\t\tbytes32 _splitOrderId,\n\t\tbytes32 _orderId,\n\t\taddress _liquidityProvider,\n\t\tuint64 _settlePercent\n\t) external onlyAggregator returns (bool) {\n\t\t// ensure the transaction has not been fulfilled\n\t\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\n\t\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\n\n\t\t// load the token into memory\n\t\taddress token = order[_orderId].token;\n\n\t\t// subtract sum of amount based on the input _settlePercent\n\t\torder[_orderId].currentBPS -= _settlePercent;\n\n\t\tif (order[_orderId].currentBPS == 0) {\n\t\t\t// update the transaction to be fulfilled\n\t\t\torder[_orderId].isFulfilled = true;\n\n\t\t\tif (order[_orderId].senderFee != 0) {\n\t\t\t\t// transfer sender fee\n\t\t\t\tIERC20(order[_orderId].token).transfer(\n\t\t\t\t\torder[_orderId].senderFeeRecipient,\n\t\t\t\t\torder[_orderId].senderFee\n\t\t\t\t);\n\n\t\t\t\t// emit event\n\t\t\t\temit SenderFeeTransferred(\n\t\t\t\t\torder[_orderId].senderFeeRecipient,\n\t\t\t\t\torder[_orderId].senderFee\n\t\t\t\t);\n\t\t\t}\n\n\t\t}\n\n\t\t// transfer to liquidity provider\n\t\tuint256 liquidityProviderAmount = (order[_orderId].amount * _settlePercent) / MAX_BPS;\n\t\torder[_orderId].amount -= liquidityProviderAmount;\n\n\t\tuint256 protocolFee = (liquidityProviderAmount * protocolFeePercent) / MAX_BPS;\n\t\tliquidityProviderAmount -= protocolFee;\n\n\t\t// transfer protocol fee\n\t\tif (protocolFee > 0) IERC20(token).transfer(treasuryAddress, protocolFee);\n\n\t\tIERC20(token).transfer(_liquidityProvider, liquidityProviderAmount);\n\n\t\t// emit settled event\n\t\temit OrderSettled(_splitOrderId, _orderId, _liquidityProvider, _settlePercent);\n\n\t\treturn true;\n\t}\n\n\t/** @dev See {refund-IGateway}. */\n\tfunction refund(uint256 _fee, bytes32 _orderId) external onlyAggregator returns (bool) {\n\t\t// ensure the transaction has not been fulfilled\n\t\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\n\t\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\n\t\trequire(order[_orderId].protocolFee >= _fee, 'FeeExceedsProtocolFee');\n\n\t\tif (_fee > 0) {\n\t\t\t// transfer refund fee to the treasury\n\t\t\tIERC20(order[_orderId].token).transfer(treasuryAddress, _fee);\n\t\t}\n\n\t\t// reset state values\n\t\torder[_orderId].isRefunded = true;\n\t\torder[_orderId].currentBPS = 0;\n\n\t\t// deduct fee from order amount\n\t\tuint256 refundAmount = order[_orderId].amount - _fee;\n\n\t\t// transfer refund amount and sender fee to the refund address\n\t\tIERC20(order[_orderId].token).transfer(\n\t\t\torder[_orderId].refundAddress,\n\t\t\trefundAmount + order[_orderId].senderFee\n\t\t);\n\n\t\t// emit refunded event\n\t\temit OrderRefunded(_fee, _orderId);\n\n\t\treturn true;\n\t}\n\n\t/** @dev See {processSettlement-IGateway}. */\n\tfunction processSettlement(\n        bytes32 _orderId,\n        address _token,\n        uint256 _amount,\n        address _senderFeeRecipient,\n        uint96 _senderFee,\n        address _liquidityProvider,\n\t\tuint96 _protocolFee,\n        address _recipient,\n        uint96 _rate,\n        string calldata _messageHash\n    ) external onlyAggregator returns (bool) {\n\t\trequire(!order[_orderId].isFulfilled, 'OrderNotFulfilled');\n\t\trequire(_amount > 0, 'AmountIsZero');\n\t\trequire(_recipient != address(0), 'RecipientIsZeroAddress');\n\n\t\tuint256 processedAmount = _amount;\n\n\t\tif(_senderFee != 0) {\n\t\t\trequire(_senderFeeRecipient != address(0), \"SenderFeeRecipientIsZeroAddress\");\n\t\t\t\n\t\t\tprocessedAmount -= _senderFee;\n\t\t\t\n\t\t\tIERC20(_token).transfer(\n\t\t\t\t_senderFeeRecipient,\n\t\t\t\t_senderFee\n\t\t\t);\n\n\t\t\temit SenderFeeTransferred(\n\t\t\t\t_senderFeeRecipient,\n\t\t\t\t_senderFee\n\t\t\t);\n\t\t}\n\n\t\tif (_protocolFee > 0) IERC20(_token).transfer(treasuryAddress, _protocolFee);\n\n\t\tIERC20(_token).transfer(_recipient, processedAmount);\n\n\t\t// update the order state\n\t\torder[_orderId].sender = _recipient;\n\t\torder[_orderId].token = _token;\n\t\torder[_orderId].senderFeeRecipient = _senderFeeRecipient;\n\t\torder[_orderId].senderFee = _senderFee;\n\t\torder[_orderId].protocolFee = _protocolFee;\n\t\torder[_orderId].isFulfilled = true;\n\t\torder[_orderId].amount = processedAmount;\n\n\t\t// emit settlement event\n\t\temit ProcessSettlement(\n\t\t\t_orderId,\n\t\t\t_amount,\n\t\t\t_recipient,\n\t\t\t_token,\n\t\t\t_senderFeeRecipient,\n\t\t\t_liquidityProvider,\n\t\t\t_rate,\n\t\t\t_messageHash\n\t\t);\n\n\t\treturn true;\n\t}\n\n\t/* ##################################################################\n                                VIEW CALLS\n    ################################################################## */\n\t/** @dev See {getOrderInfo-IGateway}. */\n\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory) {\n\t\treturn order[_orderId];\n\t}\n\n\t/** @dev See {isTokenSupported-IGateway}. */\n\tfunction isTokenSupported(address _token) external view returns (bool) {\n\t\tif (_isTokenSupported[_token] == 1) return true;\n\t\treturn false;\n\t}\n\n\t/** @dev See {getFeeDetails-IGateway}. */\n\tfunction getFeeDetails() external view returns (uint64, uint256) {\n\t\treturn (protocolFeePercent, MAX_BPS);\n\t}\n}\n"},"contracts/GatewaySettingManager.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\n\n/**\n * @title GatewaySettingManager\n * @dev This contract manages the settings and configurations for the Gateway protocol.\n */\npragma solidity ^0.8.18;\n\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\n\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\n\tuint256 internal MAX_BPS;\n\tuint64 internal protocolFeePercent;\n\taddress internal treasuryAddress;\n\taddress internal _aggregatorAddress;\n\tmapping(address => uint256) internal _isTokenSupported;\n\n\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\n\tuint256[50] private __gap;\n\n\n\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\n\tevent ProtocolFeeUpdated(uint64 protocolFee);\n\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\n\tevent SetFeeRecipient(address indexed treasuryAddress);\n\n\t/* ##################################################################\n                                OWNER FUNCTIONS\n    ################################################################## */\n\n\t/**\n\t * @dev Sets the boolean value for a specific setting.\n\t * @param what The setting to be updated.\n\t * @param value The address or value associated with the setting.\n\t * @param status The boolean value to be set.\n\t * Requirements:\n\t * - The value must not be a zero address.\n\t */\n\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\n\t\trequire(value != address(0), 'Gateway: zero address');\n\t\trequire(status == 1 || status == 2, 'Gateway: invalid status');\n\t\tif (what == 'token') {\n\t\t\t_isTokenSupported[value] = status;\n\t\t\temit SettingManagerBool(what, value, status);\n\t\t}\n\t}\n\n\t/**\n\t * @dev Updates the protocol fee percentage.\n\t * @param _protocolFeePercent The new protocol fee percentage to be set.\n\t */\n\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\n\t\tprotocolFeePercent = _protocolFeePercent;\n\t\temit ProtocolFeeUpdated(_protocolFeePercent);\n\t}\n\n\t/**\n\t * @dev Updates a protocol address.\n\t * @param what The address type to be updated (treasury or aggregator).\n\t * @param value The new address to be set.\n\t * Requirements:\n\t * - The value must not be a zero address.\n\t */\n\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\n\t\trequire(value != address(0), 'Gateway: zero address');\n\t\tbool updated;\n\t\tif (what == 'treasury') {\n\t\t\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\n\t\t\ttreasuryAddress = value;\n\t\t\tupdated = true;\n\t\t} else if (what == 'aggregator') {\n\t\t\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\n\t\t\t_aggregatorAddress = value;\n\t\t\tupdated = true;\n\t\t}\n\t\tif (updated) {\n\t\t\temit ProtocolAddressUpdated(what, value);\n\t\t}\n\t}\n}\n"},"contracts/interfaces/IGateway.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title IGateway\n * @notice Interface for the Gateway contract.\n */\ninterface IGateway {\n    /* ##################################################################\n                                EVENTS\n    ################################################################## */\n    /**\n     * @dev Emitted when a deposit is made.\n     * @param sender The address of the sender.\n     * @param token The address of the deposited token.\n     * @param amount The amount of the deposit.\n     * @param orderId The ID of the order.\n     * @param rate The rate at which the deposit is made.\n     * @param messageHash The hash of the message.\n     */\n    event OrderCreated(\n        address indexed sender,\n        address indexed token,\n        uint256 indexed amount,\n        uint256 protocolFee,\n        bytes32 orderId,\n        uint256 rate,\n        string messageHash\n    );\n\n    /**\n     * @dev Emitted when an aggregator settles a transaction.\n     * @param splitOrderId The ID of the split order.\n     * @param orderId The ID of the order.\n     * @param liquidityProvider The address of the liquidity provider.\n     * @param settlePercent The percentage at which the transaction is settled.\n     */\n    event OrderSettled(\n        bytes32 splitOrderId,\n        bytes32 indexed orderId,\n        address indexed liquidityProvider,\n        uint96 settlePercent\n    );\n\n    /**\n     * @dev Emitted when an aggregator refunds a transaction.\n     * @param fee The fee deducted from the refund amount.\n     * @param orderId The ID of the order.\n     */\n    event OrderRefunded(uint256 fee, bytes32 indexed orderId);\n\n    /**\n     * @dev Emitted when an onramp order is successfully processed\n     */\n    event ProcessSettlement(\n        bytes32 indexed orderId,\n        uint256 indexed amount,\n        address indexed recipient,\n        address token,\n        address senderFee,\n\t\taddress liquidityProvider,\n\t\tuint96 rate,\n\t\tstring messageHash\n    );\n\n    /**\n     * @dev Emitted when the sender's fee is transferred.\n     * @param sender The address of the sender.\n     * @param amount The amount of the fee transferred.\n     */\n    event SenderFeeTransferred(address indexed sender, uint256 indexed amount);\n\n    /* ##################################################################\n                                STRUCTS\n    ################################################################## */\n    /**\n     * @dev Struct representing an order.\n     * @param sender The address of the sender.\n     * @param token The address of the token.\n     * @param senderFeeRecipient The address of the sender fee recipient.\n     * @param senderFee The fee to be paid to the sender fee recipient.\n     * @param protocolFee The protocol fee to be paid.\n     * @param isFulfilled Whether the order is fulfilled.\n     * @param isRefunded Whether the order is refunded.\n     * @param refundAddress The address to which the refund is made.\n     * @param currentBPS The current basis points.\n     * @param amount The amount of the order.\n     */\n    struct Order {\n        address sender;\n        address token;\n        address senderFeeRecipient;\n        uint256 senderFee;\n        uint256 protocolFee;\n        bool isFulfilled;\n        bool isRefunded;\n        address refundAddress;\n        uint96 currentBPS;\n        uint256 amount;\n    }\n\n    /* ##################################################################\n                                EXTERNAL CALLS\n    ################################################################## */\n    /**\n     * @notice Locks the sender's amount of token into Gateway.\n     * @dev Requirements:\n     * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\n     * - `_token` must be an acceptable token. See {isTokenSupported}.\n     * - `amount` must be greater than minimum.\n     * - `_refundAddress` refund address must not be zero address.\n     * @param _token The address of the token.\n     * @param _amount The amount in the decimal of `_token` to be locked.\n     * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\n     * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\n     * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\n     * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\n     * @param messageHash The hash of the message.\n     * @return _orderId The ID of the order.\n     */\n    function createOrder(\n        address _token,\n        uint256 _amount,\n        uint96 _rate,\n        address _senderFeeRecipient,\n        uint256 _senderFee,\n        address _refundAddress,\n        string calldata messageHash\n    ) external returns (bytes32 _orderId);\n\n    /**\n     * @notice Settles a transaction and distributes rewards accordingly.\n     * @param _splitOrderId The ID of the split order.\n     * @param _orderId The ID of the transaction.\n     * @param _liquidityProvider The address of the liquidity provider.\n     * @param _settlePercent The rate at which the transaction is settled.\n     * @return bool the settlement is successful.\n     */\n    function settle(\n        bytes32 _splitOrderId,\n        bytes32 _orderId,\n        address _liquidityProvider,\n        uint64 _settlePercent\n    ) external returns (bool);\n\n    /**\n     * @notice Refunds to the specified refundable address.\n     * @dev Requirements:\n     * - Only aggregators can call this function.\n     * @param _fee The amount to be deducted from the amount to be refunded.\n     * @param _orderId The ID of the transaction.\n     * @return bool the refund is successful.\n     */\n    function refund(uint256 _fee, bytes32 _orderId) external returns (bool);\n\n    /**\n     * @notice Process an onramp order for cryptocurrency purchase\n     * @dev This function is restricted to be called only by an authorized aggregator\n     * @dev It processes an onramp orders and transfers tokens to the user\n     * @param _orderId Unique identifier for the order being processed\n     * @param _token Address of the token to be sent to the user\n     * @param _amount Amount of tokens to be sent to the user\n     * @param _senderFeeRecipient Address that will receive the sender fee\n     * @param _senderFee Amount of fee to be paid to the sender fee recipient\n     * @param _liquidityProvider Address of the liquidity provider\n     * @param _recipient Address of the recipient who will receive the tokens\n     * @param _rate Rate at which the tokens are being sent\n     * @param _messageHash Hash of the message associated with the order\n     * @return success Boolean indicating if the operation was successful\n     */\n    function processSettlement(\n        bytes32 _orderId,\n        address _token,\n        uint256 _amount,\n        address _senderFeeRecipient,\n        uint96 _senderFee,\n        address _liquidityProvider,\n        uint96 _protocolFee,\n        address _recipient,\n        uint96 _rate,\n        string calldata _messageHash\n    ) external returns (bool);\n\n    /**\n     * @notice Checks if a token is supported by Gateway.\n     * @param _token The address of the token to check.\n     * @return bool the token is supported.\n     */\n    function isTokenSupported(address _token) external view returns (bool);\n\n    /**\n     * @notice Gets the details of an order.\n     * @param _orderId The ID of the order.\n     * @return Order The order details.\n     */\n    function getOrderInfo(\n        bytes32 _orderId\n    ) external view returns (Order memory);\n\n    /**\n     * @notice Gets the fee details of Gateway.\n     * @return protocolReward The protocol reward amount.\n     * @return max_bps The maximum basis points.\n     */\n    function getFeeDetails()\n        external\n        view\n        returns (uint64 protocolReward, uint256 max_bps);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"Ownable2StepUpgradeable":[106],"OwnableUpgradeable":[239]},"id":107,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"./OwnableUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":107,"sourceUnit":240,"src":"132:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":107,"sourceUnit":409,"src":"167:63:0","symbolAliases":[{"foreign":{"id":3,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"175:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"Initializable","nameLocations":["719:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"719:13:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"719:13:0"},{"baseName":{"id":8,"name":"OwnableUpgradeable","nameLocations":["734:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":239,"src":"734:18:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"734:18:0"}],"canonicalName":"Ownable2StepUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"232:441:0","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":106,"linearizedBaseContracts":[106,239,917,408],"name":"Ownable2StepUpgradeable","nameLocation":"692:23:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11,"mutability":"mutable","name":"_pendingOwner","nameLocation":"775:13:0","nodeType":"VariableDeclaration","scope":106,"src":"759:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"759:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":17,"name":"OwnershipTransferStarted","nameLocation":"801:24:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"842:13:0","nodeType":"VariableDeclaration","scope":17,"src":"826:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"873:8:0","nodeType":"VariableDeclaration","scope":17,"src":"857:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"825:57:0"},"src":"795:88:0"},{"body":{"id":25,"nodeType":"Block","src":"946:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"956:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"956:26:0"}]},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nameLocations":["929:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"929:16:0"},"nodeType":"ModifierInvocation","src":"929:16:0"}],"name":"__Ownable2Step_init","nameLocation":"898:19:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"917:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"946:0:0"},"scope":106,"src":"889:100:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"1062:7:0","statements":[]},"id":32,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nameLocations":["1045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1045:16:0"},"nodeType":"ModifierInvocation","src":"1045:16:0"}],"name":"__Ownable2Step_init_unchained","nameLocation":"1004:29:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1033:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1062:0:0"},"scope":106,"src":"995:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":40,"nodeType":"Block","src":"1206:37:0","statements":[{"expression":{"id":38,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1223:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":37,"id":39,"nodeType":"Return","src":"1216:20:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1074:65:0","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":41,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"1153:12:0","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"1165:2:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41,"src":"1197:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1196:9:0"},"scope":106,"src":"1144:99:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":60,"nodeType":"Block","src":"1515:99:0","statements":[{"expression":{"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":50,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1525:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":51,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1541:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1525:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":53,"nodeType":"ExpressionStatement","src":"1525:24:0"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":55,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1589:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1589:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":57,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1598:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":54,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1564:24:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59,"nodeType":"EmitStatement","src":"1559:48:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1249:182:0","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":61,"implemented":true,"kind":"function","modifiers":[{"id":48,"kind":"modifierInvocation","modifierName":{"id":47,"name":"onlyOwner","nameLocations":["1505:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1505:9:0"},"nodeType":"ModifierInvocation","src":"1505:9:0"}],"name":"transferOwnership","nameLocation":"1445:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"1496:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"newOwner","nameLocation":"1471:8:0","nodeType":"VariableDeclaration","scope":61,"src":"1463:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:18:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[],"src":"1515:0:0"},"scope":106,"src":"1436:178:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[233],"body":{"id":77,"nodeType":"Block","src":"1870:81:0","statements":[{"expression":{"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1880:20:0","subExpression":{"id":68,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1887:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":70,"nodeType":"ExpressionStatement","src":"1880:20:0"},{"expression":{"arguments":[{"id":74,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"1935:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":71,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1910:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2StepUpgradeable_$106_$","typeString":"type(contract super Ownable2StepUpgradeable)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1916:18:0","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":233,"src":"1910:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":76,"nodeType":"ExpressionStatement","src":"1910:34:0"}]},"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"1620:173:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":78,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1807:18:0","nodeType":"FunctionDefinition","overrides":{"id":66,"nodeType":"OverrideSpecifier","overrides":[],"src":"1861:8:0"},"parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"newOwner","nameLocation":"1834:8:0","nodeType":"VariableDeclaration","scope":78,"src":"1826:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1825:18:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"1870:0:0"},"scope":106,"src":"1798:153:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":99,"nodeType":"Block","src":"2073:170:0","statements":[{"assignments":[83],"declarations":[{"constant":false,"id":83,"mutability":"mutable","name":"sender","nameLocation":"2091:6:0","nodeType":"VariableDeclaration","scope":99,"src":"2083:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":86,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2100:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2100:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2083:29:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2130:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":90,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2148:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2130:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2156:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""},"value":"Ownable2Step: caller is not the new owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""}],"id":87,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2122:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":94,"nodeType":"ExpressionStatement","src":"2122:78:0"},{"expression":{"arguments":[{"id":96,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2229:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":95,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[78],"referencedDeclaration":78,"src":"2210:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2210:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"2210:26:0"}]},"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1957:69:0","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":100,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"2040:15:0","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"2055:2:0"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[],"src":"2073:0:0"},"scope":106,"src":"2031:212:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"2249:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":105,"mutability":"mutable","name":"__gap","nameLocation":"2528:5:0","nodeType":"VariableDeclaration","scope":106,"src":"2508:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":104,"length":{"hexValue":"3439","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2516:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2508:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":107,"src":"674:1862:0","usedErrors":[]}],"src":"107:2430:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"OwnableUpgradeable":[239]},"id":240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":108,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":240,"sourceUnit":918,"src":"127:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":240,"sourceUnit":409,"src":"169:63:1","symbolAliases":[{"foreign":{"id":110,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"177:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":113,"name":"Initializable","nameLocations":["769:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"769:13:1"},"id":114,"nodeType":"InheritanceSpecifier","src":"769:13:1"},{"baseName":{"id":115,"name":"ContextUpgradeable","nameLocations":["784:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":917,"src":"784:18:1"},"id":116,"nodeType":"InheritanceSpecifier","src":"784:18:1"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"234:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":239,"linearizedBaseContracts":[239,917,408],"name":"OwnableUpgradeable","nameLocation":"747:18:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":118,"mutability":"mutable","name":"_owner","nameLocation":"825:6:1","nodeType":"VariableDeclaration","scope":239,"src":"809:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":124,"name":"OwnershipTransferred","nameLocation":"844:20:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"881:13:1","nodeType":"VariableDeclaration","scope":124,"src":"865:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"912:8:1","nodeType":"VariableDeclaration","scope":124,"src":"896:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:57:1"},"src":"838:84:1"},{"body":{"id":133,"nodeType":"Block","src":"1076:43:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":130,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1086:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"1086:26:1"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"928:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":134,"implemented":true,"kind":"function","modifiers":[{"id":128,"kind":"modifierInvocation","modifierName":{"id":127,"name":"onlyInitializing","nameLocations":["1059:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1059:16:1"},"nodeType":"ModifierInvocation","src":"1059:16:1"}],"name":"__Ownable_init","nameLocation":"1033:14:1","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"1047:2:1"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"1076:0:1"},"scope":239,"src":"1024:95:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":144,"nodeType":"Block","src":"1187:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":140,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1216:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1197:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"1197:32:1"}]},"id":145,"implemented":true,"kind":"function","modifiers":[{"id":137,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyInitializing","nameLocations":["1170:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1170:16:1"},"nodeType":"ModifierInvocation","src":"1170:16:1"}],"name":"__Ownable_init_unchained","nameLocation":"1134:24:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"1158:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"1187:0:1"},"scope":239,"src":"1125:111:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"1345:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":148,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1355:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"1355:13:1"},{"id":151,"nodeType":"PlaceholderStatement","src":"1378:1:1"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"1242:77:1","text":" @dev Throws if called by any account other than the owner."},"id":153,"name":"onlyOwner","nameLocation":"1333:9:1","nodeType":"ModifierDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"1342:2:1"},"src":"1324:62:1","virtual":false,"visibility":"internal"},{"body":{"id":161,"nodeType":"Block","src":"1517:30:1","statements":[{"expression":{"id":159,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1534:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":158,"id":160,"nodeType":"Return","src":"1527:13:1"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1392:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":162,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1471:5:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"1476:2:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":162,"src":"1508:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:9:1"},"scope":239,"src":"1462:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1665:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1683:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1694:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1675:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1675:68:1"}]},"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"1553:62:1","text":" @dev Throws if the sender is not the owner."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1629:11:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"1640:2:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"1665:0:1"},"scope":239,"src":"1620:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"2139:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:1","typeDescriptions":{}}},"id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":182,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2149:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"2149:30:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1756:324:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":190,"implemented":true,"kind":"function","modifiers":[{"id":180,"kind":"modifierInvocation","modifierName":{"id":179,"name":"onlyOwner","nameLocations":["2129:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2129:9:1"},"nodeType":"ModifierInvocation","src":"2129:9:1"}],"name":"renounceOwnership","nameLocation":"2094:17:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"2111:2:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"2139:0:1"},"scope":239,"src":"2085:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":212,"nodeType":"Block","src":"2405:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":199,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2423:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:1","typeDescriptions":{}}},"id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2435:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2423:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2415:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"2415:73:1"},{"expression":{"arguments":[{"id":209,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2517:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":208,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2498:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"2498:28:1"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2192:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":213,"implemented":true,"kind":"function","modifiers":[{"id":196,"kind":"modifierInvocation","modifierName":{"id":195,"name":"onlyOwner","nameLocations":["2395:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2395:9:1"},"nodeType":"ModifierInvocation","src":"2395:9:1"}],"name":"transferOwnership","nameLocation":"2344:17:1","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"newOwner","nameLocation":"2370:8:1","nodeType":"VariableDeclaration","scope":213,"src":"2362:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2361:18:1"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"2405:0:1"},"scope":239,"src":"2335:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":232,"nodeType":"Block","src":"2750:124:1","statements":[{"assignments":[220],"declarations":[{"constant":false,"id":220,"mutability":"mutable","name":"oldOwner","nameLocation":"2768:8:1","nodeType":"VariableDeclaration","scope":232,"src":"2760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"2760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":222,"initialValue":{"id":221,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2779:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2760:25:1"},{"expression":{"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":223,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2795:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":224,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2804:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2795:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":226,"nodeType":"ExpressionStatement","src":"2795:17:1"},{"eventCall":{"arguments":[{"id":228,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2848:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2858:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2827:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"EmitStatement","src":"2822:45:1"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2539:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":233,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2696:18:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"newOwner","nameLocation":"2723:8:1","nodeType":"VariableDeclaration","scope":233,"src":"2715:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:18:1"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"2750:0:1"},"scope":239,"src":"2687:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"2880:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":238,"mutability":"mutable","name":"__gap","nameLocation":"3159:5:1","nodeType":"VariableDeclaration","scope":239,"src":"3139:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":237,"length":{"hexValue":"3439","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3139:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":240,"src":"729:2438:1","usedErrors":[]}],"src":"102:3066:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[866],"Initializable":[408]},"id":409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":241,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":409,"sourceUnit":867,"src":"138:44:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"184:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":408,"linearizedBaseContracts":[408],"name":"Initializable","nameLocation":"2412:13:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"2432:109:2","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":246,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:2","nodeType":"VariableDeclaration","scope":408,"src":"2546:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":245,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2579:91:2","text":" @dev Indicates that the contract is in the process of being initialized."},"id":249,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:2","nodeType":"VariableDeclaration","scope":408,"src":"2675:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":248,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"2708:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":254,"name":"Initialized","nameLocation":"2809:11:2","nodeType":"EventDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:2","nodeType":"VariableDeclaration","scope":254,"src":"2821:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":251,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:2"},"src":"2803:33:2"},{"body":{"id":309,"nodeType":"Block","src":"3269:483:2","statements":[{"assignments":[258],"declarations":[{"constant":false,"id":258,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:2","nodeType":"VariableDeclaration","scope":309,"src":"3279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":257,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:2","subExpression":{"id":259,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3302:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3347:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":264,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3365:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:2","subExpression":{"arguments":[{"arguments":[{"id":273,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$408","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$408","typeString":"contract Initializable"}],"id":272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:2","typeDescriptions":{}}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":269,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3388:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$866_$","typeString":"type(library AddressUpgradeable)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":554,"src":"3388:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3436:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"ExpressionStatement","src":"3325:201:2"},{"expression":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":286,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3536:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":289,"nodeType":"ExpressionStatement","src":"3536:16:2"},{"condition":{"id":290,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3566:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":296,"nodeType":"IfStatement","src":"3562:65:2","trueBody":{"id":295,"nodeType":"Block","src":"3582:45:2","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":291,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3596:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"3596:20:2"}]}},{"id":297,"nodeType":"PlaceholderStatement","src":"3636:1:2"},{"condition":{"id":298,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3651:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":308,"nodeType":"IfStatement","src":"3647:99:2","trueBody":{"id":307,"nodeType":"Block","src":"3667:79:2","statements":[{"expression":{"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":299,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3681:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":302,"nodeType":"ExpressionStatement","src":"3681:21:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":303,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3721:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"3716:19:2"}]}}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"2842:399:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":310,"name":"initializer","nameLocation":"3255:11:2","nodeType":"ModifierDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"3266:2:2"},"src":"3246:506:2","virtual":false,"visibility":"internal"},{"body":{"id":342,"nodeType":"Block","src":"4863:255:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:2","subExpression":{"id":316,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"4882:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"4899:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":319,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4914:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4873:99:2"},{"expression":{"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":325,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"4982:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":326,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4997:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":328,"nodeType":"ExpressionStatement","src":"4982:22:2"},{"expression":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":329,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5014:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":332,"nodeType":"ExpressionStatement","src":"5014:20:2"},{"id":333,"nodeType":"PlaceholderStatement","src":"5044:1:2"},{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":334,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5055:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":337,"nodeType":"ExpressionStatement","src":"5055:21:2"},{"eventCall":{"arguments":[{"id":339,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"5103:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":338,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5091:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"EmitStatement","src":"5086:25:2"}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"3758:1062:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":343,"name":"reinitializer","nameLocation":"4834:13:2","nodeType":"ModifierDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"version","nameLocation":"4854:7:2","nodeType":"VariableDeclaration","scope":343,"src":"4848:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":312,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:2"},"src":"4825:293:2","virtual":false,"visibility":"internal"},{"body":{"id":352,"nodeType":"Block","src":"5356:97:2","statements":[{"expression":{"arguments":[{"id":347,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5374:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":350,"nodeType":"ExpressionStatement","src":"5366:69:2"},{"id":351,"nodeType":"PlaceholderStatement","src":"5445:1:2"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"5124:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":353,"name":"onlyInitializing","nameLocation":"5337:16:2","nodeType":"ModifierDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"5353:2:2"},"src":"5328:125:2","virtual":false,"visibility":"internal"},{"body":{"id":388,"nodeType":"Block","src":"5988:231:2","statements":[{"expression":{"arguments":[{"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:2","subExpression":{"id":358,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6007:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"5998:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6078:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":365,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:2","memberName":"max","nodeType":"MemberAccess","src":"6094:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":387,"nodeType":"IfStatement","src":"6074:139:2","trueBody":{"id":386,"nodeType":"Block","src":"6111:102:2","statements":[{"expression":{"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6125:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":372,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:2","memberName":"max","nodeType":"MemberAccess","src":"6140:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":377,"nodeType":"ExpressionStatement","src":"6125:30:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":380,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:2","memberName":"max","nodeType":"MemberAccess","src":"6186:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":378,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6174:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"EmitStatement","src":"6169:33:2"}]}}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"5459:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:2","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"5968:2:2"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"5988:0:2"},"scope":408,"src":"5939:280:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":397,"nodeType":"Block","src":"6393:36:2","statements":[{"expression":{"id":395,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6410:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":394,"id":396,"nodeType":"Return","src":"6403:19:2"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"6225:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":398,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"6360:2:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":398,"src":"6386:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":392,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:2"},"scope":408,"src":"6329:100:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"6601:37:2","statements":[{"expression":{"id":404,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6618:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":403,"id":405,"nodeType":"Return","src":"6611:20:2"}]},"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"6435:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:2","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"6569:2:2"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"6595:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:2"},"scope":408,"src":"6545:93:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":409,"src":"2394:4246:2","usedErrors":[]}],"src":"113:6528:2"},"id":2},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"PausableUpgradeable":[536]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":410,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":918,"src":"130:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":409,"src":"172:63:3","symbolAliases":[{"foreign":{"id":412,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"180:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":415,"name":"Initializable","nameLocations":["718:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"718:13:3"},"id":416,"nodeType":"InheritanceSpecifier","src":"718:13:3"},{"baseName":{"id":417,"name":"ContextUpgradeable","nameLocations":["733:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":917,"src":"733:18:3"},"id":418,"nodeType":"InheritanceSpecifier","src":"733:18:3"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"237:439:3","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":536,"linearizedBaseContracts":[536,917,408],"name":"PausableUpgradeable","nameLocation":"695:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"758:73:3","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":423,"name":"Paused","nameLocation":"842:6:3","nodeType":"EventDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"857:7:3","nodeType":"VariableDeclaration","scope":423,"src":"849:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"848:17:3"},"src":"836:30:3"},{"anonymous":false,"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"872:70:3","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":428,"name":"Unpaused","nameLocation":"953:8:3","nodeType":"EventDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"970:7:3","nodeType":"VariableDeclaration","scope":428,"src":"962:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"961:17:3"},"src":"947:32:3"},{"constant":false,"id":430,"mutability":"mutable","name":"_paused","nameLocation":"998:7:3","nodeType":"VariableDeclaration","scope":536,"src":"985:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":429,"name":"bool","nodeType":"ElementaryTypeName","src":"985:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":439,"nodeType":"Block","src":"1137:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1147:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"1147:27:3"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1012:67:3","text":" @dev Initializes the contract in unpaused state."},"id":440,"implemented":true,"kind":"function","modifiers":[{"id":434,"kind":"modifierInvocation","modifierName":{"id":433,"name":"onlyInitializing","nameLocations":["1120:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1120:16:3"},"nodeType":"ModifierInvocation","src":"1120:16:3"}],"name":"__Pausable_init","nameLocation":"1093:15:3","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1108:2:3"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"1137:0:3"},"scope":536,"src":"1084:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":449,"nodeType":"Block","src":"1250:32:3","statements":[{"expression":{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":445,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"1260:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1270:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1260:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":448,"nodeType":"ExpressionStatement","src":"1260:15:3"}]},"id":450,"implemented":true,"kind":"function","modifiers":[{"id":443,"kind":"modifierInvocation","modifierName":{"id":442,"name":"onlyInitializing","nameLocations":["1233:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1233:16:3"},"nodeType":"ModifierInvocation","src":"1233:16:3"}],"name":"__Pausable_init_unchained","nameLocation":"1196:25:3","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1221:2:3"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"1250:0:3"},"scope":536,"src":"1187:95:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"1493:47:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"1503:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1503:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1503:19:3"},{"id":456,"nodeType":"PlaceholderStatement","src":"1532:1:3"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"1288:175:3","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":458,"name":"whenNotPaused","nameLocation":"1477:13:3","nodeType":"ModifierDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"1490:2:3"},"src":"1468:72:3","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"1740:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":461,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"1750:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"1750:16:3"},{"id":464,"nodeType":"PlaceholderStatement","src":"1776:1:3"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"1546:167:3","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":466,"name":"whenPaused","nameLocation":"1727:10:3","nodeType":"ModifierDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"1737:2:3"},"src":"1718:66:3","virtual":false,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"1932:31:3","statements":[{"expression":{"id":472,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"1949:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":471,"id":473,"nodeType":"Return","src":"1942:14:3"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"1790:84:3","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1888:6:3","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"1894:2:3"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"1926:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":469,"name":"bool","nodeType":"ElementaryTypeName","src":"1926:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1925:6:3"},"scope":536,"src":"1879:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":486,"nodeType":"Block","src":"2082:55:3","statements":[{"expression":{"arguments":[{"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2100:9:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2101:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2111:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2092:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2092:38:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1969:57:3","text":" @dev Throws if the contract is paused."},"id":487,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2040:17:3","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"2057:2:3"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[],"src":"2082:0:3"},"scope":536,"src":"2031:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"2257:58:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":492,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2275:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2275:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2285:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2267:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"2267:41:3"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"2143:61:3","text":" @dev Throws if the contract is not paused."},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2218:14:3","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"2232:2:3"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2257:0:3"},"scope":536,"src":"2209:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":513,"nodeType":"Block","src":"2499:66:3","statements":[{"expression":{"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":504,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2509:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2519:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2509:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":507,"nodeType":"ExpressionStatement","src":"2509:14:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":509,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2545:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2538:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"EmitStatement","src":"2533:25:3"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"2321:124:3","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":514,"implemented":true,"kind":"function","modifiers":[{"id":502,"kind":"modifierInvocation","modifierName":{"id":501,"name":"whenNotPaused","nameLocations":["2485:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"2485:13:3"},"nodeType":"ModifierInvocation","src":"2485:13:3"}],"name":"_pause","nameLocation":"2459:6:3","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"2465:2:3"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2499:0:3"},"scope":536,"src":"2450:115:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":529,"nodeType":"Block","src":"2745:69:3","statements":[{"expression":{"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":520,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2755:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2765:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2755:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":523,"nodeType":"ExpressionStatement","src":"2755:15:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":525,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2794:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":524,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2785:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"EmitStatement","src":"2780:27:3"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2571:121:3","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":530,"implemented":true,"kind":"function","modifiers":[{"id":518,"kind":"modifierInvocation","modifierName":{"id":517,"name":"whenPaused","nameLocations":["2734:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":466,"src":"2734:10:3"},"nodeType":"ModifierInvocation","src":"2734:10:3"}],"name":"_unpause","nameLocation":"2706:8:3","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"2714:2:3"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"2745:0:3"},"scope":536,"src":"2697:117:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2820:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":535,"mutability":"mutable","name":"__gap","nameLocation":"3099:5:3","nodeType":"VariableDeclaration","scope":536,"src":"3079:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"3079:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":534,"length":{"hexValue":"3439","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3087:2:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3079:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":537,"src":"677:2430:3","usedErrors":[]}],"src":"105:3003:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[866]},"id":867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":866,"linearizedBaseContracts":[866],"name":"AddressUpgradeable","nameLocation":"202:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":553,"nodeType":"Block","src":"1489:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":547,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"1713:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:4","memberName":"code","nodeType":"MemberAccess","src":"1713:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:4","memberName":"length","nodeType":"MemberAccess","src":"1713:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":546,"id":552,"nodeType":"Return","src":"1706:30:4"}]},"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"227:1191:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:4","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"account","nameLocation":"1451:7:4","nodeType":"VariableDeclaration","scope":554,"src":"1443:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:4"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"1483:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:4"},"scope":866,"src":"1423:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"2729:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":565,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:4","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:4","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2772:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"ExpressionStatement","src":"2739:73:4"},{"assignments":[574,null],"declarations":[{"constant":false,"id":574,"mutability":"mutable","name":"success","nameLocation":"2829:7:4","nodeType":"VariableDeclaration","scope":587,"src":"2824:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":573,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":581,"initialValue":{"arguments":[{"hexValue":"","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":575,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"2842:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:4","memberName":"call","nodeType":"MemberAccess","src":"2842:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2864:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:4"},{"expression":{"arguments":[{"id":583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"2893:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"2885:78:4"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"1749:904:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:4","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:4","nodeType":"VariableDeclaration","scope":588,"src":"2677:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"amount","nameLocation":"2712:6:4","nodeType":"VariableDeclaration","scope":588,"src":"2704:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"2729:0:4"},"scope":866,"src":"2658:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"3801:96:4","statements":[{"expression":{"arguments":[{"id":599,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3840:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3848:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":598,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"3818:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":597,"id":604,"nodeType":"Return","src":"3811:79:4"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"2976:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:4","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"target","nameLocation":"3742:6:4","nodeType":"VariableDeclaration","scope":606,"src":"3734:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"data","nameLocation":"3763:4:4","nodeType":"VariableDeclaration","scope":606,"src":"3750:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":592,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:4"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"3787:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":595,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:4"},"scope":866,"src":"3712:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"4266:76:4","statements":[{"expression":{"arguments":[{"id":619,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4305:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4313:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":622,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4322:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":618,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"4283:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":617,"id":624,"nodeType":"Return","src":"4276:59:4"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3903:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":626,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:4","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"target","nameLocation":"4158:6:4","nodeType":"VariableDeclaration","scope":626,"src":"4150:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"data","nameLocation":"4187:4:4","nodeType":"VariableDeclaration","scope":626,"src":"4174:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:4","nodeType":"VariableDeclaration","scope":626,"src":"4201:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":612,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:4"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":626,"src":"4252:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:4"},"scope":866,"src":"4119:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":645,"nodeType":"Block","src":"4817:111:4","statements":[{"expression":{"arguments":[{"id":639,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4856:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4864:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4870:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":638,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"4834:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":637,"id":644,"nodeType":"Return","src":"4827:94:4"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"4348:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:4","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"target","nameLocation":"4743:6:4","nodeType":"VariableDeclaration","scope":646,"src":"4735:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"data","nameLocation":"4764:4:4","nodeType":"VariableDeclaration","scope":646,"src":"4751:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":630,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"value","nameLocation":"4778:5:4","nodeType":"VariableDeclaration","scope":646,"src":"4770:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:4"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":646,"src":"4803:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":635,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:4"},"scope":866,"src":"4704:224:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"5355:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}],"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:4","typeDescriptions":{}}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:4","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"5398:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"5365:81:4"},{"assignments":[672,674],"declarations":[{"constant":false,"id":672,"mutability":"mutable","name":"success","nameLocation":"5462:7:4","nodeType":"VariableDeclaration","scope":689,"src":"5457:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":671,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:4","nodeType":"VariableDeclaration","scope":689,"src":"5471:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":673,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":681,"initialValue":{"arguments":[{"id":679,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5524:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":675,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5498:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:4","memberName":"call","nodeType":"MemberAccess","src":"5498:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"5517:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:4"},{"expression":{"arguments":[{"id":683,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5573:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5581:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":685,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5590:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":686,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5602:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":682,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5546:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":659,"id":688,"nodeType":"Return","src":"5539:76:4"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"4934:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:4","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"target","nameLocation":"5224:6:4","nodeType":"VariableDeclaration","scope":690,"src":"5216:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"data","nameLocation":"5253:4:4","nodeType":"VariableDeclaration","scope":690,"src":"5240:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"value","nameLocation":"5275:5:4","nodeType":"VariableDeclaration","scope":690,"src":"5267:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:4","nodeType":"VariableDeclaration","scope":690,"src":"5290:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:4"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"5341:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":657,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:4"},"scope":866,"src":"5176:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"5899:97:4","statements":[{"expression":{"arguments":[{"id":701,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"5935:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":702,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5943:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":700,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[707,736],"referencedDeclaration":736,"src":"5916:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":699,"id":705,"nodeType":"Return","src":"5909:80:4"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"5628:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:4","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"target","nameLocation":"5835:6:4","nodeType":"VariableDeclaration","scope":707,"src":"5827:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"data","nameLocation":"5856:4:4","nodeType":"VariableDeclaration","scope":707,"src":"5843:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":694,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:4"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"5885:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:4"},"scope":866,"src":"5799:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"6338:168:4","statements":[{"assignments":[720,722],"declarations":[{"constant":false,"id":720,"mutability":"mutable","name":"success","nameLocation":"6354:7:4","nodeType":"VariableDeclaration","scope":735,"src":"6349:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":719,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:4","nodeType":"VariableDeclaration","scope":735,"src":"6363:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":721,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":727,"initialValue":{"arguments":[{"id":725,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6408:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":723,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6390:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:4","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:4"},{"expression":{"arguments":[{"id":729,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6457:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6465:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":731,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6474:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":732,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6486:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":728,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6430:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":718,"id":734,"nodeType":"Return","src":"6423:76:4"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6002:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:4","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"target","nameLocation":"6225:6:4","nodeType":"VariableDeclaration","scope":736,"src":"6217:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"data","nameLocation":"6254:4:4","nodeType":"VariableDeclaration","scope":736,"src":"6241:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:4","nodeType":"VariableDeclaration","scope":736,"src":"6268:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":713,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:4"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"6324:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":716,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:4"},"scope":866,"src":"6180:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"6782:101:4","statements":[{"expression":{"arguments":[{"id":747,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6820:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6828:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":746,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[753,782],"referencedDeclaration":782,"src":"6799:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":745,"id":751,"nodeType":"Return","src":"6792:84:4"}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"6512:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:4","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"target","nameLocation":"6723:6:4","nodeType":"VariableDeclaration","scope":753,"src":"6715:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"data","nameLocation":"6744:4:4","nodeType":"VariableDeclaration","scope":753,"src":"6731:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":740,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:4"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"6768:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:4"},"scope":866,"src":"6685:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":781,"nodeType":"Block","src":"7224:170:4","statements":[{"assignments":[766,768],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"success","nameLocation":"7240:7:4","nodeType":"VariableDeclaration","scope":781,"src":"7235:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":765,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:4","nodeType":"VariableDeclaration","scope":781,"src":"7249:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":767,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":773,"initialValue":{"arguments":[{"id":771,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7296:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":769,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7276:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:4","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:4"},{"expression":{"arguments":[{"id":775,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7345:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"7353:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":777,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7362:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":778,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"7374:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":774,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"7318:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":764,"id":780,"nodeType":"Return","src":"7311:76:4"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"6889:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:4","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"target","nameLocation":"7116:6:4","nodeType":"VariableDeclaration","scope":782,"src":"7108:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"data","nameLocation":"7145:4:4","nodeType":"VariableDeclaration","scope":782,"src":"7132:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:4","nodeType":"VariableDeclaration","scope":782,"src":"7159:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":759,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:4"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":782,"src":"7210:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:4"},"scope":866,"src":"7069:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":820,"nodeType":"Block","src":"7876:434:4","statements":[{"condition":{"id":796,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7890:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":818,"nodeType":"Block","src":"8246:58:4","statements":[{"expression":{"arguments":[{"id":814,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8268:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":815,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"8280:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":813,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8260:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"8260:33:4"}]},"id":819,"nodeType":"IfStatement","src":"7886:418:4","trueBody":{"id":812,"nodeType":"Block","src":"7899:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":797,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7917:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:4","memberName":"length","nodeType":"MemberAccess","src":"7917:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"7913:286:4","trueBody":{"id":808,"nodeType":"Block","src":"7941:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":803,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"8143:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":802,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"8132:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"8124:60:4"}]}},{"expression":{"id":810,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8219:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":795,"id":811,"nodeType":"Return","src":"8212:17:4"}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"7400:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":821,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:4","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"target","nameLocation":"7735:6:4","nodeType":"VariableDeclaration","scope":821,"src":"7727:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"success","nameLocation":"7756:7:4","nodeType":"VariableDeclaration","scope":821,"src":"7751:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":786,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:4","nodeType":"VariableDeclaration","scope":821,"src":"7773:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:4","nodeType":"VariableDeclaration","scope":821,"src":"7806:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":790,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:4"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"7862:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:4"},"scope":866,"src":"7682:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"8691:135:4","statements":[{"condition":{"id":833,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"8705:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":842,"nodeType":"Block","src":"8762:58:4","statements":[{"expression":{"arguments":[{"id":838,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8784:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":839,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8796:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":837,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8776:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"8776:33:4"}]},"id":843,"nodeType":"IfStatement","src":"8701:119:4","trueBody":{"id":836,"nodeType":"Block","src":"8714:42:4","statements":[{"expression":{"id":834,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8735:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":832,"id":835,"nodeType":"Return","src":"8728:17:4"}]}}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"8316:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:4","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"success","nameLocation":"8571:7:4","nodeType":"VariableDeclaration","scope":845,"src":"8566:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":823,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:4","nodeType":"VariableDeclaration","scope":845,"src":"8588:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:4","nodeType":"VariableDeclaration","scope":845,"src":"8621:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":827,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:4"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":845,"src":"8677:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:4"},"scope":866,"src":"8531:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"8915:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":852,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"8991:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:4","memberName":"length","nodeType":"MemberAccess","src":"8991:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":862,"nodeType":"Block","src":"9321:45:4","statements":[{"expression":{"arguments":[{"id":859,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"9342:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":858,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"9335:20:4"}]},"id":863,"nodeType":"IfStatement","src":"8987:379:4","trueBody":{"id":857,"nodeType":"Block","src":"9014:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:4"},"nodeType":"YulFunctionCall","src":"9213:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:4"},"nodeType":"YulFunctionCall","src":"9254:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:4"},"nodeType":"YulFunctionCall","src":"9247:44:4"},"nodeType":"YulExpressionStatement","src":"9247:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":847,"isOffset":false,"isSlot":false,"src":"9219:10:4","valueSize":1},{"declaration":847,"isOffset":false,"isSlot":false,"src":"9262:10:4","valueSize":1}],"id":856,"nodeType":"InlineAssembly","src":"9163:142:4"}]}}]},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:4","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:4","nodeType":"VariableDeclaration","scope":865,"src":"8849:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":846,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:4","nodeType":"VariableDeclaration","scope":865,"src":"8874:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":848,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:4"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"8915:0:4"},"scope":866,"src":"8832:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":867,"src":"194:9180:4","usedErrors":[]}],"src":"101:9274:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408]},"id":918,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":868,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":918,"sourceUnit":409,"src":"125:63:5","symbolAliases":[{"foreign":{"id":869,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"133:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":872,"name":"Initializable","nameLocations":["727:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"727:13:5"},"id":873,"nodeType":"InheritanceSpecifier","src":"727:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"190:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":917,"linearizedBaseContracts":[917,408],"name":"ContextUpgradeable","nameLocation":"705:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":878,"nodeType":"Block","src":"799:7:5","statements":[]},"id":879,"implemented":true,"kind":"function","modifiers":[{"id":876,"kind":"modifierInvocation","modifierName":{"id":875,"name":"onlyInitializing","nameLocations":["782:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"782:16:5"},"nodeType":"ModifierInvocation","src":"782:16:5"}],"name":"__Context_init","nameLocation":"756:14:5","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"770:2:5"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"799:0:5"},"scope":917,"src":"747:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"874:7:5","statements":[]},"id":885,"implemented":true,"kind":"function","modifiers":[{"id":882,"kind":"modifierInvocation","modifierName":{"id":881,"name":"onlyInitializing","nameLocations":["857:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"857:16:5"},"nodeType":"ModifierInvocation","src":"857:16:5"}],"name":"__Context_init_unchained","nameLocation":"821:24:5","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"845:2:5"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"874:0:5"},"scope":917,"src":"812:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"948:34:5","statements":[{"expression":{"expression":{"id":890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:5","memberName":"sender","nodeType":"MemberAccess","src":"965:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":889,"id":892,"nodeType":"Return","src":"958:17:5"}]},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:5","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"905:2:5"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"939:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:5"},"scope":917,"src":"886:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"1055:32:5","statements":[{"expression":{"expression":{"id":899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:5","memberName":"data","nodeType":"MemberAccess","src":"1072:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":898,"id":901,"nodeType":"Return","src":"1065:15:5"}]},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:5","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"1005:2:5"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":903,"src":"1039:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:5"},"scope":917,"src":"988:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"1165:25:5","statements":[{"expression":{"hexValue":"30","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":907,"id":909,"nodeType":"Return","src":"1175:8:5"}]},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:5","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"1122:2:5"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"1156:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:5"},"scope":917,"src":"1093:97:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"1196:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":916,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:5","nodeType":"VariableDeclaration","scope":917,"src":"1455:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"length":{"hexValue":"3530","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":918,"src":"687:796:5","usedErrors":[]}],"src":"101:1383:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[995]},"id":996,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":919,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"131:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":995,"linearizedBaseContracts":[995],"name":"IERC20","nameLocation":"212:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"225:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":929,"name":"Transfer","nameLocation":"394:8:6","nodeType":"EventDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:6","nodeType":"VariableDeclaration","scope":929,"src":"403:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:6","nodeType":"VariableDeclaration","scope":929,"src":"425:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":927,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:6","nodeType":"VariableDeclaration","scope":929,"src":"445:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:6"},"src":"388:72:6"},{"anonymous":false,"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"466:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":938,"name":"Approval","nameLocation":"625:8:6","nodeType":"EventDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:6","nodeType":"VariableDeclaration","scope":938,"src":"634:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:6","nodeType":"VariableDeclaration","scope":938,"src":"657:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":936,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:6","nodeType":"VariableDeclaration","scope":938,"src":"682:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:6"},"src":"619:78:6"},{"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"703:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":944,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:6","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"794:2:6"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"820:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:6"},"scope":995,"src":"774:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"835:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":952,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":952,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":995,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"986:202:6","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":962,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:6","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"to","nameLocation":"1219:2:6","nodeType":"VariableDeclaration","scope":962,"src":"1211:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"amount","nameLocation":"1231:6:6","nodeType":"VariableDeclaration","scope":962,"src":"1223:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:6"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"1257:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":959,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:6"},"scope":995,"src":"1193:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"1269:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":972,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:6","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"owner","nameLocation":"1565:5:6","nodeType":"VariableDeclaration","scope":972,"src":"1557:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"spender","nameLocation":"1580:7:6","nodeType":"VariableDeclaration","scope":972,"src":"1572:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:6"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":972,"src":"1612:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:6"},"scope":995,"src":"1538:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"1627:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":982,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:6","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"spender","nameLocation":"2299:7:6","nodeType":"VariableDeclaration","scope":982,"src":"2291:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"amount","nameLocation":"2316:6:6","nodeType":"VariableDeclaration","scope":982,"src":"2308:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"2342:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":979,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:6"},"scope":995,"src":"2274:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"2354:287:6","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":994,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:6","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"from","nameLocation":"2676:4:6","nodeType":"VariableDeclaration","scope":994,"src":"2668:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"to","nameLocation":"2690:2:6","nodeType":"VariableDeclaration","scope":994,"src":"2682:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"amount","nameLocation":"2702:6:6","nodeType":"VariableDeclaration","scope":994,"src":"2694:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:6"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":994,"src":"2728:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":991,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:6"},"scope":995,"src":"2646:88:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":996,"src":"202:2534:6","usedErrors":[]}],"src":"106:2631:6"},"id":6},"contracts/Gateway.sol":{"ast":{"absolutePath":"contracts/Gateway.sol","exportedSymbols":{"ContextUpgradeable":[917],"Gateway":[1749],"GatewaySettingManager":[1933],"IERC20":[995],"IGateway":[2116],"Initializable":[408],"PausableUpgradeable":[536]},"id":1750,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":997,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"39:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1750,"sourceUnit":537,"src":"65:78:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/GatewaySettingManager.sol","file":"./GatewaySettingManager.sol","id":1000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1750,"sourceUnit":1934,"src":"145:66:7","symbolAliases":[{"foreign":{"id":999,"name":"GatewaySettingManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"153:21:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGateway.sol","file":"./interfaces/IGateway.sol","id":1003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1750,"sourceUnit":2117,"src":"212:59:7","symbolAliases":[{"foreign":{"id":1001,"name":"IGateway","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"220:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1002,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"230:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1005,"name":"IGateway","nameLocations":["410:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":2116,"src":"410:8:7"},"id":1006,"nodeType":"InheritanceSpecifier","src":"410:8:7"},{"baseName":{"id":1007,"name":"GatewaySettingManager","nameLocations":["420:21:7"],"nodeType":"IdentifierPath","referencedDeclaration":1933,"src":"420:21:7"},"id":1008,"nodeType":"InheritanceSpecifier","src":"420:21:7"},{"baseName":{"id":1009,"name":"PausableUpgradeable","nameLocations":["443:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"443:19:7"},"id":1010,"nodeType":"InheritanceSpecifier","src":"443:19:7"}],"canonicalName":"Gateway","contractDependencies":[],"contractKind":"contract","documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"273:116:7","text":" @title Gateway\n @notice This contract serves as a gateway for creating orders and managing settlements."},"fullyImplemented":true,"id":1749,"linearizedBaseContracts":[1749,536,1933,106,239,917,408,2116],"name":"Gateway","nameLocation":"399:7:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Gateway.fee","id":1015,"members":[{"constant":false,"id":1012,"mutability":"mutable","name":"protocolFee","nameLocation":"489:11:7","nodeType":"VariableDeclaration","scope":1015,"src":"481:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"481:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"liquidityProviderAmount","nameLocation":"512:23:7","nodeType":"VariableDeclaration","scope":1015,"src":"504:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"fee","nameLocation":"473:3:7","nodeType":"StructDefinition","scope":1749,"src":"466:73:7","visibility":"public"},{"constant":false,"id":1020,"mutability":"mutable","name":"order","nameLocation":"576:5:7","nodeType":"VariableDeclaration","scope":1749,"src":"542:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order)"},"typeName":{"id":1019,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"550:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"542:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1018,"nodeType":"UserDefinedTypeName","pathNode":{"id":1017,"name":"Order","nameLocations":["561:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":2020,"src":"561:5:7"},"referencedDeclaration":2020,"src":"561:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage_ptr","typeString":"struct IGateway.Order"}}},"visibility":"private"},{"constant":false,"id":1024,"mutability":"mutable","name":"_nonce","nameLocation":"620:6:7","nodeType":"VariableDeclaration","scope":1749,"src":"584:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1023,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"584:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1028,"mutability":"mutable","name":"__gap","nameLocation":"649:5:7","nodeType":"VariableDeclaration","scope":1749,"src":"629:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1027,"length":{"hexValue":"3530","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"637:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"629:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"body":{"id":1035,"nodeType":"Block","src":"722:30:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1032,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"726:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"726:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"ExpressionStatement","src":"726:22:7"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"658:48:7","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":1036,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"719:2:7"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"722:0:7"},"scope":1749,"src":"708:44:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1052,"nodeType":"Block","src":"838:71:7","statements":[{"expression":{"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1042,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130305f303030","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"852:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"src":"842:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1045,"nodeType":"ExpressionStatement","src":"842:17:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1046,"name":"__Ownable2Step_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"863:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"863:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"ExpressionStatement","src":"863:21:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1049,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"888:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"888:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"ExpressionStatement","src":"888:17:7"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"755:38:7","text":" @dev Initialize function."},"functionSelector":"8129fc1c","id":1053,"implemented":true,"kind":"function","modifiers":[{"id":1040,"kind":"modifierInvocation","modifierName":{"id":1039,"name":"initializer","nameLocations":["826:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":310,"src":"826:11:7"},"nodeType":"ModifierInvocation","src":"826:11:7"}],"name":"initialize","nameLocation":"804:10:7","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"814:2:7"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"838:0:7"},"scope":1749,"src":"795:114:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1065,"nodeType":"Block","src":"1018:72:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1057,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1030:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1034:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1030:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1059,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"1044:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1030:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7941676772656761746f72","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1064:16:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","typeString":"literal_string \"OnlyAggregator\""},"value":"OnlyAggregator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","typeString":"literal_string \"OnlyAggregator\""}],"id":1056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1022:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"1022:59:7"},{"id":1064,"nodeType":"PlaceholderStatement","src":"1085:1:7"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"912:78:7","text":" @dev Modifier that allows only the aggregator to call a function."},"id":1066,"name":"onlyAggregator","nameLocation":"1001:14:7","nodeType":"ModifierDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[],"src":"1015:2:7"},"src":"992:98:7","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"1361:16:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1072,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1365:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1365:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"ExpressionStatement","src":"1365:8:7"}]},"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"1286:37:7","text":" @dev Pause the contract."},"functionSelector":"8456cb59","id":1076,"implemented":true,"kind":"function","modifiers":[{"id":1070,"kind":"modifierInvocation","modifierName":{"id":1069,"name":"onlyOwner","nameLocations":["1351:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1351:9:7"},"nodeType":"ModifierInvocation","src":"1351:9:7"}],"name":"pause","nameLocation":"1334:5:7","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"1339:2:7"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"1361:0:7"},"scope":1749,"src":"1325:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1085,"nodeType":"Block","src":"1459:18:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1082,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1463:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1463:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"1463:10:7"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"1380:39:7","text":" @dev Unpause the contract."},"functionSelector":"3f4ba83a","id":1086,"implemented":true,"kind":"function","modifiers":[{"id":1080,"kind":"modifierInvocation","modifierName":{"id":1079,"name":"onlyOwner","nameLocations":["1449:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1449:9:7"},"nodeType":"ModifierInvocation","src":"1449:9:7"}],"name":"unpause","nameLocation":"1430:7:7","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"1437:2:7"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"1459:0:7"},"scope":1749,"src":"1421:56:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2040],"body":{"id":1205,"nodeType":"Block","src":"1945:1088:7","statements":[{"expression":{"arguments":[{"id":1109,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"1988:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"1996:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1111,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2005:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2021:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"2042:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1108,"name":"_handler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1979:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,address,uint256) view"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:74:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"1979:74:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1119,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2098:11:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1117,"name":"bytes","nodeType":"ElementaryTypeName","src":"2092:5:7","typeDescriptions":{}}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2111:6:7","memberName":"length","nodeType":"MemberAccess","src":"2092:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2092:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69644d65737361676548617368","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2124:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","typeString":"literal_string \"InvalidMessageHash\""},"value":"InvalidMessageHash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","typeString":"literal_string \"InvalidMessageHash\""}],"id":1116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2084:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"2084:61:7"},{"expression":{"arguments":[{"expression":{"id":1131,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2226:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2230:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2226:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1135,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2246:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Gateway_$1749","typeString":"contract Gateway"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Gateway_$1749","typeString":"contract Gateway"}],"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2238:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"2238:7:7","typeDescriptions":{}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2253:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1138,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"2263:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2253:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1128,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2205:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1127,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"2198:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2198:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2213:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":994,"src":"2198:27:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2198:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1141,"nodeType":"ExpressionStatement","src":"2198:76:7"},{"expression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2329:20:7","subExpression":{"baseExpression":{"id":1142,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"2329:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1145,"indexExpression":{"expression":{"id":1143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2336:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2340:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2336:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2329:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1147,"nodeType":"ExpressionStatement","src":"2329:20:7"},{"expression":{"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1148,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2403:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":1152,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2434:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2438:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2434:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1154,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"2446:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1157,"indexExpression":{"expression":{"id":1155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2453:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2457:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2453:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2446:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1150,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2423:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2427:6:7","memberName":"encode","nodeType":"MemberAccess","src":"2423:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2423:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1149,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2413:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2413:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2403:63:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1161,"nodeType":"ExpressionStatement","src":"2403:63:7"},{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"_protocolFee","nameLocation":"2503:12:7","nodeType":"VariableDeclaration","scope":1205,"src":"2495:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2495:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1170,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2519:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1165,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"2529:18:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2519:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2518:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1168,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2551:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2518:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2495:63:7"},{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1171,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2562:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1173,"indexExpression":{"id":1172,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2568:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2562:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2598:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2602:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2598:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2620:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2651:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"2686:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"2714:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2766:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":1183,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2791:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1186,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2829:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2822:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1184,"name":"uint64","nodeType":"ElementaryTypeName","src":"2822:6:7","typeDescriptions":{}}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1188,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2850:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1174,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"2579:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Order_$2020_storage_ptr_$","typeString":"type(struct IGateway.Order storage pointer)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2590:6:7","2613:5:7","2631:18:7","2675:9:7","2701:11:7","2731:11:7","2754:10:7","2776:13:7","2810:10:7","2842:6:7"],"names":["sender","token","senderFeeRecipient","senderFee","protocolFee","isFulfilled","isRefunded","refundAddress","currentBPS","amount"],"nodeType":"FunctionCall","src":"2579:283:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_memory_ptr","typeString":"struct IGateway.Order memory"}},"src":"2562:300:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1191,"nodeType":"ExpressionStatement","src":"2562:300:7"},{"eventCall":{"arguments":[{"id":1193,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2919:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1194,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2938:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1195,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2949:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1197,"indexExpression":{"id":1196,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2955:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2949:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2964:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"2949:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1199,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"2975:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1200,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2992:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1201,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3004:5:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":1202,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"3014:11:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1192,"name":"OrderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2902:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes32,uint256,string memory)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2902:127:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"EmitStatement","src":"2897:132:7"}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"1668:39:7","text":"@dev See {createOrder-IGateway}. "},"functionSelector":"809804f7","id":1206,"implemented":true,"kind":"function","modifiers":[{"id":1104,"kind":"modifierInvocation","modifierName":{"id":1103,"name":"whenNotPaused","nameLocations":["1905:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"1905:13:7"},"nodeType":"ModifierInvocation","src":"1905:13:7"}],"name":"createOrder","nameLocation":"1718:11:7","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"_token","nameLocation":"1741:6:7","nodeType":"VariableDeclaration","scope":1206,"src":"1733:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"1733:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"_amount","nameLocation":"1759:7:7","nodeType":"VariableDeclaration","scope":1206,"src":"1751:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"_rate","nameLocation":"1777:5:7","nodeType":"VariableDeclaration","scope":1206,"src":"1770:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1092,"name":"uint96","nodeType":"ElementaryTypeName","src":"1770:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"1794:19:7","nodeType":"VariableDeclaration","scope":1206,"src":"1786:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"_senderFee","nameLocation":"1825:10:7","nodeType":"VariableDeclaration","scope":1206,"src":"1817:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"_refundAddress","nameLocation":"1847:14:7","nodeType":"VariableDeclaration","scope":1206,"src":"1839:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"1839:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"messageHash","nameLocation":"1881:11:7","nodeType":"VariableDeclaration","scope":1206,"src":"1865:27:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1100,"name":"string","nodeType":"ElementaryTypeName","src":"1865:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1729:166:7"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"orderId","nameLocation":"1936:7:7","nodeType":"VariableDeclaration","scope":1206,"src":"1928:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1928:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1927:17:7"},"scope":1749,"src":"1709:1324:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1261,"nodeType":"Block","src":"3577:276:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1221,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3589:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1223,"indexExpression":{"id":1222,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3607:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3589:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3618:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3589:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4e6f74537570706f72746564","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3621:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","typeString":"literal_string \"TokenNotSupported\""},"value":"TokenNotSupported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","typeString":"literal_string \"TokenNotSupported\""}],"id":1220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"3581:60:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1230,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3653:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3664:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3653:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7449735a65726f","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3667:14:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""},"value":"AmountIsZero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""}],"id":1229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3645:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1235,"nodeType":"ExpressionStatement","src":"3645:37:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"3694:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3720:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3712:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:7","typeDescriptions":{}}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3712:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3694:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468726f775a65726f41646472657373","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3724:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","typeString":"literal_string \"ThrowZeroAddress\""},"value":"ThrowZeroAddress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","typeString":"literal_string \"ThrowZeroAddress\""}],"id":1236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3686:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"ExpressionStatement","src":"3686:57:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1246,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3752:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3766:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3752:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"IfStatement","src":"3748:102:7","trueBody":{"id":1259,"nodeType":"Block","src":"3769:81:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"3782:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3813:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3805:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:7","typeDescriptions":{}}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3805:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3782:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696453656e646572466565526563697069656e74","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3817:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","typeString":"literal_string \"InvalidSenderFeeRecipient\""},"value":"InvalidSenderFeeRecipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","typeString":"literal_string \"InvalidSenderFeeRecipient\""}],"id":1249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3774:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1258,"nodeType":"ExpressionStatement","src":"3774:71:7"}]}}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"3036:388:7","text":" @dev Internal function to handle order creation.\n @param _token The address of the token being traded.\n @param _amount The amount of tokens being traded.\n @param _refundAddress The address to refund the tokens in case of cancellation.\n @param _senderFeeRecipient The address of the recipient for the sender fee.\n @param _senderFee The amount of the sender fee."},"id":1262,"implemented":true,"kind":"function","modifiers":[],"name":"_handler","nameLocation":"3435:8:7","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"_token","nameLocation":"3455:6:7","nodeType":"VariableDeclaration","scope":1262,"src":"3447:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"_amount","nameLocation":"3473:7:7","nodeType":"VariableDeclaration","scope":1262,"src":"3465:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"_refundAddress","nameLocation":"3492:14:7","nodeType":"VariableDeclaration","scope":1262,"src":"3484:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"3518:19:7","nodeType":"VariableDeclaration","scope":1262,"src":"3510:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"3510:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"_senderFee","nameLocation":"3549:10:7","nodeType":"VariableDeclaration","scope":1262,"src":"3541:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3443:119:7"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[],"src":"3577:0:7"},"scope":1749,"src":"3426:427:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2054],"body":{"id":1422,"nodeType":"Block","src":"4248:1417:7","statements":[{"expression":{"arguments":[{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4311:28:7","subExpression":{"expression":{"baseExpression":{"id":1279,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4312:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1281,"indexExpression":{"id":1280,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4318:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4312:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4328:11:7","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2011,"src":"4312:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657246756c66696c6c6564","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4341:16:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""},"value":"OrderFulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""}],"id":1278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4303:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4303:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"ExpressionStatement","src":"4303:55:7"},{"expression":{"arguments":[{"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4370:27:7","subExpression":{"expression":{"baseExpression":{"id":1288,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4371:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1290,"indexExpression":{"id":1289,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4377:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4371:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4387:10:7","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2013,"src":"4371:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572526566756e646564","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4399:15:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""},"value":"OrderRefunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""}],"id":1287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4362:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4362:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"4362:53:7"},{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"token","nameLocation":"4460:5:7","nodeType":"VariableDeclaration","scope":1422,"src":"4452:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1302,"initialValue":{"expression":{"baseExpression":{"id":1298,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4468:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1300,"indexExpression":{"id":1299,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4474:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4468:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4484:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"4468:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4452:37:7"},{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1303,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4556:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1305,"indexExpression":{"id":1304,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4562:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4556:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4572:10:7","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"4556:26:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1307,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4586:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4556:44:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1309,"nodeType":"ExpressionStatement","src":"4556:44:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1310,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4609:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1312,"indexExpression":{"id":1311,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4615:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4609:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4625:10:7","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"4609:26:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4639:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4609:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1360,"nodeType":"IfStatement","src":"4605:453:7","trueBody":{"id":1359,"nodeType":"Block","src":"4642:416:7","statements":[{"expression":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1316,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4692:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1318,"indexExpression":{"id":1317,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4698:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4692:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4708:11:7","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2011,"src":"4692:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4722:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4692:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1322,"nodeType":"ExpressionStatement","src":"4692:34:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1323,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4736:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1325,"indexExpression":{"id":1324,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4742:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4736:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4752:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2007,"src":"4736:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4765:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4736:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"4732:321:7","trueBody":{"id":1357,"nodeType":"Block","src":"4768:285:7","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1336,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4846:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1338,"indexExpression":{"id":1337,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4852:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4846:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4862:18:7","memberName":"senderFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":2005,"src":"4846:34:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1340,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4887:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1342,"indexExpression":{"id":1341,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4893:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4887:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4903:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2007,"src":"4887:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1330,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4808:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1332,"indexExpression":{"id":1331,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4814:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4808:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4824:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"4808:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1329,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"4801:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4831:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"4801:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:117:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1345,"nodeType":"ExpressionStatement","src":"4801:117:7"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1347,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4975:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1349,"indexExpression":{"id":1348,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4981:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4975:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4991:18:7","memberName":"senderFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":2005,"src":"4975:34:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1351,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"5016:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1353,"indexExpression":{"id":1352,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5022:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5032:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2007,"src":"5016:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1346,"name":"SenderFeeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"4948:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4948:99:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"EmitStatement","src":"4943:104:7"}]}}]}},{"assignments":[1362],"declarations":[{"constant":false,"id":1362,"mutability":"mutable","name":"liquidityProviderAmount","nameLocation":"5106:23:7","nodeType":"VariableDeclaration","scope":1422,"src":"5098:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"5098:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1372,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1363,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"5133:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1365,"indexExpression":{"id":1364,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5139:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5133:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5149:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"5133:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1367,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5158:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5133:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5132:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1370,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5176:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5132:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5098:85:7"},{"expression":{"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1373,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"5187:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1375,"indexExpression":{"id":1374,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5193:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5187:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5203:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"5187:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1377,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5213:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5187:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"nodeType":"ExpressionStatement","src":"5187:49:7"},{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"protocolFee","nameLocation":"5249:11:7","nodeType":"VariableDeclaration","scope":1422,"src":"5241:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1382,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5264:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1383,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"5290:18:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5264:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5263:46:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1386,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5312:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:56:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5241:78:7"},{"expression":{"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1389,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5323:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1390,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5350:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5323:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1392,"nodeType":"ExpressionStatement","src":"5323:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5397:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5411:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5397:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"IfStatement","src":"5393:73:7","trueBody":{"expression":{"arguments":[{"id":1400,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5437:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1401,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5454:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1397,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5421:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1396,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5414:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5428:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"5414:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1403,"nodeType":"ExpressionStatement","src":"5414:52:7"}},{"expression":{"arguments":[{"id":1409,"name":"_liquidityProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5494:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1410,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5514:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1406,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5478:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5471:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5471:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5485:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"5471:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5471:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1412,"nodeType":"ExpressionStatement","src":"5471:67:7"},{"eventCall":{"arguments":[{"id":1414,"name":"_splitOrderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5585:13:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1415,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5600:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1416,"name":"_liquidityProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5610:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1417,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5630:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1413,"name":"OrderSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"5572:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint96_$returns$__$","typeString":"function (bytes32,bytes32,address,uint96)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5572:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"EmitStatement","src":"5567:78:7"},{"expression":{"hexValue":"74727565","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5657:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1277,"id":1421,"nodeType":"Return","src":"5650:11:7"}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"4054:34:7","text":"@dev See {settle-IGateway}. "},"functionSelector":"f22ee704","id":1423,"implemented":true,"kind":"function","modifiers":[{"id":1274,"kind":"modifierInvocation","modifierName":{"id":1273,"name":"onlyAggregator","nameLocations":["4218:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"4218:14:7"},"nodeType":"ModifierInvocation","src":"4218:14:7"}],"name":"settle","nameLocation":"4099:6:7","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"_splitOrderId","nameLocation":"4117:13:7","nodeType":"VariableDeclaration","scope":1423,"src":"4109:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4109:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"_orderId","nameLocation":"4142:8:7","nodeType":"VariableDeclaration","scope":1423,"src":"4134:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4134:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"4162:18:7","nodeType":"VariableDeclaration","scope":1423,"src":"4154:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"4154:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"_settlePercent","nameLocation":"4191:14:7","nodeType":"VariableDeclaration","scope":1423,"src":"4184:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1270,"name":"uint64","nodeType":"ElementaryTypeName","src":"4184:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4105:103:7"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1423,"src":"4242:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1275,"name":"bool","nodeType":"ElementaryTypeName","src":"4242:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4241:6:7"},"scope":1749,"src":"4090:1575:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2064],"body":{"id":1528,"nodeType":"Block","src":"5791:833:7","statements":[{"expression":{"arguments":[{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5854:28:7","subExpression":{"expression":{"baseExpression":{"id":1436,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"5855:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1438,"indexExpression":{"id":1437,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"5861:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5855:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5871:11:7","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2011,"src":"5855:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657246756c66696c6c6564","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5884:16:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""},"value":"OrderFulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""}],"id":1435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5846:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"ExpressionStatement","src":"5846:55:7"},{"expression":{"arguments":[{"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5913:27:7","subExpression":{"expression":{"baseExpression":{"id":1445,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"5914:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1447,"indexExpression":{"id":1446,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"5920:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5914:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5930:10:7","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2013,"src":"5914:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572526566756e646564","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5942:15:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""},"value":"OrderRefunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""}],"id":1444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5905:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"ExpressionStatement","src":"5905:53:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1454,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"5970:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1456,"indexExpression":{"id":1455,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"5976:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5970:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5986:11:7","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":2009,"src":"5970:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1458,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6001:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5970:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665654578636565647350726f746f636f6c466565","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6007:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","typeString":"literal_string \"FeeExceedsProtocolFee\""},"value":"FeeExceedsProtocolFee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","typeString":"literal_string \"FeeExceedsProtocolFee\""}],"id":1453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5962:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5962:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1462,"nodeType":"ExpressionStatement","src":"5962:69:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6040:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6040:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"6036:127:7","trueBody":{"id":1477,"nodeType":"Block","src":"6050:113:7","statements":[{"expression":{"arguments":[{"id":1473,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"6136:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1474,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6153:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1467,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6104:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1469,"indexExpression":{"id":1468,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6110:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6104:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6120:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"6104:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1466,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6097:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6127:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"6097:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1476,"nodeType":"ExpressionStatement","src":"6097:61:7"}]}},{"expression":{"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1479,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6191:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1481,"indexExpression":{"id":1480,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6197:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6191:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6207:10:7","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2013,"src":"6191:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6220:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6191:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1485,"nodeType":"ExpressionStatement","src":"6191:33:7"},{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1486,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6228:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1488,"indexExpression":{"id":1487,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6234:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6228:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6244:10:7","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"6228:26:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6257:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6228:30:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1492,"nodeType":"ExpressionStatement","src":"6228:30:7"},{"assignments":[1494],"declarations":[{"constant":false,"id":1494,"mutability":"mutable","name":"refundAmount","nameLocation":"6305:12:7","nodeType":"VariableDeclaration","scope":1528,"src":"6297:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"6297:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1501,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1495,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6320:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1497,"indexExpression":{"id":1496,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6326:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6336:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"6320:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1499,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6345:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6320:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6297:52:7"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1509,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6462:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1511,"indexExpression":{"id":1510,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6468:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6462:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6478:13:7","memberName":"refundAddress","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"6462:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1513,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"6496:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":1514,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6511:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1516,"indexExpression":{"id":1515,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6517:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6511:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6527:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2007,"src":"6511:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1503,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6426:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1505,"indexExpression":{"id":1504,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6432:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6426:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6442:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"6426:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1502,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6419:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6449:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"6419:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:121:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1520,"nodeType":"ExpressionStatement","src":"6419:121:7"},{"eventCall":{"arguments":[{"id":1522,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6589:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1523,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6595:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1521,"name":"OrderRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"6575:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6575:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"EmitStatement","src":"6570:34:7"},{"expression":{"hexValue":"74727565","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6616:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1434,"id":1527,"nodeType":"Return","src":"6609:11:7"}]},"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"5668:34:7","text":"@dev See {refund-IGateway}. "},"functionSelector":"71eedb88","id":1529,"implemented":true,"kind":"function","modifiers":[{"id":1431,"kind":"modifierInvocation","modifierName":{"id":1430,"name":"onlyAggregator","nameLocations":["5761:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"5761:14:7"},"nodeType":"ModifierInvocation","src":"5761:14:7"}],"name":"refund","nameLocation":"5713:6:7","nodeType":"FunctionDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"_fee","nameLocation":"5728:4:7","nodeType":"VariableDeclaration","scope":1529,"src":"5720:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"_orderId","nameLocation":"5742:8:7","nodeType":"VariableDeclaration","scope":1529,"src":"5734:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5734:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5719:32:7"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1529,"src":"5785:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1432,"name":"bool","nodeType":"ElementaryTypeName","src":"5785:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5784:6:7"},"scope":1749,"src":"5704:920:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2090],"body":{"id":1701,"nodeType":"Block","src":"7032:1180:7","statements":[{"expression":{"arguments":[{"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7044:28:7","subExpression":{"expression":{"baseExpression":{"id":1558,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7045:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1560,"indexExpression":{"id":1559,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7051:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7045:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7061:11:7","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2011,"src":"7045:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465724e6f7446756c66696c6c6564","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7074:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86","typeString":"literal_string \"OrderNotFulfilled\""},"value":"OrderNotFulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86","typeString":"literal_string \"OrderNotFulfilled\""}],"id":1557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7036:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7036:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"7036:58:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7106:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7106:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7449735a65726f","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7119:14:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""},"value":"AmountIsZero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""}],"id":1566,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7098:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7098:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"ExpressionStatement","src":"7098:36:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"7146:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7168:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7160:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"7160:7:7","typeDescriptions":{}}},"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7160:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7146:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526563697069656e7449735a65726f41646472657373","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7172:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07","typeString":"literal_string \"RecipientIsZeroAddress\""},"value":"RecipientIsZeroAddress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07","typeString":"literal_string \"RecipientIsZeroAddress\""}],"id":1573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7138:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7138:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"ExpressionStatement","src":"7138:59:7"},{"assignments":[1584],"declarations":[{"constant":false,"id":1584,"mutability":"mutable","name":"processedAmount","nameLocation":"7210:15:7","nodeType":"VariableDeclaration","scope":1701,"src":"7202:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"7202:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1586,"initialValue":{"id":1585,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7228:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7202:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"7243:10:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7257:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7243:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1618,"nodeType":"IfStatement","src":"7240:300:7","trueBody":{"id":1617,"nodeType":"Block","src":"7260:280:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"7273:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7304:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7296:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"7296:7:7","typeDescriptions":{}}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7296:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7273:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572466565526563697069656e7449735a65726f41646472657373","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7308:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61","typeString":"literal_string \"SenderFeeRecipientIsZeroAddress\""},"value":"SenderFeeRecipientIsZeroAddress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61","typeString":"literal_string \"SenderFeeRecipientIsZeroAddress\""}],"id":1590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7265:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1599,"nodeType":"ExpressionStatement","src":"7265:77:7"},{"expression":{"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1600,"name":"processedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7351:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1601,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"7370:10:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"7351:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1603,"nodeType":"ExpressionStatement","src":"7351:29:7"},{"expression":{"arguments":[{"id":1608,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"7418:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1609,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"7443:10:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"arguments":[{"id":1605,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"7396:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1604,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"7389:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7389:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7404:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"7389:23:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7389:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1611,"nodeType":"ExpressionStatement","src":"7389:69:7"},{"eventCall":{"arguments":[{"id":1613,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"7495:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1614,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"7520:10:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1612,"name":"SenderFeeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"7469:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7469:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1616,"nodeType":"EmitStatement","src":"7464:71:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7548:12:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7563:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7548:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1630,"nodeType":"IfStatement","src":"7544:76:7","trueBody":{"expression":{"arguments":[{"id":1626,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"7590:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7607:12:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"arguments":[{"id":1623,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"7573:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1622,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"7566:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7581:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"7566:23:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1629,"nodeType":"ExpressionStatement","src":"7566:54:7"}},{"expression":{"arguments":[{"id":1635,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"7649:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1636,"name":"processedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7661:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1632,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"7632:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1631,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"7625:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7625:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7640:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"7625:23:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7625:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1638,"nodeType":"ExpressionStatement","src":"7625:52:7"},{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1639,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7710:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1641,"indexExpression":{"id":1640,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7716:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7710:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7726:6:7","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":2001,"src":"7710:22:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1643,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"7735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7710:35:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1645,"nodeType":"ExpressionStatement","src":"7710:35:7"},{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1646,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7749:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1648,"indexExpression":{"id":1647,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7755:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7749:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7765:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"7749:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1650,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"7773:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7749:30:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1652,"nodeType":"ExpressionStatement","src":"7749:30:7"},{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1653,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7783:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1655,"indexExpression":{"id":1654,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7789:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7783:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7799:18:7","memberName":"senderFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":2005,"src":"7783:34:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1657,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"7820:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7783:56:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1659,"nodeType":"ExpressionStatement","src":"7783:56:7"},{"expression":{"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1660,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7843:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1662,"indexExpression":{"id":1661,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7849:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7843:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7859:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2007,"src":"7843:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1664,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"7871:10:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"7843:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1666,"nodeType":"ExpressionStatement","src":"7843:38:7"},{"expression":{"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1667,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7885:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1669,"indexExpression":{"id":1668,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7891:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7885:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7901:11:7","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":2009,"src":"7885:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1671,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7915:12:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"7885:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1673,"nodeType":"ExpressionStatement","src":"7885:42:7"},{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1674,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7931:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1676,"indexExpression":{"id":1675,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7937:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7931:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7947:11:7","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2011,"src":"7931:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7961:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7931:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1680,"nodeType":"ExpressionStatement","src":"7931:34:7"},{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1681,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"7969:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1683,"indexExpression":{"id":1682,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7975:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7969:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"id":1684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7985:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"7969:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1685,"name":"processedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7994:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1687,"nodeType":"ExpressionStatement","src":"7969:40:7"},{"eventCall":{"arguments":[{"id":1689,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"8068:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1690,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"8081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1691,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"8093:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1692,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"8108:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1693,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"8119:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1694,"name":"_liquidityProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"8143:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1695,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"8166:5:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":1696,"name":"_messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"8176:12:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1688,"name":"ProcessSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8046:17:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint96_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,uint256,address,address,address,address,uint96,string memory)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:146:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"EmitStatement","src":"8041:151:7"},{"expression":{"hexValue":"74727565","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8204:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1556,"id":1700,"nodeType":"Return","src":"8197:11:7"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"6627:45:7","text":"@dev See {processSettlement-IGateway}. "},"functionSelector":"79ec5809","id":1702,"implemented":true,"kind":"function","modifiers":[{"id":1553,"kind":"modifierInvocation","modifierName":{"id":1552,"name":"onlyAggregator","nameLocations":["7002:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"7002:14:7"},"nodeType":"ModifierInvocation","src":"7002:14:7"}],"name":"processSettlement","nameLocation":"6683:17:7","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"_orderId","nameLocation":"6718:8:7","nodeType":"VariableDeclaration","scope":1702,"src":"6710:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6710:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"_token","nameLocation":"6744:6:7","nodeType":"VariableDeclaration","scope":1702,"src":"6736:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"6736:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"_amount","nameLocation":"6768:7:7","nodeType":"VariableDeclaration","scope":1702,"src":"6760:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6760:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"6793:19:7","nodeType":"VariableDeclaration","scope":1702,"src":"6785:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"6785:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"_senderFee","nameLocation":"6829:10:7","nodeType":"VariableDeclaration","scope":1702,"src":"6822:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1539,"name":"uint96","nodeType":"ElementaryTypeName","src":"6822:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"6857:18:7","nodeType":"VariableDeclaration","scope":1702,"src":"6849:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"6849:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"_protocolFee","nameLocation":"6886:12:7","nodeType":"VariableDeclaration","scope":1702,"src":"6879:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1543,"name":"uint96","nodeType":"ElementaryTypeName","src":"6879:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"_recipient","nameLocation":"6916:10:7","nodeType":"VariableDeclaration","scope":1702,"src":"6908:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"_rate","nameLocation":"6943:5:7","nodeType":"VariableDeclaration","scope":1702,"src":"6936:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1547,"name":"uint96","nodeType":"ElementaryTypeName","src":"6936:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"_messageHash","nameLocation":"6974:12:7","nodeType":"VariableDeclaration","scope":1702,"src":"6958:28:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1549,"name":"string","nodeType":"ElementaryTypeName","src":"6958:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6700:292:7"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1702,"src":"7026:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1554,"name":"bool","nodeType":"ElementaryTypeName","src":"7026:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7025:6:7"},"scope":1749,"src":"6674:1538:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2107],"body":{"id":1715,"nodeType":"Block","src":"8522:30:7","statements":[{"expression":{"baseExpression":{"id":1711,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"8533:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2020_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1713,"indexExpression":{"id":1712,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"8539:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8533:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage","typeString":"struct IGateway.Order storage ref"}},"functionReturnParameters":1710,"id":1714,"nodeType":"Return","src":"8526:22:7"}]},"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"8403:40:7","text":"@dev See {getOrderInfo-IGateway}. "},"functionSelector":"768c6ec0","id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderInfo","nameLocation":"8454:12:7","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"_orderId","nameLocation":"8475:8:7","nodeType":"VariableDeclaration","scope":1716,"src":"8467:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8467:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8466:18:7"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"8508:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_memory_ptr","typeString":"struct IGateway.Order"},"typeName":{"id":1708,"nodeType":"UserDefinedTypeName","pathNode":{"id":1707,"name":"Order","nameLocations":["8508:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":2020,"src":"8508:5:7"},"referencedDeclaration":2020,"src":"8508:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage_ptr","typeString":"struct IGateway.Order"}},"visibility":"internal"}],"src":"8507:14:7"},"scope":1749,"src":"8445:107:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2098],"body":{"id":1734,"nodeType":"Block","src":"8672:71:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1724,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"8680:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1726,"indexExpression":{"id":1725,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"8698:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8680:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8709:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8680:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1731,"nodeType":"IfStatement","src":"8676:47:7","trueBody":{"expression":{"hexValue":"74727565","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8719:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1723,"id":1730,"nodeType":"Return","src":"8712:11:7"}},{"expression":{"hexValue":"66616c7365","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8734:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1723,"id":1733,"nodeType":"Return","src":"8727:12:7"}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"8555:44:7","text":"@dev See {isTokenSupported-IGateway}. "},"functionSelector":"75151b63","id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"isTokenSupported","nameLocation":"8610:16:7","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"_token","nameLocation":"8635:6:7","nodeType":"VariableDeclaration","scope":1735,"src":"8627:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"8627:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8626:16:7"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"8666:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1721,"name":"bool","nodeType":"ElementaryTypeName","src":"8666:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8665:6:7"},"scope":1749,"src":"8601:142:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2115],"body":{"id":1747,"nodeType":"Block","src":"8854:44:7","statements":[{"expression":{"components":[{"id":1743,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8866:18:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1744,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"8886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8865:29:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint64_$_t_uint256_$","typeString":"tuple(uint64,uint256)"}},"functionReturnParameters":1742,"id":1746,"nodeType":"Return","src":"8858:36:7"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"8746:41:7","text":"@dev See {getFeeDetails-IGateway}. "},"functionSelector":"b810c636","id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeDetails","nameLocation":"8798:13:7","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"8811:2:7"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"8837:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1738,"name":"uint64","nodeType":"ElementaryTypeName","src":"8837:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"8845:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"8845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8836:17:7"},"scope":1749,"src":"8789:109:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1750,"src":"390:8510:7","usedErrors":[]}],"src":"39:8862:7"},"id":7},"contracts/GatewaySettingManager.sol":{"ast":{"absolutePath":"contracts/GatewaySettingManager.sol","exportedSymbols":{"ContextUpgradeable":[917],"GatewaySettingManager":[1933],"Initializable":[408],"Ownable2StepUpgradeable":[106],"OwnableUpgradeable":[239]},"id":1934,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1751,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"168:24:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","id":1752,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1934,"sourceUnit":107,"src":"194:80:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1753,"name":"Ownable2StepUpgradeable","nameLocations":["310:23:8"],"nodeType":"IdentifierPath","referencedDeclaration":106,"src":"310:23:8"},"id":1754,"nodeType":"InheritanceSpecifier","src":"310:23:8"}],"canonicalName":"GatewaySettingManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1933,"linearizedBaseContracts":[1933,106,239,917,408],"name":"GatewaySettingManager","nameLocation":"285:21:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1756,"mutability":"mutable","name":"MAX_BPS","nameLocation":"354:7:8","nodeType":"VariableDeclaration","scope":1933,"src":"337:24:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"337:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"protocolFeePercent","nameLocation":"380:18:8","nodeType":"VariableDeclaration","scope":1933,"src":"364:34:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1757,"name":"uint64","nodeType":"ElementaryTypeName","src":"364:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"treasuryAddress","nameLocation":"418:15:8","nodeType":"VariableDeclaration","scope":1933,"src":"401:32:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"401:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"_aggregatorAddress","nameLocation":"453:18:8","nodeType":"VariableDeclaration","scope":1933,"src":"436:35:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"_isTokenSupported","nameLocation":"511:17:8","nodeType":"VariableDeclaration","scope":1933,"src":"474:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1765,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"474:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"__gap","nameLocation":"658:5:8","nodeType":"VariableDeclaration","scope":1933,"src":"638:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1769,"length":{"hexValue":"3530","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"646:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"638:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"anonymous":false,"eventSelector":"cfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c","id":1778,"name":"SettingManagerBool","nameLocation":"674:18:8","nodeType":"EventDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"indexed":true,"mutability":"mutable","name":"what","nameLocation":"709:4:8","nodeType":"VariableDeclaration","scope":1778,"src":"693:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"693:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1774,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"731:5:8","nodeType":"VariableDeclaration","scope":1778,"src":"715:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1776,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"746:6:8","nodeType":"VariableDeclaration","scope":1778,"src":"738:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"692:61:8"},"src":"668:86:8"},{"anonymous":false,"eventSelector":"1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b","id":1782,"name":"ProtocolFeeUpdated","nameLocation":"762:18:8","nodeType":"EventDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"indexed":false,"mutability":"mutable","name":"protocolFee","nameLocation":"788:11:8","nodeType":"VariableDeclaration","scope":1782,"src":"781:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1779,"name":"uint64","nodeType":"ElementaryTypeName","src":"781:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"780:20:8"},"src":"756:45:8"},{"anonymous":false,"eventSelector":"bbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a4","id":1788,"name":"ProtocolAddressUpdated","nameLocation":"809:22:8","nodeType":"EventDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"indexed":true,"mutability":"mutable","name":"what","nameLocation":"848:4:8","nodeType":"VariableDeclaration","scope":1788,"src":"832:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"832:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1786,"indexed":true,"mutability":"mutable","name":"treasuryAddress","nameLocation":"870:15:8","nodeType":"VariableDeclaration","scope":1788,"src":"854:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"831:55:8"},"src":"803:84:8"},{"anonymous":false,"eventSelector":"2e979f80fe4d43055c584cf4a8467c55875ea36728fc37176c05acd784eb7a73","id":1792,"name":"SetFeeRecipient","nameLocation":"895:15:8","nodeType":"EventDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"indexed":true,"mutability":"mutable","name":"treasuryAddress","nameLocation":"927:15:8","nodeType":"VariableDeclaration","scope":1792,"src":"911:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"911:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"910:33:8"},"src":"889:55:8"},{"body":{"id":1842,"nodeType":"Block","src":"1518:243:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"1530:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1547:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1539:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1806,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:8","typeDescriptions":{}}},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1539:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1530:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207a65726f2061646472657373","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1551:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""},"value":"Gateway: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""}],"id":1804,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1522:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1522:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1813,"nodeType":"ExpressionStatement","src":"1522:53:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1587:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1597:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1587:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1818,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1602:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1612:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1602:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1587:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a20696e76616c696420737461747573","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1615:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","typeString":"literal_string \"Gateway: invalid status\""},"value":"Gateway: invalid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","typeString":"literal_string \"Gateway: invalid status\""}],"id":1814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1579:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1579:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"ExpressionStatement","src":"1579:62:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1649:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"746f6b656e","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1657:7:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d","typeString":"literal_string \"token\""},"value":"token"},"src":"1649:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1841,"nodeType":"IfStatement","src":"1645:113:8","trueBody":{"id":1840,"nodeType":"Block","src":"1666:92:8","statements":[{"expression":{"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1828,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"1671:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1830,"indexExpression":{"id":1829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"1689:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1671:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1831,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1698:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1671:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1833,"nodeType":"ExpressionStatement","src":"1671:33:8"},{"eventCall":{"arguments":[{"id":1835,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1733:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"1739:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1837,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1746:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1834,"name":"SettingManagerBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"1714:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1714:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1839,"nodeType":"EmitStatement","src":"1709:44:8"}]}}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"1141:283:8","text":" @dev Sets the boolean value for a specific setting.\n @param what The setting to be updated.\n @param value The address or value associated with the setting.\n @param status The boolean value to be set.\n Requirements:\n - The value must not be a zero address."},"functionSelector":"cd992400","id":1843,"implemented":true,"kind":"function","modifiers":[{"id":1802,"kind":"modifierInvocation","modifierName":{"id":1801,"name":"onlyOwner","nameLocations":["1508:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1508:9:8"},"nodeType":"ModifierInvocation","src":"1508:9:8"}],"name":"settingManagerBool","nameLocation":"1435:18:8","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"what","nameLocation":"1462:4:8","nodeType":"VariableDeclaration","scope":1843,"src":"1454:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"value","nameLocation":"1476:5:8","nodeType":"VariableDeclaration","scope":1843,"src":"1468:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"status","nameLocation":"1491:6:8","nodeType":"VariableDeclaration","scope":1843,"src":"1483:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:45:8"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"1518:0:8"},"scope":1933,"src":"1426:335:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1859,"nodeType":"Block","src":"1968:96:8","statements":[{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1851,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"1972:18:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1852,"name":"_protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"1993:19:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1972:40:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1854,"nodeType":"ExpressionStatement","src":"1972:40:8"},{"eventCall":{"arguments":[{"id":1856,"name":"_protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"2040:19:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1855,"name":"ProtocolFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"2021:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1858,"nodeType":"EmitStatement","src":"2016:44:8"}]},"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"1764:128:8","text":" @dev Updates the protocol fee percentage.\n @param _protocolFeePercent The new protocol fee percentage to be set."},"functionSelector":"47094e2e","id":1860,"implemented":true,"kind":"function","modifiers":[{"id":1849,"kind":"modifierInvocation","modifierName":{"id":1848,"name":"onlyOwner","nameLocations":["1958:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1958:9:8"},"nodeType":"ModifierInvocation","src":"1958:9:8"}],"name":"updateProtocolFee","nameLocation":"1903:17:8","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"_protocolFeePercent","nameLocation":"1928:19:8","nodeType":"VariableDeclaration","scope":1860,"src":"1921:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1845,"name":"uint64","nodeType":"ElementaryTypeName","src":"1921:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1920:28:8"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[],"src":"1968:0:8"},"scope":1933,"src":"1894:170:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1931,"nodeType":"Block","src":"2372:472:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2384:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2401:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2393:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:8","typeDescriptions":{}}},"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2384:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207a65726f2061646472657373","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2405:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""},"value":"Gateway: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""}],"id":1870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2376:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"ExpressionStatement","src":"2376:53:8"},{"assignments":[1881],"declarations":[{"constant":false,"id":1881,"mutability":"mutable","name":"updated","nameLocation":"2438:7:8","nodeType":"VariableDeclaration","scope":1931,"src":"2433:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1880,"name":"bool","nodeType":"ElementaryTypeName","src":"2433:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1882,"nodeType":"VariableDeclarationStatement","src":"2433:12:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1883,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2453:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"7472656173757279","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2461:10:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbd818ad4dd6f1ff9338c2bb62480241424dd9a65f9f3284101a01cd099ad8ac","typeString":"literal_string \"treasury\""},"value":"treasury"},"src":"2453:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2614:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"61676772656761746f72","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2622:12:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e124d7cc79a19705865fa21b784ba187cd393559e960c0c071132cb60354d1a3","typeString":"literal_string \"aggregator\""},"value":"aggregator"},"src":"2614:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1921,"nodeType":"IfStatement","src":"2610:165:8","trueBody":{"id":1920,"nodeType":"Block","src":"2636:139:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"2649:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2671:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2649:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c726561647920736574","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2678:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","typeString":"literal_string \"Gateway: aggregator address already set\""},"value":"Gateway: aggregator address already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","typeString":"literal_string \"Gateway: aggregator address already set\""}],"id":1905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2641:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"ExpressionStatement","src":"2641:79:8"},{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1912,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"2725:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2746:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2725:26:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1915,"nodeType":"ExpressionStatement","src":"2725:26:8"},{"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1916,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2756:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2766:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2756:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1919,"nodeType":"ExpressionStatement","src":"2756:14:8"}]}},"id":1922,"nodeType":"IfStatement","src":"2449:326:8","trueBody":{"id":1901,"nodeType":"Block","src":"2473:131:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1887,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"2486:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2505:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2486:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207472656173757279206164647265737320616c726561647920736574","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2512:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","typeString":"literal_string \"Gateway: treasury address already set\""},"value":"Gateway: treasury address already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","typeString":"literal_string \"Gateway: treasury address already set\""}],"id":1886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2478:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2478:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1892,"nodeType":"ExpressionStatement","src":"2478:74:8"},{"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1893,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"2557:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2575:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2557:23:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1896,"nodeType":"ExpressionStatement","src":"2557:23:8"},{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1897,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2585:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2595:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2585:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1900,"nodeType":"ExpressionStatement","src":"2585:14:8"}]}},{"condition":{"id":1923,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2782:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1930,"nodeType":"IfStatement","src":"2778:63:8","trueBody":{"id":1929,"nodeType":"Block","src":"2791:50:8","statements":[{"eventCall":{"arguments":[{"id":1925,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2824:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2830:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1924,"name":"ProtocolAddressUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"2801:22:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2801:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"EmitStatement","src":"2796:40:8"}]}}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"2067:224:8","text":" @dev Updates a protocol address.\n @param what The address type to be updated (treasury or aggregator).\n @param value The new address to be set.\n Requirements:\n - The value must not be a zero address."},"functionSelector":"40ebc677","id":1932,"implemented":true,"kind":"function","modifiers":[{"id":1868,"kind":"modifierInvocation","modifierName":{"id":1867,"name":"onlyOwner","nameLocations":["2362:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2362:9:8"},"nodeType":"ModifierInvocation","src":"2362:9:8"}],"name":"updateProtocolAddress","nameLocation":"2302:21:8","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"what","nameLocation":"2332:4:8","nodeType":"VariableDeclaration","scope":1932,"src":"2324:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"value","nameLocation":"2346:5:8","nodeType":"VariableDeclaration","scope":1932,"src":"2338:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:29:8"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[],"src":"2372:0:8"},"scope":1933,"src":"2293:551:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1934,"src":"276:2570:8","usedErrors":[]}],"src":"168:2679:8"},"id":8},"contracts/interfaces/IGateway.sol":{"ast":{"absolutePath":"contracts/interfaces/IGateway.sol","exportedSymbols":{"IERC20":[995],"IGateway":[2116]},"id":2117,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1935,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"39:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2117,"sourceUnit":996,"src":"65:70:9","symbolAliases":[{"foreign":{"id":1936,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"73:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IGateway","contractDependencies":[],"contractKind":"interface","documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"137:73:9","text":" @title IGateway\n @notice Interface for the Gateway contract."},"fullyImplemented":false,"id":2116,"linearizedBaseContracts":[2116],"name":"IGateway","nameLocation":"221:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"423:359:9","text":" @dev Emitted when a deposit is made.\n @param sender The address of the sender.\n @param token The address of the deposited token.\n @param amount The amount of the deposit.\n @param orderId The ID of the order.\n @param rate The rate at which the deposit is made.\n @param messageHash The hash of the message."},"eventSelector":"40ccd1ceb111a3c186ef9911e1b876dc1f789ed331b86097b3b8851055b6a137","id":1955,"name":"OrderCreated","nameLocation":"793:12:9","nodeType":"EventDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"831:6:9","nodeType":"VariableDeclaration","scope":1955,"src":"815:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1943,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"863:5:9","nodeType":"VariableDeclaration","scope":1955,"src":"847:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"847:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1945,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"894:6:9","nodeType":"VariableDeclaration","scope":1955,"src":"878:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1947,"indexed":false,"mutability":"mutable","name":"protocolFee","nameLocation":"918:11:9","nodeType":"VariableDeclaration","scope":1955,"src":"910:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1949,"indexed":false,"mutability":"mutable","name":"orderId","nameLocation":"947:7:9","nodeType":"VariableDeclaration","scope":1955,"src":"939:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"939:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1951,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"972:4:9","nodeType":"VariableDeclaration","scope":1955,"src":"964:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1953,"indexed":false,"mutability":"mutable","name":"messageHash","nameLocation":"993:11:9","nodeType":"VariableDeclaration","scope":1955,"src":"986:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1952,"name":"string","nodeType":"ElementaryTypeName","src":"986:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"805:205:9"},"src":"787:224:9"},{"anonymous":false,"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"1017:321:9","text":" @dev Emitted when an aggregator settles a transaction.\n @param splitOrderId The ID of the split order.\n @param orderId The ID of the order.\n @param liquidityProvider The address of the liquidity provider.\n @param settlePercent The percentage at which the transaction is settled."},"eventSelector":"98ece21e01a01cbe1d1c0dad3b053c8fbd368f99be78be958fcf1d1d13fd249a","id":1966,"name":"OrderSettled","nameLocation":"1349:12:9","nodeType":"EventDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"indexed":false,"mutability":"mutable","name":"splitOrderId","nameLocation":"1379:12:9","nodeType":"VariableDeclaration","scope":1966,"src":"1371:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1371:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1960,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"1417:7:9","nodeType":"VariableDeclaration","scope":1966,"src":"1401:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1401:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1962,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"1450:17:9","nodeType":"VariableDeclaration","scope":1966,"src":"1434:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"1434:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1964,"indexed":false,"mutability":"mutable","name":"settlePercent","nameLocation":"1484:13:9","nodeType":"VariableDeclaration","scope":1966,"src":"1477:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1963,"name":"uint96","nodeType":"ElementaryTypeName","src":"1477:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1361:142:9"},"src":"1343:161:9"},{"anonymous":false,"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"1510:175:9","text":" @dev Emitted when an aggregator refunds a transaction.\n @param fee The fee deducted from the refund amount.\n @param orderId The ID of the order."},"eventSelector":"0736fe428e1747ca8d387c2e6fa1a31a0cde62d3a167c40a46ade59a3cdc828e","id":1973,"name":"OrderRefunded","nameLocation":"1696:13:9","nodeType":"EventDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1718:3:9","nodeType":"VariableDeclaration","scope":1973,"src":"1710:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1710:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1971,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"1739:7:9","nodeType":"VariableDeclaration","scope":1973,"src":"1723:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1723:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1709:38:9"},"src":"1690:58:9"},{"anonymous":false,"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"1754:78:9","text":" @dev Emitted when an onramp order is successfully processed"},"eventSelector":"8658aa8a4a6ef641d1fd3b5bb33205d173a5404ab1f7cd1a81d2828f94b8bf02","id":1992,"name":"ProcessSettlement","nameLocation":"1843:17:9","nodeType":"EventDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"1886:7:9","nodeType":"VariableDeclaration","scope":1992,"src":"1870:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1870:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1978,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"1919:6:9","nodeType":"VariableDeclaration","scope":1992,"src":"1903:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1980,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1951:9:9","nodeType":"VariableDeclaration","scope":1992,"src":"1935:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"1935:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1982,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1978:5:9","nodeType":"VariableDeclaration","scope":1992,"src":"1970:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1984,"indexed":false,"mutability":"mutable","name":"senderFee","nameLocation":"2001:9:9","nodeType":"VariableDeclaration","scope":1992,"src":"1993:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"1993:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1986,"indexed":false,"mutability":"mutable","name":"liquidityProvider","nameLocation":"2022:17:9","nodeType":"VariableDeclaration","scope":1992,"src":"2014:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1988,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2050:4:9","nodeType":"VariableDeclaration","scope":1992,"src":"2043:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1987,"name":"uint96","nodeType":"ElementaryTypeName","src":"2043:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1990,"indexed":false,"mutability":"mutable","name":"messageHash","nameLocation":"2065:11:9","nodeType":"VariableDeclaration","scope":1992,"src":"2058:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1989,"name":"string","nodeType":"ElementaryTypeName","src":"2058:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1860:222:9"},"src":"1837:246:9"},{"anonymous":false,"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"2089:173:9","text":" @dev Emitted when the sender's fee is transferred.\n @param sender The address of the sender.\n @param amount The amount of the fee transferred."},"eventSelector":"44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c2501","id":1999,"name":"SenderFeeTransferred","nameLocation":"2273:20:9","nodeType":"EventDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2310:6:9","nodeType":"VariableDeclaration","scope":1999,"src":"2294:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"2294:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1997,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"2334:6:9","nodeType":"VariableDeclaration","scope":1999,"src":"2318:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2318:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2293:48:9"},"src":"2267:75:9"},{"canonicalName":"IGateway.Order","id":2020,"members":[{"constant":false,"id":2001,"mutability":"mutable","name":"sender","nameLocation":"3200:6:9","nodeType":"VariableDeclaration","scope":2020,"src":"3192:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"token","nameLocation":"3224:5:9","nodeType":"VariableDeclaration","scope":2020,"src":"3216:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"3216:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"senderFeeRecipient","nameLocation":"3247:18:9","nodeType":"VariableDeclaration","scope":2020,"src":"3239:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"3239:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"senderFee","nameLocation":"3283:9:9","nodeType":"VariableDeclaration","scope":2020,"src":"3275:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"protocolFee","nameLocation":"3310:11:9","nodeType":"VariableDeclaration","scope":2020,"src":"3302:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"isFulfilled","nameLocation":"3336:11:9","nodeType":"VariableDeclaration","scope":2020,"src":"3331:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2010,"name":"bool","nodeType":"ElementaryTypeName","src":"3331:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"isRefunded","nameLocation":"3362:10:9","nodeType":"VariableDeclaration","scope":2020,"src":"3357:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2012,"name":"bool","nodeType":"ElementaryTypeName","src":"3357:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"refundAddress","nameLocation":"3390:13:9","nodeType":"VariableDeclaration","scope":2020,"src":"3382:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"currentBPS","nameLocation":"3420:10:9","nodeType":"VariableDeclaration","scope":2020,"src":"3413:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2016,"name":"uint96","nodeType":"ElementaryTypeName","src":"3413:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"amount","nameLocation":"3448:6:9","nodeType":"VariableDeclaration","scope":2020,"src":"3440:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3440:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Order","nameLocation":"3176:5:9","nodeType":"StructDefinition","scope":2116,"src":"3169:292:9","visibility":"public"},{"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"3662:1009:9","text":" @notice Locks the sender's amount of token into Gateway.\n @dev Requirements:\n - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\n - `_token` must be an acceptable token. See {isTokenSupported}.\n - `amount` must be greater than minimum.\n - `_refundAddress` refund address must not be zero address.\n @param _token The address of the token.\n @param _amount The amount in the decimal of `_token` to be locked.\n @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\n @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\n @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\n @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\n @param messageHash The hash of the message.\n @return _orderId The ID of the order."},"functionSelector":"809804f7","id":2040,"implemented":false,"kind":"function","modifiers":[],"name":"createOrder","nameLocation":"4685:11:9","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"_token","nameLocation":"4714:6:9","nodeType":"VariableDeclaration","scope":2040,"src":"4706:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"4706:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"_amount","nameLocation":"4738:7:9","nodeType":"VariableDeclaration","scope":2040,"src":"4730:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"4730:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"_rate","nameLocation":"4762:5:9","nodeType":"VariableDeclaration","scope":2040,"src":"4755:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2026,"name":"uint96","nodeType":"ElementaryTypeName","src":"4755:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"4785:19:9","nodeType":"VariableDeclaration","scope":2040,"src":"4777:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"4777:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"_senderFee","nameLocation":"4822:10:9","nodeType":"VariableDeclaration","scope":2040,"src":"4814:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"4814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"_refundAddress","nameLocation":"4850:14:9","nodeType":"VariableDeclaration","scope":2040,"src":"4842:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"messageHash","nameLocation":"4890:11:9","nodeType":"VariableDeclaration","scope":2040,"src":"4874:27:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2034,"name":"string","nodeType":"ElementaryTypeName","src":"4874:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4696:211:9"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"_orderId","nameLocation":"4934:8:9","nodeType":"VariableDeclaration","scope":2040,"src":"4926:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4926:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4925:18:9"},"scope":2116,"src":"4676:268:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"4950:387:9","text":" @notice Settles a transaction and distributes rewards accordingly.\n @param _splitOrderId The ID of the split order.\n @param _orderId The ID of the transaction.\n @param _liquidityProvider The address of the liquidity provider.\n @param _settlePercent The rate at which the transaction is settled.\n @return bool the settlement is successful."},"functionSelector":"f22ee704","id":2054,"implemented":false,"kind":"function","modifiers":[],"name":"settle","nameLocation":"5351:6:9","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"_splitOrderId","nameLocation":"5375:13:9","nodeType":"VariableDeclaration","scope":2054,"src":"5367:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5367:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"_orderId","nameLocation":"5406:8:9","nodeType":"VariableDeclaration","scope":2054,"src":"5398:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5398:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"5432:18:9","nodeType":"VariableDeclaration","scope":2054,"src":"5424:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"5424:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"_settlePercent","nameLocation":"5467:14:9","nodeType":"VariableDeclaration","scope":2054,"src":"5460:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2048,"name":"uint64","nodeType":"ElementaryTypeName","src":"5460:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5357:130:9"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"5506:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2051,"name":"bool","nodeType":"ElementaryTypeName","src":"5506:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5505:6:9"},"scope":2116,"src":"5342:170:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"5518:320:9","text":" @notice Refunds to the specified refundable address.\n @dev Requirements:\n - Only aggregators can call this function.\n @param _fee The amount to be deducted from the amount to be refunded.\n @param _orderId The ID of the transaction.\n @return bool the refund is successful."},"functionSelector":"71eedb88","id":2064,"implemented":false,"kind":"function","modifiers":[],"name":"refund","nameLocation":"5852:6:9","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"_fee","nameLocation":"5867:4:9","nodeType":"VariableDeclaration","scope":2064,"src":"5859:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"5859:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"_orderId","nameLocation":"5881:8:9","nodeType":"VariableDeclaration","scope":2064,"src":"5873:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5873:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5858:32:9"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2064,"src":"5909:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2061,"name":"bool","nodeType":"ElementaryTypeName","src":"5909:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5908:6:9"},"scope":2116,"src":"5843:72:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2065,"nodeType":"StructuredDocumentation","src":"5921:942:9","text":" @notice Process an onramp order for cryptocurrency purchase\n @dev This function is restricted to be called only by an authorized aggregator\n @dev It processes an onramp orders and transfers tokens to the user\n @param _orderId Unique identifier for the order being processed\n @param _token Address of the token to be sent to the user\n @param _amount Amount of tokens to be sent to the user\n @param _senderFeeRecipient Address that will receive the sender fee\n @param _senderFee Amount of fee to be paid to the sender fee recipient\n @param _liquidityProvider Address of the liquidity provider\n @param _recipient Address of the recipient who will receive the tokens\n @param _rate Rate at which the tokens are being sent\n @param _messageHash Hash of the message associated with the order\n @return success Boolean indicating if the operation was successful"},"functionSelector":"79ec5809","id":2090,"implemented":false,"kind":"function","modifiers":[],"name":"processSettlement","nameLocation":"6877:17:9","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"_orderId","nameLocation":"6912:8:9","nodeType":"VariableDeclaration","scope":2090,"src":"6904:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"_token","nameLocation":"6938:6:9","nodeType":"VariableDeclaration","scope":2090,"src":"6930:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"_amount","nameLocation":"6962:7:9","nodeType":"VariableDeclaration","scope":2090,"src":"6954:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"6954:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"6987:19:9","nodeType":"VariableDeclaration","scope":2090,"src":"6979:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"6979:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"_senderFee","nameLocation":"7023:10:9","nodeType":"VariableDeclaration","scope":2090,"src":"7016:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2074,"name":"uint96","nodeType":"ElementaryTypeName","src":"7016:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"7051:18:9","nodeType":"VariableDeclaration","scope":2090,"src":"7043:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"7043:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"_protocolFee","nameLocation":"7086:12:9","nodeType":"VariableDeclaration","scope":2090,"src":"7079:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2078,"name":"uint96","nodeType":"ElementaryTypeName","src":"7079:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"_recipient","nameLocation":"7116:10:9","nodeType":"VariableDeclaration","scope":2090,"src":"7108:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"_rate","nameLocation":"7143:5:9","nodeType":"VariableDeclaration","scope":2090,"src":"7136:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2082,"name":"uint96","nodeType":"ElementaryTypeName","src":"7136:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"_messageHash","nameLocation":"7174:12:9","nodeType":"VariableDeclaration","scope":2090,"src":"7158:28:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2084,"name":"string","nodeType":"ElementaryTypeName","src":"7158:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6894:298:9"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"7211:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2087,"name":"bool","nodeType":"ElementaryTypeName","src":"7211:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7210:6:9"},"scope":2116,"src":"6868:349:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"7223:169:9","text":" @notice Checks if a token is supported by Gateway.\n @param _token The address of the token to check.\n @return bool the token is supported."},"functionSelector":"75151b63","id":2098,"implemented":false,"kind":"function","modifiers":[],"name":"isTokenSupported","nameLocation":"7406:16:9","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"_token","nameLocation":"7431:6:9","nodeType":"VariableDeclaration","scope":2098,"src":"7423:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"7423:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7422:16:9"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2098,"src":"7462:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2095,"name":"bool","nodeType":"ElementaryTypeName","src":"7462:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7461:6:9"},"scope":2116,"src":"7397:71:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"7474:140:9","text":" @notice Gets the details of an order.\n @param _orderId The ID of the order.\n @return Order The order details."},"functionSelector":"768c6ec0","id":2107,"implemented":false,"kind":"function","modifiers":[],"name":"getOrderInfo","nameLocation":"7628:12:9","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"_orderId","nameLocation":"7658:8:9","nodeType":"VariableDeclaration","scope":2107,"src":"7650:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7640:32:9"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2107,"src":"7696:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_memory_ptr","typeString":"struct IGateway.Order"},"typeName":{"id":2104,"nodeType":"UserDefinedTypeName","pathNode":{"id":2103,"name":"Order","nameLocations":["7696:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":2020,"src":"7696:5:9"},"referencedDeclaration":2020,"src":"7696:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2020_storage_ptr","typeString":"struct IGateway.Order"}},"visibility":"internal"}],"src":"7695:14:9"},"scope":2116,"src":"7619:91:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"7716:166:9","text":" @notice Gets the fee details of Gateway.\n @return protocolReward The protocol reward amount.\n @return max_bps The maximum basis points."},"functionSelector":"b810c636","id":2115,"implemented":false,"kind":"function","modifiers":[],"name":"getFeeDetails","nameLocation":"7896:13:9","nodeType":"FunctionDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[],"src":"7909:2:9"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"protocolReward","nameLocation":"7966:14:9","nodeType":"VariableDeclaration","scope":2115,"src":"7959:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2110,"name":"uint64","nodeType":"ElementaryTypeName","src":"7959:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"max_bps","nameLocation":"7990:7:9","nodeType":"VariableDeclaration","scope":2115,"src":"7982:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"7982:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7958:40:9"},"scope":2116,"src":"7887:112:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2117,"src":"211:7790:9","usedErrors":[]}],"src":"39:7963:9"},"id":9}},"contracts":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"Ownable2StepUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":\"Ownable2StepUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":430,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":535,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df70283ff728a1a88debad8b56cd6b31b858a143aff601e8f42a16699317e70d64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH17 0x283FF728A1A88DEBAD8B56CD6B31B858A1 NUMBER 0xAF 0xF6 ADD 0xE8 DELEGATECALL 0x2A AND PUSH10 0x9317E70D64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df70283ff728a1a88debad8b56cd6b31b858a143aff601e8f42a16699317e70d64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH17 0x283FF728A1A88DEBAD8B56CD6B31B858A1 NUMBER 0xAF 0xF6 ADD 0xE8 DELEGATECALL 0x2A AND PUSH10 0x9317E70D64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Gateway.sol":{"Gateway":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFee","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"splitOrderId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"settlePercent","type":"uint96"}],"name":"OrderSettled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"senderFee","type":"address"},{"indexed":false,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"rate","type":"uint96"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"ProcessSettlement","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"ProtocolAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"protocolFee","type":"uint64"}],"name":"ProtocolFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SenderFeeTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"value","type":"address"},{"indexed":false,"internalType":"uint256","name":"status","type":"uint256"}],"name":"SettingManagerBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"_senderFee","type":"uint256"},{"internalType":"address","name":"_refundAddress","type":"address"},{"internalType":"string","name":"messageHash","type":"string"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFeeDetails","outputs":[{"internalType":"uint64","name":"","type":"uint64"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"getOrderInfo","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"senderFee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint96","name":"currentBPS","type":"uint96"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IGateway.Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isTokenSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint96","name":"_senderFee","type":"uint96"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"uint96","name":"_protocolFee","type":"uint96"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"string","name":"_messageHash","type":"string"}],"name":"processSettlement","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"refund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"},{"internalType":"uint256","name":"status","type":"uint256"}],"name":"settingManagerBool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_splitOrderId","type":"bytes32"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"uint64","name":"_settlePercent","type":"uint64"}],"name":"settle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"}],"name":"updateProtocolAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_protocolFeePercent","type":"uint64"}],"name":"updateProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"OrderCreated(address,address,uint256,uint256,bytes32,uint256,string)":{"details":"Emitted when a deposit is made.","params":{"amount":"The amount of the deposit.","messageHash":"The hash of the message.","orderId":"The ID of the order.","rate":"The rate at which the deposit is made.","sender":"The address of the sender.","token":"The address of the deposited token."}},"OrderRefunded(uint256,bytes32)":{"details":"Emitted when an aggregator refunds a transaction.","params":{"fee":"The fee deducted from the refund amount.","orderId":"The ID of the order."}},"OrderSettled(bytes32,bytes32,address,uint96)":{"details":"Emitted when an aggregator settles a transaction.","params":{"liquidityProvider":"The address of the liquidity provider.","orderId":"The ID of the order.","settlePercent":"The percentage at which the transaction is settled.","splitOrderId":"The ID of the split order."}},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"ProcessSettlement(bytes32,uint256,address,address,address,address,uint96,string)":{"details":"Emitted when an onramp order is successfully processed"},"SenderFeeTransferred(address,uint256)":{"details":"Emitted when the sender's fee is transferred.","params":{"amount":"The amount of the fee transferred.","sender":"The address of the sender."}},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"createOrder(address,uint256,uint96,address,uint256,address,string)":{"details":"See {createOrder-IGateway}. "},"getFeeDetails()":{"details":"See {getFeeDetails-IGateway}. "},"getOrderInfo(bytes32)":{"details":"See {getOrderInfo-IGateway}. "},"initialize()":{"details":"Initialize function."},"isTokenSupported(address)":{"details":"See {isTokenSupported-IGateway}. "},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"Pause the contract."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)":{"details":"See {processSettlement-IGateway}. "},"refund(uint256,bytes32)":{"details":"See {refund-IGateway}. "},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"settingManagerBool(bytes32,address,uint256)":{"details":"Sets the boolean value for a specific setting.","params":{"status":"The boolean value to be set. Requirements: - The value must not be a zero address.","value":"The address or value associated with the setting.","what":"The setting to be updated."}},"settle(bytes32,bytes32,address,uint64)":{"details":"See {settle-IGateway}. "},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"unpause()":{"details":"Unpause the contract."},"updateProtocolAddress(bytes32,address)":{"details":"Updates a protocol address.","params":{"value":"The new address to be set. Requirements: - The value must not be a zero address.","what":"The address type to be updated (treasury or aggregator)."}},"updateProtocolFee(uint64)":{"details":"Updates the protocol fee percentage.","params":{"_protocolFeePercent":"The new protocol fee percentage to be set."}}},"title":"Gateway","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1036":{"entryPoint":null,"id":1036,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_389":{"entryPoint":40,"id":389,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":437,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":255,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:10","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:10"},"nodeType":"YulFunctionCall","src":"113:19:10"},"nodeType":"YulExpressionStatement","src":"113:19:10"},{"nodeType":"YulAssignment","src":"141:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:10"},"nodeType":"YulFunctionCall","src":"156:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:10","type":""}],"src":"7:169:10"},{"body":{"nodeType":"YulBlock","src":"288:120:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:10"},"nodeType":"YulFunctionCall","src":"306:14:10"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"322:34:10","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:10"},"nodeType":"YulFunctionCall","src":"299:58:10"},"nodeType":"YulExpressionStatement","src":"299:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:10"},"nodeType":"YulFunctionCall","src":"374:15:10"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"391:9:10","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:10"},"nodeType":"YulFunctionCall","src":"367:34:10"},"nodeType":"YulExpressionStatement","src":"367:34:10"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:10","type":""}],"src":"182:226:10"},{"body":{"nodeType":"YulBlock","src":"560:220:10","statements":[{"nodeType":"YulAssignment","src":"570:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"636:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"641:2:10","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"577:58:10"},"nodeType":"YulFunctionCall","src":"577:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"570:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"742:3:10"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulIdentifier","src":"653:88:10"},"nodeType":"YulFunctionCall","src":"653:93:10"},"nodeType":"YulExpressionStatement","src":"653:93:10"},{"nodeType":"YulAssignment","src":"755:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"766:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:10"},"nodeType":"YulFunctionCall","src":"762:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"755:3:10"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"548:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"556:3:10","type":""}],"src":"414:366:10"},{"body":{"nodeType":"YulBlock","src":"957:248:10","statements":[{"nodeType":"YulAssignment","src":"967:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:10"},"nodeType":"YulFunctionCall","src":"975:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"967:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:10"},"nodeType":"YulFunctionCall","src":"1010:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1033:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1039:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:10"},"nodeType":"YulFunctionCall","src":"1029:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:10"},"nodeType":"YulFunctionCall","src":"1003:47:10"},"nodeType":"YulExpressionStatement","src":"1003:47:10"},{"nodeType":"YulAssignment","src":"1059:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1067:124:10"},"nodeType":"YulFunctionCall","src":"1067:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1059:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"937:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:10","type":""}],"src":"786:419:10"},{"body":{"nodeType":"YulBlock","src":"1254:43:10","statements":[{"nodeType":"YulAssignment","src":"1264:27:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:10"},"nodeType":"YulFunctionCall","src":"1275:16:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:10"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:10","type":""}],"src":"1211:86:10"},{"body":{"nodeType":"YulBlock","src":"1364:51:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1381:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:10"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1386:15:10"},"nodeType":"YulFunctionCall","src":"1386:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:10"},"nodeType":"YulFunctionCall","src":"1374:35:10"},"nodeType":"YulExpressionStatement","src":"1374:35:10"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1352:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1359:3:10","type":""}],"src":"1303:112:10"},{"body":{"nodeType":"YulBlock","src":"1515:120:10","statements":[{"nodeType":"YulAssignment","src":"1525:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1548:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:10"},"nodeType":"YulFunctionCall","src":"1533:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1525:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1625:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:10"},"nodeType":"YulFunctionCall","src":"1610:17:10"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1561:39:10"},"nodeType":"YulFunctionCall","src":"1561:67:10"},"nodeType":"YulExpressionStatement","src":"1561:67:10"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1487:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:10","type":""}],"src":"1421:214:10"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d2565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000175565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620000ec5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e39190620001b5565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015d602783620000ee565b91506200016a82620000ff565b604082019050919050565b6000602082019050818103600083015262000190816200014e565b9050919050565b600060ff82169050919050565b620001af8162000197565b82525050565b6000602082019050620001cc6000830184620001a4565b92915050565b61416b80620001e26000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806379ec5809116100ad578063b810c63611610071578063b810c636146102bc578063cd992400146102db578063e30c3978146102f7578063f22ee70414610315578063f2fde38b1461034557610121565b806379ec58091461022a578063809804f71461025a5780638129fc1c1461028a5780638456cb59146102945780638da5cb5b1461029e57610121565b8063715018a6116100f4578063715018a61461018657806371eedb881461019057806375151b63146101c0578063768c6ec0146101f057806379ba50971461022057610121565b80633f4ba83a1461012657806340ebc6771461013057806347094e2e1461014c5780635c975abb14610168575b600080fd5b61012e610361565b005b61014a60048036038101906101459190612bb0565b610373565b005b61016660048036038101906101619190612c30565b61063b565b005b6101706106a6565b60405161017d9190612c78565b60405180910390f35b61018e6106bd565b005b6101aa60048036038101906101a59190612cc9565b6106d1565b6040516101b79190612c78565b60405180910390f35b6101da60048036038101906101d59190612d09565b610b4f565b6040516101e79190612c78565b60405180910390f35b61020a60048036038101906102059190612d36565b610bab565b6040516102179190612e83565b60405180910390f35b610228610dc3565b005b610244600480360381019061023f9190612f30565b610e50565b6040516102519190612c78565b60405180910390f35b610274600480360381019061026f9190613030565b6114b1565b6040516102819190613101565b60405180910390f35b6102926119b0565b005b61029c611b00565b005b6102a6611b12565b6040516102b3919061312b565b60405180910390f35b6102c4611b3c565b6040516102d2929190613164565b60405180910390f35b6102f560048036038101906102f0919061318d565b611b61565b005b6102ff611ce6565b60405161030c919061312b565b60405180910390f35b61032f600480360381019061032a91906131e0565b611d10565b60405161033c9190612c78565b60405180910390f35b61035f600480360381019061035a9190612d09565b61237d565b005b61036961242a565b6103716124a8565b565b61037b61242a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e1906132a4565b60405180910390fd5b60007f747265617375727900000000000000000000000000000000000000000000000083036104ed578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90613336565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506105eb565b7f61676772656761746f720000000000000000000000000000000000000000000083036105ea578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b906133c8565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610636578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b61064361242a565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b8160405161069b91906133e8565b60405180910390a150565b600060cd60009054906101000a900460ff16905090565b6106c561242a565b6106cf600061250b565b565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075a9061344f565b60405180910390fd5b60ff600083815260200190815260200160002060050160009054906101000a900460ff16156107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be906134bb565b60405180910390fd5b60ff600083815260200190815260200160002060050160019054906101000a900460ff161561082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290613527565b60405180910390fd5b8260ff6000848152602001908152602001600020600401541015610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b90613593565b60405180910390fd5b60008311156109655760ff600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b81526004016109209291906135b3565b6020604051808303816000875af115801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190613608565b505b600160ff600084815260200190815260200160002060050160016101000a81548160ff021916908315150217905550600060ff600084815260200190815260200160002060060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060008360ff6000858152602001908152602001600020600701546109fe9190613664565b905060ff600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60ff600086815260200190815260200160002060050160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff60008781526020019081526020016000206003015484610aab9190613698565b6040518363ffffffff1660e01b8152600401610ac89291906135b3565b6020604051808303816000875af1158015610ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0b9190613608565b50827f0736fe428e1747ca8d387c2e6fa1a31a0cde62d3a167c40a46ade59a3cdc828e85604051610b3c91906136cc565b60405180910390a2600191505092915050565b60006001609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610ba15760019050610ba6565b600090505b919050565b610bb3612a55565b60ff6000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020016007820154815250509050919050565b6000610dcd61253c565b90508073ffffffffffffffffffffffffffffffffffffffff16610dee611ce6565b73ffffffffffffffffffffffffffffffffffffffff1614610e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3b90613759565b60405180910390fd5b610e4d8161250b565b50565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed99061344f565b60405180910390fd5b60ff60008d815260200190815260200160002060050160009054906101000a900460ff1615610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3d906137c5565b60405180910390fd5b60008a11610f89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8090613831565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef9061389d565b60405180910390fd5b60008a90506000896bffffffffffffffffffffffff161461117057600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1603611082576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107990613909565b60405180910390fd5b886bffffffffffffffffffffffff168161109c9190613664565b90508b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8b8b6040518363ffffffff1660e01b81526004016110d9929190613964565b6020604051808303816000875af11580156110f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111c9190613608565b50886bffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b6000876bffffffffffffffffffffffff161115611229578b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16896040518363ffffffff1660e01b81526004016111e4929190613964565b6020604051808303816000875af1158015611203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112279190613608565b505b8b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87836040518363ffffffff1660e01b81526004016112649291906135b3565b6020604051808303816000875af1158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a79190613608565b508560ff60008f815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b60ff60008f815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508960ff60008f815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550886bffffffffffffffffffffffff1660ff60008f815260200190815260200160002060030181905550866bffffffffffffffffffffffff1660ff60008f815260200190815260200160002060040181905550600160ff60008f815260200190815260200160002060050160006101000a81548160ff0219169083151502179055508060ff60008f8152602001908152602001600020600701819055508573ffffffffffffffffffffffffffffffffffffffff168b8e7f8658aa8a4a6ef641d1fd3b5bb33205d173a5404ab1f7cd1a81d2828f94b8bf028f8e8d8b8b8b604051611495969594939291906139e9565b60405180910390a460019150509b9a5050505050505050505050565b60006114bb612544565b6114c8898986898961258e565b6000838390500361150e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150590613a91565b60405180910390fd5b8873ffffffffffffffffffffffffffffffffffffffff166323b872dd3330888c6115389190613698565b6040518463ffffffff1660e01b815260040161155693929190613ab1565b6020604051808303816000875af1158015611575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115999190613608565b5061010060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906115eb90613ae8565b91905055503361010060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516020016116439291906135b3565b6040516020818303038152906040528051906020012090506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff168a61168c9190613b30565b6116969190613ba1565b90506040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018281526020016000151581526020016000151581526020018673ffffffffffffffffffffffffffffffffffffffff16815260200160975467ffffffffffffffff166bffffffffffffffffffffffff1681526020018a81525060ff600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550610120820151816007015590505060ff6000838152602001908152602001600020600701548a73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f40ccd1ceb111a3c186ef9911e1b876dc1f789ed331b86097b3b8851055b6a13784868d8a8a60405161199b959493929190613bd2565b60405180910390a45098975050505050505050565b60008060019054906101000a900460ff161590508080156119e15750600160008054906101000a900460ff1660ff16105b80611a0e57506119f030612741565b158015611a0d5750600160008054906101000a900460ff1660ff16145b5b611a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4490613c92565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611a8a576001600060016101000a81548160ff0219169083151502179055505b620186a0609781905550611a9c612764565b611aa46127bd565b8015611afd5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051611af49190613cfa565b60405180910390a15b50565b611b0861242a565b611b10612816565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080609860009054906101000a900467ffffffffffffffff16609754915091509091565b611b6961242a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bcf906132a4565b60405180910390fd5b6001811480611be75750600281145b611c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1d90613d61565b60405180910390fd5b7f746f6b656e0000000000000000000000000000000000000000000000000000008303611ce15780609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c83604051611cd891906136cc565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611da2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d999061344f565b60405180910390fd5b60ff600085815260200190815260200160002060050160009054906101000a900460ff1615611e06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dfd906134bb565b60405180910390fd5b60ff600085815260200190815260200160002060050160019054906101000a900460ff1615611e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6190613527565b60405180910390fd5b600060ff600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508267ffffffffffffffff1660ff600087815260200190815260200160002060060160008282829054906101000a90046bffffffffffffffffffffffff16611eec9190613d81565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600060ff600087815260200190815260200160002060060160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff160361213e57600160ff600087815260200190815260200160002060050160006101000a81548160ff021916908315150217905550600060ff6000878152602001908152602001600020600301541461213d5760ff600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60ff600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff6000898152602001908152602001600020600301546040518363ffffffff1660e01b81526004016120689291906135b3565b6020604051808303816000875af1158015612087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ab9190613608565b5060ff60008681526020019081526020016000206003015460ff600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b5b60006097548467ffffffffffffffff1660ff60008981526020019081526020016000206007015461216f9190613b30565b6121799190613ba1565b90508060ff600088815260200190815260200160002060070160008282546121a19190613664565b925050819055506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff16836121d99190613b30565b6121e39190613ba1565b905080826121f19190613664565b9150600081111561229e578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016122599291906135b3565b6020604051808303816000875af1158015612278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229c9190613608565b505b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87846040518363ffffffff1660e01b81526004016122d99291906135b3565b6020604051808303816000875af11580156122f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231c9190613608565b508573ffffffffffffffffffffffffffffffffffffffff16877f98ece21e01a01cbe1d1c0dad3b053c8fbd368f99be78be958fcf1d1d13fd249a8a88604051612366929190613df2565b60405180910390a360019350505050949350505050565b61238561242a565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166123e5611b12565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61243261253c565b73ffffffffffffffffffffffffffffffffffffffff16612450611b12565b73ffffffffffffffffffffffffffffffffffffffff16146124a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249d90613e67565b60405180910390fd5b565b6124b0612879565b600060cd60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6124f461253c565b604051612501919061312b565b60405180910390a1565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055612539816128c2565b50565b600033905090565b61254c6106a6565b1561258c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161258390613ed3565b60405180910390fd5b565b6001609a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161260790613f3f565b60405180910390fd5b60008403612653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161264a90613831565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036126c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126b990613fab565b60405180910390fd5b6000811461273a57600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273090614017565b60405180910390fd5b5b5050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166127b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127aa906140a9565b60405180910390fd5b6127bb612988565b565b600060019054906101000a900460ff1661280c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612803906140a9565b60405180910390fd5b6128146129e9565b565b61281e612544565b600160cd60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861286261253c565b60405161286f919061312b565b60405180910390a1565b6128816106a6565b6128c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b790614115565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff166129d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129ce906140a9565b60405180910390fd5b6129e76129e261253c565b61250b565b565b600060019054906101000a900460ff16612a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a2f906140a9565b60405180910390fd5b600060cd60006101000a81548160ff021916908315150217905550565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600081525090565b600080fd5b600080fd5b6000819050919050565b612b2f81612b1c565b8114612b3a57600080fd5b50565b600081359050612b4c81612b26565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b7d82612b52565b9050919050565b612b8d81612b72565b8114612b9857600080fd5b50565b600081359050612baa81612b84565b92915050565b60008060408385031215612bc757612bc6612b12565b5b6000612bd585828601612b3d565b9250506020612be685828601612b9b565b9150509250929050565b600067ffffffffffffffff82169050919050565b612c0d81612bf0565b8114612c1857600080fd5b50565b600081359050612c2a81612c04565b92915050565b600060208284031215612c4657612c45612b12565b5b6000612c5484828501612c1b565b91505092915050565b60008115159050919050565b612c7281612c5d565b82525050565b6000602082019050612c8d6000830184612c69565b92915050565b6000819050919050565b612ca681612c93565b8114612cb157600080fd5b50565b600081359050612cc381612c9d565b92915050565b60008060408385031215612ce057612cdf612b12565b5b6000612cee85828601612cb4565b9250506020612cff85828601612b3d565b9150509250929050565b600060208284031215612d1f57612d1e612b12565b5b6000612d2d84828501612b9b565b91505092915050565b600060208284031215612d4c57612d4b612b12565b5b6000612d5a84828501612b3d565b91505092915050565b612d6c81612b72565b82525050565b612d7b81612c93565b82525050565b612d8a81612c5d565b82525050565b60006bffffffffffffffffffffffff82169050919050565b612db181612d90565b82525050565b61014082016000820151612dce6000850182612d63565b506020820151612de16020850182612d63565b506040820151612df46040850182612d63565b506060820151612e076060850182612d72565b506080820151612e1a6080850182612d72565b5060a0820151612e2d60a0850182612d81565b5060c0820151612e4060c0850182612d81565b5060e0820151612e5360e0850182612d63565b50610100820151612e68610100850182612da8565b50610120820151612e7d610120850182612d72565b50505050565b600061014082019050612e996000830184612db7565b92915050565b612ea881612d90565b8114612eb357600080fd5b50565b600081359050612ec581612e9f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612ef057612eef612ecb565b5b8235905067ffffffffffffffff811115612f0d57612f0c612ed0565b5b602083019150836001820283011115612f2957612f28612ed5565b5b9250929050565b60008060008060008060008060008060006101408c8e031215612f5657612f55612b12565b5b6000612f648e828f01612b3d565b9b50506020612f758e828f01612b9b565b9a50506040612f868e828f01612cb4565b9950506060612f978e828f01612b9b565b9850506080612fa88e828f01612eb6565b97505060a0612fb98e828f01612b9b565b96505060c0612fca8e828f01612eb6565b95505060e0612fdb8e828f01612b9b565b945050610100612fed8e828f01612eb6565b9350506101208c013567ffffffffffffffff81111561300f5761300e612b17565b5b61301b8e828f01612eda565b92509250509295989b509295989b9093969950565b60008060008060008060008060e0898b0312156130505761304f612b12565b5b600061305e8b828c01612b9b565b985050602061306f8b828c01612cb4565b97505060406130808b828c01612eb6565b96505060606130918b828c01612b9b565b95505060806130a28b828c01612cb4565b94505060a06130b38b828c01612b9b565b93505060c089013567ffffffffffffffff8111156130d4576130d3612b17565b5b6130e08b828c01612eda565b92509250509295985092959890939650565b6130fb81612b1c565b82525050565b600060208201905061311660008301846130f2565b92915050565b61312581612b72565b82525050565b6000602082019050613140600083018461311c565b92915050565b61314f81612bf0565b82525050565b61315e81612c93565b82525050565b60006040820190506131796000830185613146565b6131866020830184613155565b9392505050565b6000806000606084860312156131a6576131a5612b12565b5b60006131b486828701612b3d565b93505060206131c586828701612b9b565b92505060406131d686828701612cb4565b9150509250925092565b600080600080608085870312156131fa576131f9612b12565b5b600061320887828801612b3d565b945050602061321987828801612b3d565b935050604061322a87828801612b9b565b925050606061323b87828801612c1b565b91505092959194509250565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b600061328e601583613247565b915061329982613258565b602082019050919050565b600060208201905081810360008301526132bd81613281565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b6000613320602583613247565b915061332b826132c4565b604082019050919050565b6000602082019050818103600083015261334f81613313565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b60006133b2602783613247565b91506133bd82613356565b604082019050919050565b600060208201905081810360008301526133e1816133a5565b9050919050565b60006020820190506133fd6000830184613146565b92915050565b7f4f6e6c7941676772656761746f72000000000000000000000000000000000000600082015250565b6000613439600e83613247565b915061344482613403565b602082019050919050565b600060208201905081810360008301526134688161342c565b9050919050565b7f4f7264657246756c66696c6c6564000000000000000000000000000000000000600082015250565b60006134a5600e83613247565b91506134b08261346f565b602082019050919050565b600060208201905081810360008301526134d481613498565b9050919050565b7f4f72646572526566756e64656400000000000000000000000000000000000000600082015250565b6000613511600d83613247565b915061351c826134db565b602082019050919050565b6000602082019050818103600083015261354081613504565b9050919050565b7f4665654578636565647350726f746f636f6c4665650000000000000000000000600082015250565b600061357d601583613247565b915061358882613547565b602082019050919050565b600060208201905081810360008301526135ac81613570565b9050919050565b60006040820190506135c8600083018561311c565b6135d56020830184613155565b9392505050565b6135e581612c5d565b81146135f057600080fd5b50565b600081519050613602816135dc565b92915050565b60006020828403121561361e5761361d612b12565b5b600061362c848285016135f3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061366f82612c93565b915061367a83612c93565b925082820390508181111561369257613691613635565b5b92915050565b60006136a382612c93565b91506136ae83612c93565b92508282019050808211156136c6576136c5613635565b5b92915050565b60006020820190506136e16000830184613155565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000613743602983613247565b915061374e826136e7565b604082019050919050565b6000602082019050818103600083015261377281613736565b9050919050565b7f4f726465724e6f7446756c66696c6c6564000000000000000000000000000000600082015250565b60006137af601183613247565b91506137ba82613779565b602082019050919050565b600060208201905081810360008301526137de816137a2565b9050919050565b7f416d6f756e7449735a65726f0000000000000000000000000000000000000000600082015250565b600061381b600c83613247565b9150613826826137e5565b602082019050919050565b6000602082019050818103600083015261384a8161380e565b9050919050565b7f526563697069656e7449735a65726f4164647265737300000000000000000000600082015250565b6000613887601683613247565b915061389282613851565b602082019050919050565b600060208201905081810360008301526138b68161387a565b9050919050565b7f53656e646572466565526563697069656e7449735a65726f4164647265737300600082015250565b60006138f3601f83613247565b91506138fe826138bd565b602082019050919050565b60006020820190508181036000830152613922816138e6565b9050919050565b6000819050919050565b600061394e61394961394484612d90565b613929565b612c93565b9050919050565b61395e81613933565b82525050565b6000604082019050613979600083018561311c565b6139866020830184613955565b9392505050565b61399681612d90565b82525050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006139c88385613247565b93506139d583858461399c565b6139de836139ab565b840190509392505050565b600060a0820190506139fe600083018961311c565b613a0b602083018861311c565b613a18604083018761311c565b613a25606083018661398d565b8181036080830152613a388184866139bc565b9050979650505050505050565b7f496e76616c69644d657373616765486173680000000000000000000000000000600082015250565b6000613a7b601283613247565b9150613a8682613a45565b602082019050919050565b60006020820190508181036000830152613aaa81613a6e565b9050919050565b6000606082019050613ac6600083018661311c565b613ad3602083018561311c565b613ae06040830184613155565b949350505050565b6000613af382612c93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613b2557613b24613635565b5b600182019050919050565b6000613b3b82612c93565b9150613b4683612c93565b9250828202613b5481612c93565b91508282048414831517613b6b57613b6a613635565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613bac82612c93565b9150613bb783612c93565b925082613bc757613bc6613b72565b5b828204905092915050565b6000608082019050613be76000830188613155565b613bf460208301876130f2565b613c016040830186613955565b8181036060830152613c148184866139bc565b90509695505050505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613c7c602e83613247565b9150613c8782613c20565b604082019050919050565b60006020820190508181036000830152613cab81613c6f565b9050919050565b6000819050919050565b600060ff82169050919050565b6000613ce4613cdf613cda84613cb2565b613929565b613cbc565b9050919050565b613cf481613cc9565b82525050565b6000602082019050613d0f6000830184613ceb565b92915050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b6000613d4b601783613247565b9150613d5682613d15565b602082019050919050565b60006020820190508181036000830152613d7a81613d3e565b9050919050565b6000613d8c82612d90565b9150613d9783612d90565b925082820390506bffffffffffffffffffffffff811115613dbb57613dba613635565b5b92915050565b6000613ddc613dd7613dd284612bf0565b613929565b612d90565b9050919050565b613dec81613dc1565b82525050565b6000604082019050613e0760008301856130f2565b613e146020830184613de3565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613e51602083613247565b9150613e5c82613e1b565b602082019050919050565b60006020820190508181036000830152613e8081613e44565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613ebd601083613247565b9150613ec882613e87565b602082019050919050565b60006020820190508181036000830152613eec81613eb0565b9050919050565b7f546f6b656e4e6f74537570706f72746564000000000000000000000000000000600082015250565b6000613f29601183613247565b9150613f3482613ef3565b602082019050919050565b60006020820190508181036000830152613f5881613f1c565b9050919050565b7f5468726f775a65726f4164647265737300000000000000000000000000000000600082015250565b6000613f95601083613247565b9150613fa082613f5f565b602082019050919050565b60006020820190508181036000830152613fc481613f88565b9050919050565b7f496e76616c696453656e646572466565526563697069656e7400000000000000600082015250565b6000614001601983613247565b915061400c82613fcb565b602082019050919050565b6000602082019050818103600083015261403081613ff4565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000614093602b83613247565b915061409e82614037565b604082019050919050565b600060208201905081810360008301526140c281614086565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006140ff601483613247565b915061410a826140c9565b602082019050919050565b6000602082019050818103600083015261412e816140f2565b905091905056fea26469706673582212205175adabb80fc697577424a466888e0a017043c5a1e54056637096b25deffed964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x72 SWAP1 PUSH3 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH3 0xEC JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH3 0xE3 SWAP2 SWAP1 PUSH3 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15D PUSH1 0x27 DUP4 PUSH3 0xEE JUMP JUMPDEST SWAP2 POP PUSH3 0x16A DUP3 PUSH3 0xFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x190 DUP2 PUSH3 0x14E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AF DUP2 PUSH3 0x197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x416B DUP1 PUSH3 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79EC5809 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB810C636 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB810C636 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF22EE704 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x79EC5809 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x809804F7 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x71EEDB88 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x75151B63 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x768C6EC0 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x220 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x168 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x361 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0xDC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x19B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH2 0x1B00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0x3164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x318D JUMP JUMPDEST PUSH2 0x1B61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FF PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x237D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x369 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x371 PUSH2 0x24A8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x37B PUSH2 0x242A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP1 PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x4ED JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x5EB JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x5EA JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B SWAP1 PUSH2 0x33C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x636 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x643 PUSH2 0x242A JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x33E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x0 PUSH2 0x250B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x763 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75A SWAP1 PUSH2 0x344F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP1 PUSH2 0x3527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP1 PUSH2 0x3593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x965 JUMPI PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x920 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0x3664 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x3698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP DUP3 PUSH32 0x736FE428E1747CA8D387C2E6FA1A31A0CDE62D3A167C40A46ADE59A3CDC828E DUP6 PUSH1 0x40 MLOAD PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xBA1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCD PUSH2 0x253C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDEE PUSH2 0x1CE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3B SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0x250B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED9 SWAP1 PUSH2 0x344F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3D SWAP1 PUSH2 0x37C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF80 SWAP1 PUSH2 0x3831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEF SWAP1 PUSH2 0x389D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 SWAP1 POP PUSH1 0x0 DUP10 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1170 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP1 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x3664 JUMP JUMPDEST SWAP1 POP DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP12 DUP12 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP3 SWAP2 SWAP1 PUSH2 0x3964 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111C SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 DUP8 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1229 JUMPI DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E4 SWAP3 SWAP2 SWAP1 PUSH2 0x3964 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1203 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1227 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP DUP6 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 DUP15 PUSH32 0x8658AA8A4A6EF641D1FD3B5BB33205D173A5404AB1F7CD1A81D2828F94B8BF02 DUP16 DUP15 DUP14 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x1495 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB PUSH2 0x2544 JUMP JUMPDEST PUSH2 0x14C8 DUP10 DUP10 DUP7 DUP10 DUP10 PUSH2 0x258E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x150E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1505 SWAP1 PUSH2 0x3A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP13 PUSH2 0x1538 SWAP2 SWAP1 PUSH2 0x3698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1556 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AB1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1599 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15EB SWAP1 PUSH2 0x3AE8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH2 0x100 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1643 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x168C SWAP2 SWAP1 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x1696 SWAP2 SWAP1 PUSH2 0x3BA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x97 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE POP PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40CCD1CEB111A3C186EF9911E1B876DC1F789ED331B86097B3B8851055B6A137 DUP5 DUP7 DUP14 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x199B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x19E1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1A0E JUMPI POP PUSH2 0x19F0 ADDRESS PUSH2 0x2741 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1A0D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1A4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A44 SWAP1 PUSH2 0x3C92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A8A JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH3 0x186A0 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x1A9C PUSH2 0x2764 JUMP JUMPDEST PUSH2 0x1AA4 PUSH2 0x27BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AFD JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1AF4 SWAP2 SWAP1 PUSH2 0x3CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B08 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x1B10 PUSH2 0x2816 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x97 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1B69 PUSH2 0x242A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCF SWAP1 PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x1BE7 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x1C26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1D SWAP1 PUSH2 0x3D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x1CE1 JUMPI DUP1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CD8 SWAP2 SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D99 SWAP1 PUSH2 0x344F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFD SWAP1 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E61 SWAP1 PUSH2 0x3527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP2 SWAP1 PUSH2 0x3D81 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x213E JUMPI PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x213D JUMPI PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xFF PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2068 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2087 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20AB SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x216F SWAP2 SWAP1 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x2179 SWAP2 SWAP1 PUSH2 0x3BA1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x21A1 SWAP2 SWAP1 PUSH2 0x3664 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x21D9 SWAP2 SWAP1 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x21E3 SWAP2 SWAP1 PUSH2 0x3BA1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x21F1 SWAP2 SWAP1 PUSH2 0x3664 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x229E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2259 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229C SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D9 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x231C SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH32 0x98ECE21E01A01CBE1D1C0DAD3B053C8FBD368F99BE78BE958FCF1D1D13FD249A DUP11 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2366 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2385 PUSH2 0x242A JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23E5 PUSH2 0x1B12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x2432 PUSH2 0x253C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2450 PUSH2 0x1B12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249D SWAP1 PUSH2 0x3E67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x24B0 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x24F4 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2501 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x2539 DUP2 PUSH2 0x28C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x254C PUSH2 0x6A6 JUMP JUMPDEST ISZERO PUSH2 0x258C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2583 SWAP1 PUSH2 0x3ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9A PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2607 SWAP1 PUSH2 0x3F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SUB PUSH2 0x2653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x264A SWAP1 PUSH2 0x3831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B9 SWAP1 PUSH2 0x3FAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x273A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2739 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2730 SWAP1 PUSH2 0x4017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27AA SWAP1 PUSH2 0x40A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27BB PUSH2 0x2988 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x280C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2803 SWAP1 PUSH2 0x40A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2814 PUSH2 0x29E9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x281E PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2862 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286F SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2881 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x28C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28B7 SWAP1 PUSH2 0x4115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x29D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29CE SWAP1 PUSH2 0x40A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29E7 PUSH2 0x29E2 PUSH2 0x253C JUMP JUMPDEST PUSH2 0x250B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A2F SWAP1 PUSH2 0x40A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B2F DUP2 PUSH2 0x2B1C JUMP JUMPDEST DUP2 EQ PUSH2 0x2B3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B4C DUP2 PUSH2 0x2B26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B7D DUP3 PUSH2 0x2B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B8D DUP2 PUSH2 0x2B72 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BAA DUP2 PUSH2 0x2B84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BC7 JUMPI PUSH2 0x2BC6 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD5 DUP6 DUP3 DUP7 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BE6 DUP6 DUP3 DUP7 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C0D DUP2 PUSH2 0x2BF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C2A DUP2 PUSH2 0x2C04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C46 JUMPI PUSH2 0x2C45 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C54 DUP5 DUP3 DUP6 ADD PUSH2 0x2C1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C72 DUP2 PUSH2 0x2C5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C8D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CA6 DUP2 PUSH2 0x2C93 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CC3 DUP2 PUSH2 0x2C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE0 JUMPI PUSH2 0x2CDF PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CEE DUP6 DUP3 DUP7 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CFF DUP6 DUP3 DUP7 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1F JUMPI PUSH2 0x2D1E PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D2D DUP5 DUP3 DUP6 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4C JUMPI PUSH2 0x2D4B PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D5A DUP5 DUP3 DUP6 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D6C DUP2 PUSH2 0x2B72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D7B DUP2 PUSH2 0x2C93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D8A DUP2 PUSH2 0x2C5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB1 DUP2 PUSH2 0x2D90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2DCE PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2D63 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2DE1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2D63 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2DF4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2D63 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2E07 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2D72 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2E1A PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2D72 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2E2D PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2D81 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2E40 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2D81 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2E53 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2D63 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2E68 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2DA8 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2E7D PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2D72 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x2E99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EA8 DUP2 PUSH2 0x2D90 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC5 DUP2 PUSH2 0x2E9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2EF0 JUMPI PUSH2 0x2EEF PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F0D JUMPI PUSH2 0x2F0C PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2F29 JUMPI PUSH2 0x2F28 PUSH2 0x2ED5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x140 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x2F56 JUMPI PUSH2 0x2F55 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F64 DUP15 DUP3 DUP16 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH2 0x2F75 DUP15 DUP3 DUP16 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH2 0x2F86 DUP15 DUP3 DUP16 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH2 0x2F97 DUP15 DUP3 DUP16 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH2 0x2FA8 DUP15 DUP3 DUP16 ADD PUSH2 0x2EB6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH2 0x2FB9 DUP15 DUP3 DUP16 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH2 0x2FCA DUP15 DUP3 DUP16 ADD PUSH2 0x2EB6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH2 0x2FDB DUP15 DUP3 DUP16 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH2 0x2FED DUP15 DUP3 DUP16 ADD PUSH2 0x2EB6 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x300F JUMPI PUSH2 0x300E PUSH2 0x2B17 JUMP JUMPDEST JUMPDEST PUSH2 0x301B DUP15 DUP3 DUP16 ADD PUSH2 0x2EDA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3050 JUMPI PUSH2 0x304F PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x305E DUP12 DUP3 DUP13 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x306F DUP12 DUP3 DUP13 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x3080 DUP12 DUP3 DUP13 ADD PUSH2 0x2EB6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x3091 DUP12 DUP3 DUP13 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x30A2 DUP12 DUP3 DUP13 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x30B3 DUP12 DUP3 DUP13 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D4 JUMPI PUSH2 0x30D3 PUSH2 0x2B17 JUMP JUMPDEST JUMPDEST PUSH2 0x30E0 DUP12 DUP3 DUP13 ADD PUSH2 0x2EDA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x30FB DUP2 PUSH2 0x2B1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3116 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3125 DUP2 PUSH2 0x2B72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3140 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x314F DUP2 PUSH2 0x2BF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x315E DUP2 PUSH2 0x2C93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3179 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3146 JUMP JUMPDEST PUSH2 0x3186 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31A6 JUMPI PUSH2 0x31A5 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31B4 DUP7 DUP3 DUP8 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31C5 DUP7 DUP3 DUP8 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31D6 DUP7 DUP3 DUP8 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31FA JUMPI PUSH2 0x31F9 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3208 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3219 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x322A DUP8 DUP3 DUP9 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x323B DUP8 DUP3 DUP9 ADD PUSH2 0x2C1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328E PUSH1 0x15 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3299 DUP3 PUSH2 0x3258 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32BD DUP2 PUSH2 0x3281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3320 PUSH1 0x25 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x332B DUP3 PUSH2 0x32C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x334F DUP2 PUSH2 0x3313 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B2 PUSH1 0x27 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x33BD DUP3 PUSH2 0x3356 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33E1 DUP2 PUSH2 0x33A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7941676772656761746F72000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3439 PUSH1 0xE DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3444 DUP3 PUSH2 0x3403 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3468 DUP2 PUSH2 0x342C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F7264657246756C66696C6C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A5 PUSH1 0xE DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x34B0 DUP3 PUSH2 0x346F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34D4 DUP2 PUSH2 0x3498 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F72646572526566756E64656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3511 PUSH1 0xD DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x351C DUP3 PUSH2 0x34DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3540 DUP2 PUSH2 0x3504 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665654578636565647350726F746F636F6C4665650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357D PUSH1 0x15 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3588 DUP3 PUSH2 0x3547 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35AC DUP2 PUSH2 0x3570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35C8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x35D5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x35E5 DUP2 PUSH2 0x2C5D JUMP JUMPDEST DUP2 EQ PUSH2 0x35F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3602 DUP2 PUSH2 0x35DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x361E JUMPI PUSH2 0x361D PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x362C DUP5 DUP3 DUP6 ADD PUSH2 0x35F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x366F DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x367A DUP4 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3692 JUMPI PUSH2 0x3691 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A3 DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x36AE DUP4 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x36C6 JUMPI PUSH2 0x36C5 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3743 PUSH1 0x29 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x374E DUP3 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3772 DUP2 PUSH2 0x3736 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465724E6F7446756C66696C6C6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37AF PUSH1 0x11 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x37BA DUP3 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37DE DUP2 PUSH2 0x37A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7449735A65726F0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381B PUSH1 0xC DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3826 DUP3 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x384A DUP2 PUSH2 0x380E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E7449735A65726F4164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3887 PUSH1 0x16 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3892 DUP3 PUSH2 0x3851 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38B6 DUP2 PUSH2 0x387A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572466565526563697069656E7449735A65726F4164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F3 PUSH1 0x1F DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x38FE DUP3 PUSH2 0x38BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3922 DUP2 PUSH2 0x38E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x394E PUSH2 0x3949 PUSH2 0x3944 DUP5 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x3929 JUMP JUMPDEST PUSH2 0x2C93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x395E DUP2 PUSH2 0x3933 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3979 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3986 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3955 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3996 DUP2 PUSH2 0x2D90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C8 DUP4 DUP6 PUSH2 0x3247 JUMP JUMPDEST SWAP4 POP PUSH2 0x39D5 DUP4 DUP6 DUP5 PUSH2 0x399C JUMP JUMPDEST PUSH2 0x39DE DUP4 PUSH2 0x39AB JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x39FE PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3A0B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3A18 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3A25 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x398D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3A38 DUP2 DUP5 DUP7 PUSH2 0x39BC JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C69644D657373616765486173680000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A7B PUSH1 0x12 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A86 DUP3 PUSH2 0x3A45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AAA DUP2 PUSH2 0x3A6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3AC6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3AD3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3AE0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF3 DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3B25 JUMPI PUSH2 0x3B24 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3B DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B46 DUP4 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3B54 DUP2 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3B6B JUMPI PUSH2 0x3B6A PUSH2 0x3635 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BAC DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BB7 DUP4 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3BC7 JUMPI PUSH2 0x3BC6 PUSH2 0x3B72 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3BE7 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3155 JUMP JUMPDEST PUSH2 0x3BF4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x30F2 JUMP JUMPDEST PUSH2 0x3C01 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3955 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C14 DUP2 DUP5 DUP7 PUSH2 0x39BC JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7C PUSH1 0x2E DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C87 DUP3 PUSH2 0x3C20 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CAB DUP2 PUSH2 0x3C6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE4 PUSH2 0x3CDF PUSH2 0x3CDA DUP5 PUSH2 0x3CB2 JUMP JUMPDEST PUSH2 0x3929 JUMP JUMPDEST PUSH2 0x3CBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CF4 DUP2 PUSH2 0x3CC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4B PUSH1 0x17 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D56 DUP3 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D7A DUP2 PUSH2 0x3D3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8C DUP3 PUSH2 0x2D90 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D97 DUP4 PUSH2 0x2D90 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DBB JUMPI PUSH2 0x3DBA PUSH2 0x3635 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DDC PUSH2 0x3DD7 PUSH2 0x3DD2 DUP5 PUSH2 0x2BF0 JUMP JUMPDEST PUSH2 0x3929 JUMP JUMPDEST PUSH2 0x2D90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DEC DUP2 PUSH2 0x3DC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E07 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30F2 JUMP JUMPDEST PUSH2 0x3E14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3DE3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E51 PUSH1 0x20 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E5C DUP3 PUSH2 0x3E1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E80 DUP2 PUSH2 0x3E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EBD PUSH1 0x10 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC8 DUP3 PUSH2 0x3E87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EEC DUP2 PUSH2 0x3EB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E4E6F74537570706F72746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F29 PUSH1 0x11 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F34 DUP3 PUSH2 0x3EF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F58 DUP2 PUSH2 0x3F1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726F775A65726F4164647265737300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F95 PUSH1 0x10 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA0 DUP3 PUSH2 0x3F5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FC4 DUP2 PUSH2 0x3F88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696453656E646572466565526563697069656E7400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4001 PUSH1 0x19 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x400C DUP3 PUSH2 0x3FCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4030 DUP2 PUSH2 0x3FF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4093 PUSH1 0x2B DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x409E DUP3 PUSH2 0x4037 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40C2 DUP2 PUSH2 0x4086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40FF PUSH1 0x14 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x410A DUP3 PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x412E DUP2 PUSH2 0x40F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH22 0xADABB80FC697577424A466888E0A017043C5A1E54056 PUSH4 0x7096B25D 0xEF INVALID 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"390:8510:7:-:0;;;708:44;;;;;;;;;;726:22;:20;;;:22;;:::i;:::-;390:8510;;5939:280:2;6007:13;;;;;;;;;;;6006:14;5998:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6094:15;6078:31;;:12;;;;;;;;;;:31;;;6074:139;;6140:15;6125:12;;:30;;;;;;;;;;;;;;;;;;6174:28;6186:15;6174:28;;;;;;:::i;:::-;;;;;;;;6074:139;5939:280::o;7:169:10:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;390:8510:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable2Step_init_26":{"entryPoint":10084,"id":26,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_145":{"entryPoint":10632,"id":145,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_440":{"entryPoint":10173,"id":440,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_450":{"entryPoint":10729,"id":450,"parameterSlots":0,"returnSlots":0},"@_checkOwner_176":{"entryPoint":9258,"id":176,"parameterSlots":0,"returnSlots":0},"@_handler_1262":{"entryPoint":9614,"id":1262,"parameterSlots":5,"returnSlots":0},"@_msgSender_894":{"entryPoint":9532,"id":894,"parameterSlots":0,"returnSlots":1},"@_pause_514":{"entryPoint":10262,"id":514,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_487":{"entryPoint":9540,"id":487,"parameterSlots":0,"returnSlots":0},"@_requirePaused_498":{"entryPoint":10361,"id":498,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_233":{"entryPoint":10434,"id":233,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_78":{"entryPoint":9483,"id":78,"parameterSlots":1,"returnSlots":0},"@_unpause_530":{"entryPoint":9384,"id":530,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_100":{"entryPoint":3523,"id":100,"parameterSlots":0,"returnSlots":0},"@createOrder_1206":{"entryPoint":5297,"id":1206,"parameterSlots":8,"returnSlots":1},"@getFeeDetails_1748":{"entryPoint":6972,"id":1748,"parameterSlots":0,"returnSlots":2},"@getOrderInfo_1716":{"entryPoint":2987,"id":1716,"parameterSlots":1,"returnSlots":1},"@initialize_1053":{"entryPoint":6576,"id":1053,"parameterSlots":0,"returnSlots":0},"@isContract_554":{"entryPoint":10049,"id":554,"parameterSlots":1,"returnSlots":1},"@isTokenSupported_1735":{"entryPoint":2895,"id":1735,"parameterSlots":1,"returnSlots":1},"@owner_162":{"entryPoint":6930,"id":162,"parameterSlots":0,"returnSlots":1},"@pause_1076":{"entryPoint":6912,"id":1076,"parameterSlots":0,"returnSlots":0},"@paused_475":{"entryPoint":1702,"id":475,"parameterSlots":0,"returnSlots":1},"@pendingOwner_41":{"entryPoint":7398,"id":41,"parameterSlots":0,"returnSlots":1},"@processSettlement_1702":{"entryPoint":3664,"id":1702,"parameterSlots":11,"returnSlots":1},"@refund_1529":{"entryPoint":1745,"id":1529,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_190":{"entryPoint":1725,"id":190,"parameterSlots":0,"returnSlots":0},"@settingManagerBool_1843":{"entryPoint":7009,"id":1843,"parameterSlots":3,"returnSlots":0},"@settle_1423":{"entryPoint":7440,"id":1423,"parameterSlots":4,"returnSlots":1},"@transferOwnership_61":{"entryPoint":9085,"id":61,"parameterSlots":1,"returnSlots":0},"@unpause_1086":{"entryPoint":865,"id":1086,"parameterSlots":0,"returnSlots":0},"@updateProtocolAddress_1932":{"entryPoint":883,"id":1932,"parameterSlots":2,"returnSlots":0},"@updateProtocolFee_1860":{"entryPoint":1595,"id":1860,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":11163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":13811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":11069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":11994,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":11444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":11291,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":11958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint96t_addresst_uint256t_addresst_string_calldata_ptr":{"entryPoint":12336,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":11574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":11184,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_uint256":{"entryPoint":12685,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_addresst_uint256t_addresst_uint96t_addresst_uint96t_addresst_uint96t_string_calldata_ptr":{"entryPoint":12080,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64":{"entryPoint":12768,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_bytes32":{"entryPoint":11465,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":11312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":11619,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12572,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":11649,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11369,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12530,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":15595,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14780,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack":{"entryPoint":13572,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":16626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack":{"entryPoint":12929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack":{"entryPoint":14134,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack":{"entryPoint":14458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack":{"entryPoint":14242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack":{"entryPoint":14350,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":16048,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":15471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack":{"entryPoint":14566,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack":{"entryPoint":15678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack":{"entryPoint":13464,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":15940,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack":{"entryPoint":13075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack":{"entryPoint":13680,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack":{"entryPoint":16264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack":{"entryPoint":14958,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack":{"entryPoint":16156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":16518,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack":{"entryPoint":13221,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack":{"entryPoint":13356,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack":{"entryPoint":16372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Order_$2020_memory_ptr_to_t_struct$_Order_$2020_memory_ptr_fromStack":{"entryPoint":11703,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11634,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12629,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":12614,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint96_fromStack":{"entryPoint":15843,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":14677,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96":{"entryPoint":11688,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":14733,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_string_calldata_ptr__to_t_address_t_address_t_address_t_uint96_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14825,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":15025,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13747,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":14692,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":12545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed":{"entryPoint":15858,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":15610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13607,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12964,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14169,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16083,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15506,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14601,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13499,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15975,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13715,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16299,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16191,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13256,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13391,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Order_$2020_memory_ptr__to_t_struct$_Order_$2020_memory_ptr__fromStack_reversed":{"entryPoint":11907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15314,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":13288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed":{"entryPoint":12644,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12871,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13976,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15265,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":15152,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13924,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":15745,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":11122,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11357,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11036,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":15538,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11090,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11411,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":11248,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":15548,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":11664,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":15561,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint64_to_t_uint96":{"entryPoint":15809,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":14643,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14748,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":14633,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15080,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13877,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15218,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":11984,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11979,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11989,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11031,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11026,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14763,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd":{"entryPoint":13531,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":16585,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf":{"entryPoint":12888,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":14055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07":{"entryPoint":14417,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86":{"entryPoint":14201,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2":{"entryPoint":14309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":16007,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":15392,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61":{"entryPoint":14525,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338":{"entryPoint":15637,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5":{"entryPoint":13423,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":15899,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead":{"entryPoint":12996,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de":{"entryPoint":13639,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7":{"entryPoint":16223,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4":{"entryPoint":14917,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1":{"entryPoint":16115,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":16439,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4":{"entryPoint":13142,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243":{"entryPoint":13315,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8":{"entryPoint":16331,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11140,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13788,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":11046,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11421,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":11268,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":11935,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:44098:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"379:32:10","statements":[{"nodeType":"YulAssignment","src":"389:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:77:10"},{"body":{"nodeType":"YulBlock","src":"460:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:10"},"nodeType":"YulFunctionCall","src":"519:12:10"},"nodeType":"YulExpressionStatement","src":"519:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"490:17:10"},"nodeType":"YulFunctionCall","src":"490:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:10"},"nodeType":"YulFunctionCall","src":"480:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:10"},"nodeType":"YulFunctionCall","src":"473:43:10"},"nodeType":"YulIf","src":"470:63:10"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:10","type":""}],"src":"417:122:10"},{"body":{"nodeType":"YulBlock","src":"597:87:10","statements":[{"nodeType":"YulAssignment","src":"607:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:10"},"nodeType":"YulFunctionCall","src":"616:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:10"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"645:26:10"},"nodeType":"YulFunctionCall","src":"645:33:10"},"nodeType":"YulExpressionStatement","src":"645:33:10"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:10","type":""}],"src":"545:139:10"},{"body":{"nodeType":"YulBlock","src":"735:81:10","statements":[{"nodeType":"YulAssignment","src":"745:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"760:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"767:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:10"},"nodeType":"YulFunctionCall","src":"756:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"745:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"717:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"727:7:10","type":""}],"src":"690:126:10"},{"body":{"nodeType":"YulBlock","src":"867:51:10","statements":[{"nodeType":"YulAssignment","src":"877:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"906:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"888:17:10"},"nodeType":"YulFunctionCall","src":"888:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"877:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"849:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"859:7:10","type":""}],"src":"822:96:10"},{"body":{"nodeType":"YulBlock","src":"967:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:10"},"nodeType":"YulFunctionCall","src":"1026:12:10"},"nodeType":"YulExpressionStatement","src":"1026:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"997:17:10"},"nodeType":"YulFunctionCall","src":"997:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:10"},"nodeType":"YulFunctionCall","src":"987:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:10"},"nodeType":"YulFunctionCall","src":"980:43:10"},"nodeType":"YulIf","src":"977:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:10","type":""}],"src":"924:122:10"},{"body":{"nodeType":"YulBlock","src":"1104:87:10","statements":[{"nodeType":"YulAssignment","src":"1114:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:10"},"nodeType":"YulFunctionCall","src":"1123:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1152:26:10"},"nodeType":"YulFunctionCall","src":"1152:33:10"},"nodeType":"YulExpressionStatement","src":"1152:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:10","type":""}],"src":"1052:139:10"},{"body":{"nodeType":"YulBlock","src":"1280:391:10","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:10"},"nodeType":"YulFunctionCall","src":"1328:79:10"},"nodeType":"YulExpressionStatement","src":"1328:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:10"},"nodeType":"YulFunctionCall","src":"1297:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:10"},"nodeType":"YulFunctionCall","src":"1293:32:10"},"nodeType":"YulIf","src":"1290:119:10"},{"nodeType":"YulBlock","src":"1419:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:10"},"nodeType":"YulFunctionCall","src":"1494:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1473:20:10"},"nodeType":"YulFunctionCall","src":"1473:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:10"}]}]},{"nodeType":"YulBlock","src":"1546:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:10"},"nodeType":"YulFunctionCall","src":"1622:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1601:20:10"},"nodeType":"YulFunctionCall","src":"1601:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:10","type":""}],"src":"1197:474:10"},{"body":{"nodeType":"YulBlock","src":"1721:57:10","statements":[{"nodeType":"YulAssignment","src":"1731:41:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1753:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:10"},"nodeType":"YulFunctionCall","src":"1742:30:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:10"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:10","type":""}],"src":"1677:101:10"},{"body":{"nodeType":"YulBlock","src":"1826:78:10","statements":[{"body":{"nodeType":"YulBlock","src":"1882:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1891:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1894:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1884:6:10"},"nodeType":"YulFunctionCall","src":"1884:12:10"},"nodeType":"YulExpressionStatement","src":"1884:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1849:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1873:5:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1856:16:10"},"nodeType":"YulFunctionCall","src":"1856:23:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1846:2:10"},"nodeType":"YulFunctionCall","src":"1846:34:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1839:6:10"},"nodeType":"YulFunctionCall","src":"1839:42:10"},"nodeType":"YulIf","src":"1836:62:10"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1819:5:10","type":""}],"src":"1784:120:10"},{"body":{"nodeType":"YulBlock","src":"1961:86:10","statements":[{"nodeType":"YulAssignment","src":"1971:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1993:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1980:12:10"},"nodeType":"YulFunctionCall","src":"1980:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1971:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2035:5:10"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"2009:25:10"},"nodeType":"YulFunctionCall","src":"2009:32:10"},"nodeType":"YulExpressionStatement","src":"2009:32:10"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1939:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1947:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1955:5:10","type":""}],"src":"1910:137:10"},{"body":{"nodeType":"YulBlock","src":"2118:262:10","statements":[{"body":{"nodeType":"YulBlock","src":"2164:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2166:77:10"},"nodeType":"YulFunctionCall","src":"2166:79:10"},"nodeType":"YulExpressionStatement","src":"2166:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2139:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2135:3:10"},"nodeType":"YulFunctionCall","src":"2135:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2160:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2131:3:10"},"nodeType":"YulFunctionCall","src":"2131:32:10"},"nodeType":"YulIf","src":"2128:119:10"},{"nodeType":"YulBlock","src":"2257:116:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2272:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2286:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2276:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2301:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2335:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2346:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:10"},"nodeType":"YulFunctionCall","src":"2331:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2355:7:10"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"2311:19:10"},"nodeType":"YulFunctionCall","src":"2311:52:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2301:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2088:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2099:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2111:6:10","type":""}],"src":"2053:327:10"},{"body":{"nodeType":"YulBlock","src":"2428:48:10","statements":[{"nodeType":"YulAssignment","src":"2438:32:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2463:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2456:6:10"},"nodeType":"YulFunctionCall","src":"2456:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2449:6:10"},"nodeType":"YulFunctionCall","src":"2449:21:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2438:7:10"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2410:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2420:7:10","type":""}],"src":"2386:90:10"},{"body":{"nodeType":"YulBlock","src":"2541:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2558:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2578:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2563:14:10"},"nodeType":"YulFunctionCall","src":"2563:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2551:6:10"},"nodeType":"YulFunctionCall","src":"2551:34:10"},"nodeType":"YulExpressionStatement","src":"2551:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2529:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2536:3:10","type":""}],"src":"2482:109:10"},{"body":{"nodeType":"YulBlock","src":"2689:118:10","statements":[{"nodeType":"YulAssignment","src":"2699:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2711:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2722:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:10"},"nodeType":"YulFunctionCall","src":"2707:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2699:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2773:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2786:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2797:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2782:3:10"},"nodeType":"YulFunctionCall","src":"2782:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2735:37:10"},"nodeType":"YulFunctionCall","src":"2735:65:10"},"nodeType":"YulExpressionStatement","src":"2735:65:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2661:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2673:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2684:4:10","type":""}],"src":"2597:210:10"},{"body":{"nodeType":"YulBlock","src":"2858:32:10","statements":[{"nodeType":"YulAssignment","src":"2868:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"2879:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2868:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2840:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2850:7:10","type":""}],"src":"2813:77:10"},{"body":{"nodeType":"YulBlock","src":"2939:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"2996:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3005:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3008:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2998:6:10"},"nodeType":"YulFunctionCall","src":"2998:12:10"},"nodeType":"YulExpressionStatement","src":"2998:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2962:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2987:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2969:17:10"},"nodeType":"YulFunctionCall","src":"2969:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2959:2:10"},"nodeType":"YulFunctionCall","src":"2959:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2952:6:10"},"nodeType":"YulFunctionCall","src":"2952:43:10"},"nodeType":"YulIf","src":"2949:63:10"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2932:5:10","type":""}],"src":"2896:122:10"},{"body":{"nodeType":"YulBlock","src":"3076:87:10","statements":[{"nodeType":"YulAssignment","src":"3086:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3108:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3095:12:10"},"nodeType":"YulFunctionCall","src":"3095:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3086:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3151:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3124:26:10"},"nodeType":"YulFunctionCall","src":"3124:33:10"},"nodeType":"YulExpressionStatement","src":"3124:33:10"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3054:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"3062:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3070:5:10","type":""}],"src":"3024:139:10"},{"body":{"nodeType":"YulBlock","src":"3252:391:10","statements":[{"body":{"nodeType":"YulBlock","src":"3298:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3300:77:10"},"nodeType":"YulFunctionCall","src":"3300:79:10"},"nodeType":"YulExpressionStatement","src":"3300:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3273:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3282:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:10"},"nodeType":"YulFunctionCall","src":"3269:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3294:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3265:3:10"},"nodeType":"YulFunctionCall","src":"3265:32:10"},"nodeType":"YulIf","src":"3262:119:10"},{"nodeType":"YulBlock","src":"3391:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3406:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3420:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3410:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3435:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3470:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3481:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3466:3:10"},"nodeType":"YulFunctionCall","src":"3466:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3490:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3445:20:10"},"nodeType":"YulFunctionCall","src":"3445:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3435:6:10"}]}]},{"nodeType":"YulBlock","src":"3518:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3533:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3547:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3537:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3563:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3598:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3609:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3594:3:10"},"nodeType":"YulFunctionCall","src":"3594:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3618:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3573:20:10"},"nodeType":"YulFunctionCall","src":"3573:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3563:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3214:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3225:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3237:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3245:6:10","type":""}],"src":"3169:474:10"},{"body":{"nodeType":"YulBlock","src":"3715:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"3761:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3763:77:10"},"nodeType":"YulFunctionCall","src":"3763:79:10"},"nodeType":"YulExpressionStatement","src":"3763:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3736:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3745:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3732:3:10"},"nodeType":"YulFunctionCall","src":"3732:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3757:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3728:3:10"},"nodeType":"YulFunctionCall","src":"3728:32:10"},"nodeType":"YulIf","src":"3725:119:10"},{"nodeType":"YulBlock","src":"3854:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3869:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3883:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3873:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3898:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3933:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3944:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3929:3:10"},"nodeType":"YulFunctionCall","src":"3929:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3953:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3908:20:10"},"nodeType":"YulFunctionCall","src":"3908:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3898:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3685:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3696:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3708:6:10","type":""}],"src":"3649:329:10"},{"body":{"nodeType":"YulBlock","src":"4050:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"4096:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4098:77:10"},"nodeType":"YulFunctionCall","src":"4098:79:10"},"nodeType":"YulExpressionStatement","src":"4098:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4071:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"4080:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4067:3:10"},"nodeType":"YulFunctionCall","src":"4067:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4092:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4063:3:10"},"nodeType":"YulFunctionCall","src":"4063:32:10"},"nodeType":"YulIf","src":"4060:119:10"},{"nodeType":"YulBlock","src":"4189:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4204:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4218:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4208:6:10","type":""}]},{"nodeType":"YulAssignment","src":"4233:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4268:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"4279:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4264:3:10"},"nodeType":"YulFunctionCall","src":"4264:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4288:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4243:20:10"},"nodeType":"YulFunctionCall","src":"4243:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4233:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4020:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4031:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4043:6:10","type":""}],"src":"3984:329:10"},{"body":{"nodeType":"YulBlock","src":"4374:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4391:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4414:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4396:17:10"},"nodeType":"YulFunctionCall","src":"4396:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4384:6:10"},"nodeType":"YulFunctionCall","src":"4384:37:10"},"nodeType":"YulExpressionStatement","src":"4384:37:10"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4362:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4369:3:10","type":""}],"src":"4319:108:10"},{"body":{"nodeType":"YulBlock","src":"4488:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4505:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4528:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4510:17:10"},"nodeType":"YulFunctionCall","src":"4510:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4498:6:10"},"nodeType":"YulFunctionCall","src":"4498:37:10"},"nodeType":"YulExpressionStatement","src":"4498:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4476:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4483:3:10","type":""}],"src":"4433:108:10"},{"body":{"nodeType":"YulBlock","src":"4596:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4613:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4633:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4618:14:10"},"nodeType":"YulFunctionCall","src":"4618:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4606:6:10"},"nodeType":"YulFunctionCall","src":"4606:34:10"},"nodeType":"YulExpressionStatement","src":"4606:34:10"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4584:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4591:3:10","type":""}],"src":"4547:99:10"},{"body":{"nodeType":"YulBlock","src":"4696:65:10","statements":[{"nodeType":"YulAssignment","src":"4706:49:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4721:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4728:26:10","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4717:3:10"},"nodeType":"YulFunctionCall","src":"4717:38:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4706:7:10"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4678:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4688:7:10","type":""}],"src":"4652:109:10"},{"body":{"nodeType":"YulBlock","src":"4820:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4837:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4859:5:10"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"4842:16:10"},"nodeType":"YulFunctionCall","src":"4842:23:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4830:6:10"},"nodeType":"YulFunctionCall","src":"4830:36:10"},"nodeType":"YulExpressionStatement","src":"4830:36:10"}]},"name":"abi_encode_t_uint96_to_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4808:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4815:3:10","type":""}],"src":"4767:105:10"},{"body":{"nodeType":"YulBlock","src":"5044:1838:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5054:28:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5070:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5075:6:10","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5066:3:10"},"nodeType":"YulFunctionCall","src":"5066:16:10"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5058:4:10","type":""}]},{"nodeType":"YulBlock","src":"5092:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5129:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5159:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5166:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5155:3:10"},"nodeType":"YulFunctionCall","src":"5155:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5149:5:10"},"nodeType":"YulFunctionCall","src":"5149:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5133:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5219:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5237:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5242:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5233:3:10"},"nodeType":"YulFunctionCall","src":"5233:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5185:33:10"},"nodeType":"YulFunctionCall","src":"5185:63:10"},"nodeType":"YulExpressionStatement","src":"5185:63:10"}]},{"nodeType":"YulBlock","src":"5268:165:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5304:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5334:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5341:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5330:3:10"},"nodeType":"YulFunctionCall","src":"5330:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5324:5:10"},"nodeType":"YulFunctionCall","src":"5324:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5308:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5394:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5412:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5417:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5408:3:10"},"nodeType":"YulFunctionCall","src":"5408:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5360:33:10"},"nodeType":"YulFunctionCall","src":"5360:63:10"},"nodeType":"YulExpressionStatement","src":"5360:63:10"}]},{"nodeType":"YulBlock","src":"5443:178:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5492:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5522:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5529:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5518:3:10"},"nodeType":"YulFunctionCall","src":"5518:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5512:5:10"},"nodeType":"YulFunctionCall","src":"5512:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5496:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5582:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5600:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5605:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5596:3:10"},"nodeType":"YulFunctionCall","src":"5596:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5548:33:10"},"nodeType":"YulFunctionCall","src":"5548:63:10"},"nodeType":"YulExpressionStatement","src":"5548:63:10"}]},{"nodeType":"YulBlock","src":"5631:169:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5671:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5701:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5708:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5697:3:10"},"nodeType":"YulFunctionCall","src":"5697:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5691:5:10"},"nodeType":"YulFunctionCall","src":"5691:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5675:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5761:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5779:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5784:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5775:3:10"},"nodeType":"YulFunctionCall","src":"5775:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5727:33:10"},"nodeType":"YulFunctionCall","src":"5727:63:10"},"nodeType":"YulExpressionStatement","src":"5727:63:10"}]},{"nodeType":"YulBlock","src":"5810:171:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5852:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5882:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5889:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5878:3:10"},"nodeType":"YulFunctionCall","src":"5878:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5872:5:10"},"nodeType":"YulFunctionCall","src":"5872:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5856:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5942:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5960:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5965:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5956:3:10"},"nodeType":"YulFunctionCall","src":"5956:14:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5908:33:10"},"nodeType":"YulFunctionCall","src":"5908:63:10"},"nodeType":"YulExpressionStatement","src":"5908:63:10"}]},{"nodeType":"YulBlock","src":"5991:165:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6033:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6063:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"6070:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6059:3:10"},"nodeType":"YulFunctionCall","src":"6059:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6053:5:10"},"nodeType":"YulFunctionCall","src":"6053:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6037:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6117:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6135:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6140:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6131:3:10"},"nodeType":"YulFunctionCall","src":"6131:14:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"6089:27:10"},"nodeType":"YulFunctionCall","src":"6089:57:10"},"nodeType":"YulExpressionStatement","src":"6089:57:10"}]},{"nodeType":"YulBlock","src":"6166:164:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6207:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6237:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"6244:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6233:3:10"},"nodeType":"YulFunctionCall","src":"6233:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6227:5:10"},"nodeType":"YulFunctionCall","src":"6227:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6211:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6291:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6309:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6314:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6305:3:10"},"nodeType":"YulFunctionCall","src":"6305:14:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"6263:27:10"},"nodeType":"YulFunctionCall","src":"6263:57:10"},"nodeType":"YulExpressionStatement","src":"6263:57:10"}]},{"nodeType":"YulBlock","src":"6340:173:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6384:43:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6414:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"6421:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6410:3:10"},"nodeType":"YulFunctionCall","src":"6410:16:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6404:5:10"},"nodeType":"YulFunctionCall","src":"6404:23:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6388:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6474:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6492:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6497:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6488:3:10"},"nodeType":"YulFunctionCall","src":"6488:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"6440:33:10"},"nodeType":"YulFunctionCall","src":"6440:63:10"},"nodeType":"YulExpressionStatement","src":"6440:63:10"}]},{"nodeType":"YulBlock","src":"6523:172:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6564:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6594:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"6601:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6590:3:10"},"nodeType":"YulFunctionCall","src":"6590:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6584:5:10"},"nodeType":"YulFunctionCall","src":"6584:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6568:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6654:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6672:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6677:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6668:3:10"},"nodeType":"YulFunctionCall","src":"6668:16:10"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96","nodeType":"YulIdentifier","src":"6622:31:10"},"nodeType":"YulFunctionCall","src":"6622:63:10"},"nodeType":"YulExpressionStatement","src":"6622:63:10"}]},{"nodeType":"YulBlock","src":"6705:170:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6742:45:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6772:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"6779:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6768:3:10"},"nodeType":"YulFunctionCall","src":"6768:18:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6762:5:10"},"nodeType":"YulFunctionCall","src":"6762:25:10"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6746:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6834:12:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6852:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6857:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6848:3:10"},"nodeType":"YulFunctionCall","src":"6848:16:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6800:33:10"},"nodeType":"YulFunctionCall","src":"6800:65:10"},"nodeType":"YulExpressionStatement","src":"6800:65:10"}]}]},"name":"abi_encode_t_struct$_Order_$2020_memory_ptr_to_t_struct$_Order_$2020_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5031:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5038:3:10","type":""}],"src":"4932:1950:10"},{"body":{"nodeType":"YulBlock","src":"7032:171:10","statements":[{"nodeType":"YulAssignment","src":"7042:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7054:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7065:3:10","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7050:3:10"},"nodeType":"YulFunctionCall","src":"7050:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7042:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7169:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7182:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7193:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7178:3:10"},"nodeType":"YulFunctionCall","src":"7178:17:10"}],"functionName":{"name":"abi_encode_t_struct$_Order_$2020_memory_ptr_to_t_struct$_Order_$2020_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7079:89:10"},"nodeType":"YulFunctionCall","src":"7079:117:10"},"nodeType":"YulExpressionStatement","src":"7079:117:10"}]},"name":"abi_encode_tuple_t_struct$_Order_$2020_memory_ptr__to_t_struct$_Order_$2020_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7004:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7016:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7027:4:10","type":""}],"src":"6888:315:10"},{"body":{"nodeType":"YulBlock","src":"7251:78:10","statements":[{"body":{"nodeType":"YulBlock","src":"7307:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7316:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7319:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7309:6:10"},"nodeType":"YulFunctionCall","src":"7309:12:10"},"nodeType":"YulExpressionStatement","src":"7309:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7274:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7298:5:10"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"7281:16:10"},"nodeType":"YulFunctionCall","src":"7281:23:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7271:2:10"},"nodeType":"YulFunctionCall","src":"7271:34:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7264:6:10"},"nodeType":"YulFunctionCall","src":"7264:42:10"},"nodeType":"YulIf","src":"7261:62:10"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7244:5:10","type":""}],"src":"7209:120:10"},{"body":{"nodeType":"YulBlock","src":"7386:86:10","statements":[{"nodeType":"YulAssignment","src":"7396:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7418:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7405:12:10"},"nodeType":"YulFunctionCall","src":"7405:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7396:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7460:5:10"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"7434:25:10"},"nodeType":"YulFunctionCall","src":"7434:32:10"},"nodeType":"YulExpressionStatement","src":"7434:32:10"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7364:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"7372:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7380:5:10","type":""}],"src":"7335:137:10"},{"body":{"nodeType":"YulBlock","src":"7567:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7584:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7587:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7577:6:10"},"nodeType":"YulFunctionCall","src":"7577:12:10"},"nodeType":"YulExpressionStatement","src":"7577:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7478:117:10"},{"body":{"nodeType":"YulBlock","src":"7690:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7707:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7710:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7700:6:10"},"nodeType":"YulFunctionCall","src":"7700:12:10"},"nodeType":"YulExpressionStatement","src":"7700:12:10"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"7601:117:10"},{"body":{"nodeType":"YulBlock","src":"7813:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7830:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7833:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7823:6:10"},"nodeType":"YulFunctionCall","src":"7823:12:10"},"nodeType":"YulExpressionStatement","src":"7823:12:10"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7724:117:10"},{"body":{"nodeType":"YulBlock","src":"7936:478:10","statements":[{"body":{"nodeType":"YulBlock","src":"7985:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7987:77:10"},"nodeType":"YulFunctionCall","src":"7987:79:10"},"nodeType":"YulExpressionStatement","src":"7987:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7964:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7972:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7960:3:10"},"nodeType":"YulFunctionCall","src":"7960:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"7979:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7956:3:10"},"nodeType":"YulFunctionCall","src":"7956:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7949:6:10"},"nodeType":"YulFunctionCall","src":"7949:35:10"},"nodeType":"YulIf","src":"7946:122:10"},{"nodeType":"YulAssignment","src":"8077:30:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8100:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8087:12:10"},"nodeType":"YulFunctionCall","src":"8087:20:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8077:6:10"}]},{"body":{"nodeType":"YulBlock","src":"8150:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"8152:77:10"},"nodeType":"YulFunctionCall","src":"8152:79:10"},"nodeType":"YulExpressionStatement","src":"8152:79:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8122:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"8130:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8119:2:10"},"nodeType":"YulFunctionCall","src":"8119:30:10"},"nodeType":"YulIf","src":"8116:117:10"},{"nodeType":"YulAssignment","src":"8242:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8258:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"8266:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8254:3:10"},"nodeType":"YulFunctionCall","src":"8254:17:10"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8242:8:10"}]},{"body":{"nodeType":"YulBlock","src":"8325:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8327:77:10"},"nodeType":"YulFunctionCall","src":"8327:79:10"},"nodeType":"YulExpressionStatement","src":"8327:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8290:8:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8304:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"8312:4:10","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8300:3:10"},"nodeType":"YulFunctionCall","src":"8300:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8286:3:10"},"nodeType":"YulFunctionCall","src":"8286:32:10"},{"name":"end","nodeType":"YulIdentifier","src":"8320:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8283:2:10"},"nodeType":"YulFunctionCall","src":"8283:41:10"},"nodeType":"YulIf","src":"8280:128:10"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7903:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"7911:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"7919:8:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"7929:6:10","type":""}],"src":"7861:553:10"},{"body":{"nodeType":"YulBlock","src":"8657:1600:10","statements":[{"body":{"nodeType":"YulBlock","src":"8704:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8706:77:10"},"nodeType":"YulFunctionCall","src":"8706:79:10"},"nodeType":"YulExpressionStatement","src":"8706:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8678:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8687:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8674:3:10"},"nodeType":"YulFunctionCall","src":"8674:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"8699:3:10","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8670:3:10"},"nodeType":"YulFunctionCall","src":"8670:33:10"},"nodeType":"YulIf","src":"8667:120:10"},{"nodeType":"YulBlock","src":"8797:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8812:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"8826:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8816:6:10","type":""}]},{"nodeType":"YulAssignment","src":"8841:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8876:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"8887:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8872:3:10"},"nodeType":"YulFunctionCall","src":"8872:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8896:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8851:20:10"},"nodeType":"YulFunctionCall","src":"8851:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8841:6:10"}]}]},{"nodeType":"YulBlock","src":"8924:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8939:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"8953:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8943:6:10","type":""}]},{"nodeType":"YulAssignment","src":"8969:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9004:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9015:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9000:3:10"},"nodeType":"YulFunctionCall","src":"9000:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9024:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8979:20:10"},"nodeType":"YulFunctionCall","src":"8979:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8969:6:10"}]}]},{"nodeType":"YulBlock","src":"9052:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9067:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"9081:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9071:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9097:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9132:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9143:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9128:3:10"},"nodeType":"YulFunctionCall","src":"9128:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9152:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9107:20:10"},"nodeType":"YulFunctionCall","src":"9107:53:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9097:6:10"}]}]},{"nodeType":"YulBlock","src":"9180:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9195:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"9209:2:10","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9199:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9225:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9260:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9271:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9256:3:10"},"nodeType":"YulFunctionCall","src":"9256:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9280:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9235:20:10"},"nodeType":"YulFunctionCall","src":"9235:53:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9225:6:10"}]}]},{"nodeType":"YulBlock","src":"9308:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:3:10","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9354:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9388:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9399:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9384:3:10"},"nodeType":"YulFunctionCall","src":"9384:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9408:7:10"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"9364:19:10"},"nodeType":"YulFunctionCall","src":"9364:52:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9354:6:10"}]}]},{"nodeType":"YulBlock","src":"9436:119:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9451:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"9465:3:10","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9455:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9482:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9517:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9528:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9513:3:10"},"nodeType":"YulFunctionCall","src":"9513:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9537:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9492:20:10"},"nodeType":"YulFunctionCall","src":"9492:53:10"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9482:6:10"}]}]},{"nodeType":"YulBlock","src":"9565:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9580:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"9594:3:10","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9584:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9611:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9645:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9656:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9641:3:10"},"nodeType":"YulFunctionCall","src":"9641:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9665:7:10"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"9621:19:10"},"nodeType":"YulFunctionCall","src":"9621:52:10"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"9611:6:10"}]}]},{"nodeType":"YulBlock","src":"9693:119:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9708:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"9722:3:10","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9712:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9739:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9774:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9785:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9770:3:10"},"nodeType":"YulFunctionCall","src":"9770:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9794:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9749:20:10"},"nodeType":"YulFunctionCall","src":"9749:53:10"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"9739:6:10"}]}]},{"nodeType":"YulBlock","src":"9822:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9837:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"9851:3:10","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9841:6:10","type":""}]},{"nodeType":"YulAssignment","src":"9868:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9902:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"9913:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9898:3:10"},"nodeType":"YulFunctionCall","src":"9898:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9922:7:10"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"9878:19:10"},"nodeType":"YulFunctionCall","src":"9878:52:10"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"9868:6:10"}]}]},{"nodeType":"YulBlock","src":"9950:300:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9965:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9996:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10007:3:10","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9992:3:10"},"nodeType":"YulFunctionCall","src":"9992:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9979:12:10"},"nodeType":"YulFunctionCall","src":"9979:33:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9969:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"10059:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10061:77:10"},"nodeType":"YulFunctionCall","src":"10061:79:10"},"nodeType":"YulExpressionStatement","src":"10061:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10031:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"10039:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10028:2:10"},"nodeType":"YulFunctionCall","src":"10028:30:10"},"nodeType":"YulIf","src":"10025:117:10"},{"nodeType":"YulAssignment","src":"10156:84:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10212:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"10223:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10208:3:10"},"nodeType":"YulFunctionCall","src":"10208:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10232:7:10"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"10175:32:10"},"nodeType":"YulFunctionCall","src":"10175:65:10"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"10156:6:10"},{"name":"value10","nodeType":"YulIdentifier","src":"10164:7:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256t_addresst_uint96t_addresst_uint96t_addresst_uint96t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8546:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8557:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8569:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8577:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8585:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8593:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8601:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8609:6:10","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8617:6:10","type":""},{"name":"value7","nodeType":"YulTypedName","src":"8625:6:10","type":""},{"name":"value8","nodeType":"YulTypedName","src":"8633:6:10","type":""},{"name":"value9","nodeType":"YulTypedName","src":"8641:6:10","type":""},{"name":"value10","nodeType":"YulTypedName","src":"8649:7:10","type":""}],"src":"8420:1837:10"},{"body":{"nodeType":"YulBlock","src":"10450:1214:10","statements":[{"body":{"nodeType":"YulBlock","src":"10497:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10499:77:10"},"nodeType":"YulFunctionCall","src":"10499:79:10"},"nodeType":"YulExpressionStatement","src":"10499:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10471:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"10480:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10467:3:10"},"nodeType":"YulFunctionCall","src":"10467:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"10492:3:10","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10463:3:10"},"nodeType":"YulFunctionCall","src":"10463:33:10"},"nodeType":"YulIf","src":"10460:120:10"},{"nodeType":"YulBlock","src":"10590:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10605:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"10619:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10609:6:10","type":""}]},{"nodeType":"YulAssignment","src":"10634:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10669:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"10680:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10665:3:10"},"nodeType":"YulFunctionCall","src":"10665:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10689:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10644:20:10"},"nodeType":"YulFunctionCall","src":"10644:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10634:6:10"}]}]},{"nodeType":"YulBlock","src":"10717:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10732:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"10746:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10736:6:10","type":""}]},{"nodeType":"YulAssignment","src":"10762:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10797:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"10808:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10793:3:10"},"nodeType":"YulFunctionCall","src":"10793:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10817:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10772:20:10"},"nodeType":"YulFunctionCall","src":"10772:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10762:6:10"}]}]},{"nodeType":"YulBlock","src":"10845:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10860:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"10874:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10864:6:10","type":""}]},{"nodeType":"YulAssignment","src":"10890:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10924:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"10935:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10920:3:10"},"nodeType":"YulFunctionCall","src":"10920:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10944:7:10"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"10900:19:10"},"nodeType":"YulFunctionCall","src":"10900:52:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10890:6:10"}]}]},{"nodeType":"YulBlock","src":"10972:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10987:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"11001:2:10","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10991:6:10","type":""}]},{"nodeType":"YulAssignment","src":"11017:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11052:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"11063:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11048:3:10"},"nodeType":"YulFunctionCall","src":"11048:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11072:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11027:20:10"},"nodeType":"YulFunctionCall","src":"11027:53:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11017:6:10"}]}]},{"nodeType":"YulBlock","src":"11100:119:10","statements":[{"nodeType":"YulVariableDeclaration","src":"11115:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"11129:3:10","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11119:6:10","type":""}]},{"nodeType":"YulAssignment","src":"11146:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11181:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"11192:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11177:3:10"},"nodeType":"YulFunctionCall","src":"11177:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11201:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11156:20:10"},"nodeType":"YulFunctionCall","src":"11156:53:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11146:6:10"}]}]},{"nodeType":"YulBlock","src":"11229:119:10","statements":[{"nodeType":"YulVariableDeclaration","src":"11244:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"11258:3:10","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11248:6:10","type":""}]},{"nodeType":"YulAssignment","src":"11275:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11310:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"11321:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11306:3:10"},"nodeType":"YulFunctionCall","src":"11306:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11330:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11285:20:10"},"nodeType":"YulFunctionCall","src":"11285:53:10"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11275:6:10"}]}]},{"nodeType":"YulBlock","src":"11358:299:10","statements":[{"nodeType":"YulVariableDeclaration","src":"11373:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11404:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11415:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11400:3:10"},"nodeType":"YulFunctionCall","src":"11400:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11387:12:10"},"nodeType":"YulFunctionCall","src":"11387:33:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11377:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"11467:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11469:77:10"},"nodeType":"YulFunctionCall","src":"11469:79:10"},"nodeType":"YulExpressionStatement","src":"11469:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11439:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"11447:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11436:2:10"},"nodeType":"YulFunctionCall","src":"11436:30:10"},"nodeType":"YulIf","src":"11433:117:10"},{"nodeType":"YulAssignment","src":"11564:83:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11619:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"11630:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11615:3:10"},"nodeType":"YulFunctionCall","src":"11615:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11639:7:10"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"11582:32:10"},"nodeType":"YulFunctionCall","src":"11582:65:10"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"11564:6:10"},{"name":"value7","nodeType":"YulIdentifier","src":"11572:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint96t_addresst_uint256t_addresst_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10364:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10375:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10387:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10395:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10403:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10411:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10419:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10427:6:10","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10435:6:10","type":""},{"name":"value7","nodeType":"YulTypedName","src":"10443:6:10","type":""}],"src":"10263:1401:10"},{"body":{"nodeType":"YulBlock","src":"11735:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11752:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11775:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11757:17:10"},"nodeType":"YulFunctionCall","src":"11757:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11745:6:10"},"nodeType":"YulFunctionCall","src":"11745:37:10"},"nodeType":"YulExpressionStatement","src":"11745:37:10"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11723:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11730:3:10","type":""}],"src":"11670:118:10"},{"body":{"nodeType":"YulBlock","src":"11892:124:10","statements":[{"nodeType":"YulAssignment","src":"11902:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11914:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11925:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11910:3:10"},"nodeType":"YulFunctionCall","src":"11910:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11902:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11982:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11995:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12006:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11991:3:10"},"nodeType":"YulFunctionCall","src":"11991:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11938:43:10"},"nodeType":"YulFunctionCall","src":"11938:71:10"},"nodeType":"YulExpressionStatement","src":"11938:71:10"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11864:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11876:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11887:4:10","type":""}],"src":"11794:222:10"},{"body":{"nodeType":"YulBlock","src":"12087:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12104:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12127:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12109:17:10"},"nodeType":"YulFunctionCall","src":"12109:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12097:6:10"},"nodeType":"YulFunctionCall","src":"12097:37:10"},"nodeType":"YulExpressionStatement","src":"12097:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12075:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12082:3:10","type":""}],"src":"12022:118:10"},{"body":{"nodeType":"YulBlock","src":"12244:124:10","statements":[{"nodeType":"YulAssignment","src":"12254:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12266:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12277:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12262:3:10"},"nodeType":"YulFunctionCall","src":"12262:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12254:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12334:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12347:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12358:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12343:3:10"},"nodeType":"YulFunctionCall","src":"12343:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12290:43:10"},"nodeType":"YulFunctionCall","src":"12290:71:10"},"nodeType":"YulExpressionStatement","src":"12290:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12216:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12228:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12239:4:10","type":""}],"src":"12146:222:10"},{"body":{"nodeType":"YulBlock","src":"12437:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12454:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12476:5:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"12459:16:10"},"nodeType":"YulFunctionCall","src":"12459:23:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12447:6:10"},"nodeType":"YulFunctionCall","src":"12447:36:10"},"nodeType":"YulExpressionStatement","src":"12447:36:10"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12425:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12432:3:10","type":""}],"src":"12374:115:10"},{"body":{"nodeType":"YulBlock","src":"12560:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12577:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12600:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12582:17:10"},"nodeType":"YulFunctionCall","src":"12582:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12570:6:10"},"nodeType":"YulFunctionCall","src":"12570:37:10"},"nodeType":"YulExpressionStatement","src":"12570:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12548:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12555:3:10","type":""}],"src":"12495:118:10"},{"body":{"nodeType":"YulBlock","src":"12743:204:10","statements":[{"nodeType":"YulAssignment","src":"12753:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12765:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12776:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12761:3:10"},"nodeType":"YulFunctionCall","src":"12761:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12753:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12831:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12844:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12855:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12840:3:10"},"nodeType":"YulFunctionCall","src":"12840:17:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"12789:41:10"},"nodeType":"YulFunctionCall","src":"12789:69:10"},"nodeType":"YulExpressionStatement","src":"12789:69:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12912:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12925:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12936:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12921:3:10"},"nodeType":"YulFunctionCall","src":"12921:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12868:43:10"},"nodeType":"YulFunctionCall","src":"12868:72:10"},"nodeType":"YulExpressionStatement","src":"12868:72:10"}]},"name":"abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12707:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12719:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12727:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12738:4:10","type":""}],"src":"12619:328:10"},{"body":{"nodeType":"YulBlock","src":"13053:519:10","statements":[{"body":{"nodeType":"YulBlock","src":"13099:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13101:77:10"},"nodeType":"YulFunctionCall","src":"13101:79:10"},"nodeType":"YulExpressionStatement","src":"13101:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13074:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"13083:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13070:3:10"},"nodeType":"YulFunctionCall","src":"13070:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"13095:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13066:3:10"},"nodeType":"YulFunctionCall","src":"13066:32:10"},"nodeType":"YulIf","src":"13063:119:10"},{"nodeType":"YulBlock","src":"13192:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13207:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"13221:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13211:6:10","type":""}]},{"nodeType":"YulAssignment","src":"13236:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13271:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"13282:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13267:3:10"},"nodeType":"YulFunctionCall","src":"13267:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13291:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13246:20:10"},"nodeType":"YulFunctionCall","src":"13246:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13236:6:10"}]}]},{"nodeType":"YulBlock","src":"13319:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13334:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"13348:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13338:6:10","type":""}]},{"nodeType":"YulAssignment","src":"13364:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13399:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"13410:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13395:3:10"},"nodeType":"YulFunctionCall","src":"13395:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13419:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13374:20:10"},"nodeType":"YulFunctionCall","src":"13374:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13364:6:10"}]}]},{"nodeType":"YulBlock","src":"13447:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13462:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"13476:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13466:6:10","type":""}]},{"nodeType":"YulAssignment","src":"13492:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13527:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"13538:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13523:3:10"},"nodeType":"YulFunctionCall","src":"13523:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13547:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13502:20:10"},"nodeType":"YulFunctionCall","src":"13502:53:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13492:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13007:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13018:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13030:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13038:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13046:6:10","type":""}],"src":"12953:619:10"},{"body":{"nodeType":"YulBlock","src":"13694:647:10","statements":[{"body":{"nodeType":"YulBlock","src":"13741:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13743:77:10"},"nodeType":"YulFunctionCall","src":"13743:79:10"},"nodeType":"YulExpressionStatement","src":"13743:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13715:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"13724:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13711:3:10"},"nodeType":"YulFunctionCall","src":"13711:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"13736:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13707:3:10"},"nodeType":"YulFunctionCall","src":"13707:33:10"},"nodeType":"YulIf","src":"13704:120:10"},{"nodeType":"YulBlock","src":"13834:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13849:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"13863:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13853:6:10","type":""}]},{"nodeType":"YulAssignment","src":"13878:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13913:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"13924:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13909:3:10"},"nodeType":"YulFunctionCall","src":"13909:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13933:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13888:20:10"},"nodeType":"YulFunctionCall","src":"13888:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13878:6:10"}]}]},{"nodeType":"YulBlock","src":"13961:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"13976:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"13990:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13980:6:10","type":""}]},{"nodeType":"YulAssignment","src":"14006:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14041:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"14052:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14037:3:10"},"nodeType":"YulFunctionCall","src":"14037:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14061:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"14016:20:10"},"nodeType":"YulFunctionCall","src":"14016:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14006:6:10"}]}]},{"nodeType":"YulBlock","src":"14089:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"14104:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"14118:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14108:6:10","type":""}]},{"nodeType":"YulAssignment","src":"14134:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14169:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"14180:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14165:3:10"},"nodeType":"YulFunctionCall","src":"14165:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14189:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14144:20:10"},"nodeType":"YulFunctionCall","src":"14144:53:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14134:6:10"}]}]},{"nodeType":"YulBlock","src":"14217:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"14232:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"14246:2:10","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14236:6:10","type":""}]},{"nodeType":"YulAssignment","src":"14262:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14296:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"14307:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:10"},"nodeType":"YulFunctionCall","src":"14292:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14316:7:10"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"14272:19:10"},"nodeType":"YulFunctionCall","src":"14272:52:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14262:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13640:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13651:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13663:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13671:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13679:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13687:6:10","type":""}],"src":"13578:763:10"},{"body":{"nodeType":"YulBlock","src":"14443:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14460:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"14465:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14453:6:10"},"nodeType":"YulFunctionCall","src":"14453:19:10"},"nodeType":"YulExpressionStatement","src":"14453:19:10"},{"nodeType":"YulAssignment","src":"14481:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14500:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"14505:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14496:3:10"},"nodeType":"YulFunctionCall","src":"14496:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14481:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14415:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"14420:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14431:11:10","type":""}],"src":"14347:169:10"},{"body":{"nodeType":"YulBlock","src":"14628:65:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14650:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"14658:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14646:3:10"},"nodeType":"YulFunctionCall","src":"14646:14:10"},{"hexValue":"476174657761793a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"14662:23:10","type":"","value":"Gateway: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14639:6:10"},"nodeType":"YulFunctionCall","src":"14639:47:10"},"nodeType":"YulExpressionStatement","src":"14639:47:10"}]},"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14620:6:10","type":""}],"src":"14522:171:10"},{"body":{"nodeType":"YulBlock","src":"14845:220:10","statements":[{"nodeType":"YulAssignment","src":"14855:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14921:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"14926:2:10","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14862:58:10"},"nodeType":"YulFunctionCall","src":"14862:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14855:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15027:3:10"}],"functionName":{"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulIdentifier","src":"14938:88:10"},"nodeType":"YulFunctionCall","src":"14938:93:10"},"nodeType":"YulExpressionStatement","src":"14938:93:10"},{"nodeType":"YulAssignment","src":"15040:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15051:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15056:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15047:3:10"},"nodeType":"YulFunctionCall","src":"15047:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15040:3:10"}]}]},"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14833:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14841:3:10","type":""}],"src":"14699:366:10"},{"body":{"nodeType":"YulBlock","src":"15242:248:10","statements":[{"nodeType":"YulAssignment","src":"15252:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15264:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15275:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15260:3:10"},"nodeType":"YulFunctionCall","src":"15260:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15252:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15299:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15310:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15295:3:10"},"nodeType":"YulFunctionCall","src":"15295:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15318:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"15324:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15314:3:10"},"nodeType":"YulFunctionCall","src":"15314:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15288:6:10"},"nodeType":"YulFunctionCall","src":"15288:47:10"},"nodeType":"YulExpressionStatement","src":"15288:47:10"},{"nodeType":"YulAssignment","src":"15344:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15478:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15352:124:10"},"nodeType":"YulFunctionCall","src":"15352:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15344:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15222:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15237:4:10","type":""}],"src":"15071:419:10"},{"body":{"nodeType":"YulBlock","src":"15602:118:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15624:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15632:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15620:3:10"},"nodeType":"YulFunctionCall","src":"15620:14:10"},{"hexValue":"476174657761793a207472656173757279206164647265737320616c72656164","kind":"string","nodeType":"YulLiteral","src":"15636:34:10","type":"","value":"Gateway: treasury address alread"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15613:6:10"},"nodeType":"YulFunctionCall","src":"15613:58:10"},"nodeType":"YulExpressionStatement","src":"15613:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15692:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15700:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15688:3:10"},"nodeType":"YulFunctionCall","src":"15688:15:10"},{"hexValue":"7920736574","kind":"string","nodeType":"YulLiteral","src":"15705:7:10","type":"","value":"y set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15681:6:10"},"nodeType":"YulFunctionCall","src":"15681:32:10"},"nodeType":"YulExpressionStatement","src":"15681:32:10"}]},"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15594:6:10","type":""}],"src":"15496:224:10"},{"body":{"nodeType":"YulBlock","src":"15872:220:10","statements":[{"nodeType":"YulAssignment","src":"15882:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15948:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15953:2:10","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15889:58:10"},"nodeType":"YulFunctionCall","src":"15889:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15882:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16054:3:10"}],"functionName":{"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulIdentifier","src":"15965:88:10"},"nodeType":"YulFunctionCall","src":"15965:93:10"},"nodeType":"YulExpressionStatement","src":"15965:93:10"},{"nodeType":"YulAssignment","src":"16067:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16078:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16083:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16074:3:10"},"nodeType":"YulFunctionCall","src":"16074:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16067:3:10"}]}]},"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15860:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15868:3:10","type":""}],"src":"15726:366:10"},{"body":{"nodeType":"YulBlock","src":"16269:248:10","statements":[{"nodeType":"YulAssignment","src":"16279:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16291:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16302:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16287:3:10"},"nodeType":"YulFunctionCall","src":"16287:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16279:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16326:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16337:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16322:3:10"},"nodeType":"YulFunctionCall","src":"16322:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16345:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"16351:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16341:3:10"},"nodeType":"YulFunctionCall","src":"16341:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16315:6:10"},"nodeType":"YulFunctionCall","src":"16315:47:10"},"nodeType":"YulExpressionStatement","src":"16315:47:10"},{"nodeType":"YulAssignment","src":"16371:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16505:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16379:124:10"},"nodeType":"YulFunctionCall","src":"16379:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16371:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16249:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16264:4:10","type":""}],"src":"16098:419:10"},{"body":{"nodeType":"YulBlock","src":"16629:120:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16651:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16659:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16647:3:10"},"nodeType":"YulFunctionCall","src":"16647:14:10"},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c7265","kind":"string","nodeType":"YulLiteral","src":"16663:34:10","type":"","value":"Gateway: aggregator address alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16640:6:10"},"nodeType":"YulFunctionCall","src":"16640:58:10"},"nodeType":"YulExpressionStatement","src":"16640:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16719:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16727:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16715:3:10"},"nodeType":"YulFunctionCall","src":"16715:15:10"},{"hexValue":"61647920736574","kind":"string","nodeType":"YulLiteral","src":"16732:9:10","type":"","value":"ady set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16708:6:10"},"nodeType":"YulFunctionCall","src":"16708:34:10"},"nodeType":"YulExpressionStatement","src":"16708:34:10"}]},"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16621:6:10","type":""}],"src":"16523:226:10"},{"body":{"nodeType":"YulBlock","src":"16901:220:10","statements":[{"nodeType":"YulAssignment","src":"16911:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16977:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16982:2:10","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16918:58:10"},"nodeType":"YulFunctionCall","src":"16918:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16911:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17083:3:10"}],"functionName":{"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulIdentifier","src":"16994:88:10"},"nodeType":"YulFunctionCall","src":"16994:93:10"},"nodeType":"YulExpressionStatement","src":"16994:93:10"},{"nodeType":"YulAssignment","src":"17096:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17107:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17112:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17103:3:10"},"nodeType":"YulFunctionCall","src":"17103:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17096:3:10"}]}]},"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16889:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16897:3:10","type":""}],"src":"16755:366:10"},{"body":{"nodeType":"YulBlock","src":"17298:248:10","statements":[{"nodeType":"YulAssignment","src":"17308:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17320:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17331:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17316:3:10"},"nodeType":"YulFunctionCall","src":"17316:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17308:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17355:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17366:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17351:3:10"},"nodeType":"YulFunctionCall","src":"17351:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17374:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"17380:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17370:3:10"},"nodeType":"YulFunctionCall","src":"17370:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17344:6:10"},"nodeType":"YulFunctionCall","src":"17344:47:10"},"nodeType":"YulExpressionStatement","src":"17344:47:10"},{"nodeType":"YulAssignment","src":"17400:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17534:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17408:124:10"},"nodeType":"YulFunctionCall","src":"17408:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17400:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17278:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17293:4:10","type":""}],"src":"17127:419:10"},{"body":{"nodeType":"YulBlock","src":"17648:122:10","statements":[{"nodeType":"YulAssignment","src":"17658:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17670:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17681:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17666:3:10"},"nodeType":"YulFunctionCall","src":"17666:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17658:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17736:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17749:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17760:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17745:3:10"},"nodeType":"YulFunctionCall","src":"17745:17:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"17694:41:10"},"nodeType":"YulFunctionCall","src":"17694:69:10"},"nodeType":"YulExpressionStatement","src":"17694:69:10"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17620:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17632:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17643:4:10","type":""}],"src":"17552:218:10"},{"body":{"nodeType":"YulBlock","src":"17882:58:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17904:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"17912:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17900:3:10"},"nodeType":"YulFunctionCall","src":"17900:14:10"},{"hexValue":"4f6e6c7941676772656761746f72","kind":"string","nodeType":"YulLiteral","src":"17916:16:10","type":"","value":"OnlyAggregator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17893:6:10"},"nodeType":"YulFunctionCall","src":"17893:40:10"},"nodeType":"YulExpressionStatement","src":"17893:40:10"}]},"name":"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17874:6:10","type":""}],"src":"17776:164:10"},{"body":{"nodeType":"YulBlock","src":"18092:220:10","statements":[{"nodeType":"YulAssignment","src":"18102:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18168:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18173:2:10","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18109:58:10"},"nodeType":"YulFunctionCall","src":"18109:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18102:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18274:3:10"}],"functionName":{"name":"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","nodeType":"YulIdentifier","src":"18185:88:10"},"nodeType":"YulFunctionCall","src":"18185:93:10"},"nodeType":"YulExpressionStatement","src":"18185:93:10"},{"nodeType":"YulAssignment","src":"18287:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18298:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18303:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18294:3:10"},"nodeType":"YulFunctionCall","src":"18294:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18287:3:10"}]}]},"name":"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18080:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18088:3:10","type":""}],"src":"17946:366:10"},{"body":{"nodeType":"YulBlock","src":"18489:248:10","statements":[{"nodeType":"YulAssignment","src":"18499:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18511:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18522:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18507:3:10"},"nodeType":"YulFunctionCall","src":"18507:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18499:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18546:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18557:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18542:3:10"},"nodeType":"YulFunctionCall","src":"18542:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18565:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"18571:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18561:3:10"},"nodeType":"YulFunctionCall","src":"18561:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18535:6:10"},"nodeType":"YulFunctionCall","src":"18535:47:10"},"nodeType":"YulExpressionStatement","src":"18535:47:10"},{"nodeType":"YulAssignment","src":"18591:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18725:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18599:124:10"},"nodeType":"YulFunctionCall","src":"18599:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18591:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18469:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18484:4:10","type":""}],"src":"18318:419:10"},{"body":{"nodeType":"YulBlock","src":"18849:58:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18871:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"18879:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18867:3:10"},"nodeType":"YulFunctionCall","src":"18867:14:10"},{"hexValue":"4f7264657246756c66696c6c6564","kind":"string","nodeType":"YulLiteral","src":"18883:16:10","type":"","value":"OrderFulfilled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18860:6:10"},"nodeType":"YulFunctionCall","src":"18860:40:10"},"nodeType":"YulExpressionStatement","src":"18860:40:10"}]},"name":"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18841:6:10","type":""}],"src":"18743:164:10"},{"body":{"nodeType":"YulBlock","src":"19059:220:10","statements":[{"nodeType":"YulAssignment","src":"19069:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19135:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19140:2:10","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19076:58:10"},"nodeType":"YulFunctionCall","src":"19076:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19069:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19241:3:10"}],"functionName":{"name":"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","nodeType":"YulIdentifier","src":"19152:88:10"},"nodeType":"YulFunctionCall","src":"19152:93:10"},"nodeType":"YulExpressionStatement","src":"19152:93:10"},{"nodeType":"YulAssignment","src":"19254:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19265:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19270:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19261:3:10"},"nodeType":"YulFunctionCall","src":"19261:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19254:3:10"}]}]},"name":"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19047:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19055:3:10","type":""}],"src":"18913:366:10"},{"body":{"nodeType":"YulBlock","src":"19456:248:10","statements":[{"nodeType":"YulAssignment","src":"19466:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19478:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"19489:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19474:3:10"},"nodeType":"YulFunctionCall","src":"19474:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19466:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19513:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"19524:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19509:3:10"},"nodeType":"YulFunctionCall","src":"19509:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19532:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"19538:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19528:3:10"},"nodeType":"YulFunctionCall","src":"19528:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19502:6:10"},"nodeType":"YulFunctionCall","src":"19502:47:10"},"nodeType":"YulExpressionStatement","src":"19502:47:10"},{"nodeType":"YulAssignment","src":"19558:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19692:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19566:124:10"},"nodeType":"YulFunctionCall","src":"19566:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19558:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19436:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19451:4:10","type":""}],"src":"19285:419:10"},{"body":{"nodeType":"YulBlock","src":"19816:57:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19838:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19846:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19834:3:10"},"nodeType":"YulFunctionCall","src":"19834:14:10"},{"hexValue":"4f72646572526566756e646564","kind":"string","nodeType":"YulLiteral","src":"19850:15:10","type":"","value":"OrderRefunded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19827:6:10"},"nodeType":"YulFunctionCall","src":"19827:39:10"},"nodeType":"YulExpressionStatement","src":"19827:39:10"}]},"name":"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19808:6:10","type":""}],"src":"19710:163:10"},{"body":{"nodeType":"YulBlock","src":"20025:220:10","statements":[{"nodeType":"YulAssignment","src":"20035:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20101:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20106:2:10","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20042:58:10"},"nodeType":"YulFunctionCall","src":"20042:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20035:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20207:3:10"}],"functionName":{"name":"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","nodeType":"YulIdentifier","src":"20118:88:10"},"nodeType":"YulFunctionCall","src":"20118:93:10"},"nodeType":"YulExpressionStatement","src":"20118:93:10"},{"nodeType":"YulAssignment","src":"20220:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20231:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20236:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20227:3:10"},"nodeType":"YulFunctionCall","src":"20227:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20220:3:10"}]}]},"name":"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20013:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20021:3:10","type":""}],"src":"19879:366:10"},{"body":{"nodeType":"YulBlock","src":"20422:248:10","statements":[{"nodeType":"YulAssignment","src":"20432:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20444:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20455:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20440:3:10"},"nodeType":"YulFunctionCall","src":"20440:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20432:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20479:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20490:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20475:3:10"},"nodeType":"YulFunctionCall","src":"20475:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20498:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"20504:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20494:3:10"},"nodeType":"YulFunctionCall","src":"20494:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20468:6:10"},"nodeType":"YulFunctionCall","src":"20468:47:10"},"nodeType":"YulExpressionStatement","src":"20468:47:10"},{"nodeType":"YulAssignment","src":"20524:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20658:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20532:124:10"},"nodeType":"YulFunctionCall","src":"20532:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20524:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20402:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20417:4:10","type":""}],"src":"20251:419:10"},{"body":{"nodeType":"YulBlock","src":"20782:65:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20804:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"20812:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20800:3:10"},"nodeType":"YulFunctionCall","src":"20800:14:10"},{"hexValue":"4665654578636565647350726f746f636f6c466565","kind":"string","nodeType":"YulLiteral","src":"20816:23:10","type":"","value":"FeeExceedsProtocolFee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20793:6:10"},"nodeType":"YulFunctionCall","src":"20793:47:10"},"nodeType":"YulExpressionStatement","src":"20793:47:10"}]},"name":"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20774:6:10","type":""}],"src":"20676:171:10"},{"body":{"nodeType":"YulBlock","src":"20999:220:10","statements":[{"nodeType":"YulAssignment","src":"21009:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21075:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"21080:2:10","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21016:58:10"},"nodeType":"YulFunctionCall","src":"21016:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21009:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21181:3:10"}],"functionName":{"name":"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","nodeType":"YulIdentifier","src":"21092:88:10"},"nodeType":"YulFunctionCall","src":"21092:93:10"},"nodeType":"YulExpressionStatement","src":"21092:93:10"},{"nodeType":"YulAssignment","src":"21194:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21205:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"21210:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21201:3:10"},"nodeType":"YulFunctionCall","src":"21201:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21194:3:10"}]}]},"name":"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20987:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20995:3:10","type":""}],"src":"20853:366:10"},{"body":{"nodeType":"YulBlock","src":"21396:248:10","statements":[{"nodeType":"YulAssignment","src":"21406:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21418:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21429:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21414:3:10"},"nodeType":"YulFunctionCall","src":"21414:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21406:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21453:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21464:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21449:3:10"},"nodeType":"YulFunctionCall","src":"21449:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21472:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"21478:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21468:3:10"},"nodeType":"YulFunctionCall","src":"21468:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21442:6:10"},"nodeType":"YulFunctionCall","src":"21442:47:10"},"nodeType":"YulExpressionStatement","src":"21442:47:10"},{"nodeType":"YulAssignment","src":"21498:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21632:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21506:124:10"},"nodeType":"YulFunctionCall","src":"21506:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21498:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21376:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21391:4:10","type":""}],"src":"21225:419:10"},{"body":{"nodeType":"YulBlock","src":"21776:206:10","statements":[{"nodeType":"YulAssignment","src":"21786:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21798:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21809:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21794:3:10"},"nodeType":"YulFunctionCall","src":"21794:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21786:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21866:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21879:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21890:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21875:3:10"},"nodeType":"YulFunctionCall","src":"21875:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21822:43:10"},"nodeType":"YulFunctionCall","src":"21822:71:10"},"nodeType":"YulExpressionStatement","src":"21822:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21947:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21960:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21971:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21956:3:10"},"nodeType":"YulFunctionCall","src":"21956:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21903:43:10"},"nodeType":"YulFunctionCall","src":"21903:72:10"},"nodeType":"YulExpressionStatement","src":"21903:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21740:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21752:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21760:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21771:4:10","type":""}],"src":"21650:332:10"},{"body":{"nodeType":"YulBlock","src":"22028:76:10","statements":[{"body":{"nodeType":"YulBlock","src":"22082:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22091:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22094:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22084:6:10"},"nodeType":"YulFunctionCall","src":"22084:12:10"},"nodeType":"YulExpressionStatement","src":"22084:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22051:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22073:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22058:14:10"},"nodeType":"YulFunctionCall","src":"22058:21:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22048:2:10"},"nodeType":"YulFunctionCall","src":"22048:32:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22041:6:10"},"nodeType":"YulFunctionCall","src":"22041:40:10"},"nodeType":"YulIf","src":"22038:60:10"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22021:5:10","type":""}],"src":"21988:116:10"},{"body":{"nodeType":"YulBlock","src":"22170:77:10","statements":[{"nodeType":"YulAssignment","src":"22180:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22195:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22189:5:10"},"nodeType":"YulFunctionCall","src":"22189:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22180:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22235:5:10"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"22211:23:10"},"nodeType":"YulFunctionCall","src":"22211:30:10"},"nodeType":"YulExpressionStatement","src":"22211:30:10"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22148:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"22156:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22164:5:10","type":""}],"src":"22110:137:10"},{"body":{"nodeType":"YulBlock","src":"22327:271:10","statements":[{"body":{"nodeType":"YulBlock","src":"22373:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22375:77:10"},"nodeType":"YulFunctionCall","src":"22375:79:10"},"nodeType":"YulExpressionStatement","src":"22375:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22348:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"22357:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22344:3:10"},"nodeType":"YulFunctionCall","src":"22344:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"22369:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22340:3:10"},"nodeType":"YulFunctionCall","src":"22340:32:10"},"nodeType":"YulIf","src":"22337:119:10"},{"nodeType":"YulBlock","src":"22466:125:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22481:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22495:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22485:6:10","type":""}]},{"nodeType":"YulAssignment","src":"22510:71:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22553:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"22564:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22549:3:10"},"nodeType":"YulFunctionCall","src":"22549:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22573:7:10"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"22520:28:10"},"nodeType":"YulFunctionCall","src":"22520:61:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22510:6:10"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22297:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22308:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22320:6:10","type":""}],"src":"22253:345:10"},{"body":{"nodeType":"YulBlock","src":"22632:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22649:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22652:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22642:6:10"},"nodeType":"YulFunctionCall","src":"22642:88:10"},"nodeType":"YulExpressionStatement","src":"22642:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22746:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22749:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22739:6:10"},"nodeType":"YulFunctionCall","src":"22739:15:10"},"nodeType":"YulExpressionStatement","src":"22739:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22770:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22773:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22763:6:10"},"nodeType":"YulFunctionCall","src":"22763:15:10"},"nodeType":"YulExpressionStatement","src":"22763:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22604:180:10"},{"body":{"nodeType":"YulBlock","src":"22835:149:10","statements":[{"nodeType":"YulAssignment","src":"22845:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22868:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22850:17:10"},"nodeType":"YulFunctionCall","src":"22850:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22845:1:10"}]},{"nodeType":"YulAssignment","src":"22879:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22902:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22884:17:10"},"nodeType":"YulFunctionCall","src":"22884:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22879:1:10"}]},{"nodeType":"YulAssignment","src":"22913:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22925:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"22928:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22921:3:10"},"nodeType":"YulFunctionCall","src":"22921:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22913:4:10"}]},{"body":{"nodeType":"YulBlock","src":"22955:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22957:16:10"},"nodeType":"YulFunctionCall","src":"22957:18:10"},"nodeType":"YulExpressionStatement","src":"22957:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"22946:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"22952:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22943:2:10"},"nodeType":"YulFunctionCall","src":"22943:11:10"},"nodeType":"YulIf","src":"22940:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22821:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"22824:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22830:4:10","type":""}],"src":"22790:194:10"},{"body":{"nodeType":"YulBlock","src":"23034:147:10","statements":[{"nodeType":"YulAssignment","src":"23044:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23067:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23049:17:10"},"nodeType":"YulFunctionCall","src":"23049:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23044:1:10"}]},{"nodeType":"YulAssignment","src":"23078:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23101:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23083:17:10"},"nodeType":"YulFunctionCall","src":"23083:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23078:1:10"}]},{"nodeType":"YulAssignment","src":"23112:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23123:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"23126:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23119:3:10"},"nodeType":"YulFunctionCall","src":"23119:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23112:3:10"}]},{"body":{"nodeType":"YulBlock","src":"23152:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23154:16:10"},"nodeType":"YulFunctionCall","src":"23154:18:10"},"nodeType":"YulExpressionStatement","src":"23154:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23144:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"23147:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23141:2:10"},"nodeType":"YulFunctionCall","src":"23141:10:10"},"nodeType":"YulIf","src":"23138:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23021:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"23024:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23030:3:10","type":""}],"src":"22990:191:10"},{"body":{"nodeType":"YulBlock","src":"23285:124:10","statements":[{"nodeType":"YulAssignment","src":"23295:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23307:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23318:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23303:3:10"},"nodeType":"YulFunctionCall","src":"23303:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23295:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23375:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23388:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23399:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23384:3:10"},"nodeType":"YulFunctionCall","src":"23384:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23331:43:10"},"nodeType":"YulFunctionCall","src":"23331:71:10"},"nodeType":"YulExpressionStatement","src":"23331:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23257:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23269:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23280:4:10","type":""}],"src":"23187:222:10"},{"body":{"nodeType":"YulBlock","src":"23521:122:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23543:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"23551:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23539:3:10"},"nodeType":"YulFunctionCall","src":"23539:14:10"},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"23555:34:10","type":"","value":"Ownable2Step: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23532:6:10"},"nodeType":"YulFunctionCall","src":"23532:58:10"},"nodeType":"YulExpressionStatement","src":"23532:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23611:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"23619:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23607:3:10"},"nodeType":"YulFunctionCall","src":"23607:15:10"},{"hexValue":"6e6577206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23624:11:10","type":"","value":"new owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23600:6:10"},"nodeType":"YulFunctionCall","src":"23600:36:10"},"nodeType":"YulExpressionStatement","src":"23600:36:10"}]},"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23513:6:10","type":""}],"src":"23415:228:10"},{"body":{"nodeType":"YulBlock","src":"23795:220:10","statements":[{"nodeType":"YulAssignment","src":"23805:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23871:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"23876:2:10","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23812:58:10"},"nodeType":"YulFunctionCall","src":"23812:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23805:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23977:3:10"}],"functionName":{"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulIdentifier","src":"23888:88:10"},"nodeType":"YulFunctionCall","src":"23888:93:10"},"nodeType":"YulExpressionStatement","src":"23888:93:10"},{"nodeType":"YulAssignment","src":"23990:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24001:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"24006:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23997:3:10"},"nodeType":"YulFunctionCall","src":"23997:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23990:3:10"}]}]},"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23783:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23791:3:10","type":""}],"src":"23649:366:10"},{"body":{"nodeType":"YulBlock","src":"24192:248:10","statements":[{"nodeType":"YulAssignment","src":"24202:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24214:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24225:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24210:3:10"},"nodeType":"YulFunctionCall","src":"24210:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24202:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24249:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24260:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24245:3:10"},"nodeType":"YulFunctionCall","src":"24245:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24268:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"24274:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24264:3:10"},"nodeType":"YulFunctionCall","src":"24264:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24238:6:10"},"nodeType":"YulFunctionCall","src":"24238:47:10"},"nodeType":"YulExpressionStatement","src":"24238:47:10"},{"nodeType":"YulAssignment","src":"24294:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24428:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24302:124:10"},"nodeType":"YulFunctionCall","src":"24302:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24294:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24172:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24187:4:10","type":""}],"src":"24021:419:10"},{"body":{"nodeType":"YulBlock","src":"24552:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24574:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"24582:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24570:3:10"},"nodeType":"YulFunctionCall","src":"24570:14:10"},{"hexValue":"4f726465724e6f7446756c66696c6c6564","kind":"string","nodeType":"YulLiteral","src":"24586:19:10","type":"","value":"OrderNotFulfilled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24563:6:10"},"nodeType":"YulFunctionCall","src":"24563:43:10"},"nodeType":"YulExpressionStatement","src":"24563:43:10"}]},"name":"store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24544:6:10","type":""}],"src":"24446:167:10"},{"body":{"nodeType":"YulBlock","src":"24765:220:10","statements":[{"nodeType":"YulAssignment","src":"24775:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24841:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"24846:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24782:58:10"},"nodeType":"YulFunctionCall","src":"24782:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24775:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24947:3:10"}],"functionName":{"name":"store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86","nodeType":"YulIdentifier","src":"24858:88:10"},"nodeType":"YulFunctionCall","src":"24858:93:10"},"nodeType":"YulExpressionStatement","src":"24858:93:10"},{"nodeType":"YulAssignment","src":"24960:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24971:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"24976:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24967:3:10"},"nodeType":"YulFunctionCall","src":"24967:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24960:3:10"}]}]},"name":"abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24753:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24761:3:10","type":""}],"src":"24619:366:10"},{"body":{"nodeType":"YulBlock","src":"25162:248:10","statements":[{"nodeType":"YulAssignment","src":"25172:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25184:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25195:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25180:3:10"},"nodeType":"YulFunctionCall","src":"25180:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25172:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25219:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25230:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25215:3:10"},"nodeType":"YulFunctionCall","src":"25215:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25238:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"25244:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25234:3:10"},"nodeType":"YulFunctionCall","src":"25234:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25208:6:10"},"nodeType":"YulFunctionCall","src":"25208:47:10"},"nodeType":"YulExpressionStatement","src":"25208:47:10"},{"nodeType":"YulAssignment","src":"25264:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25398:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25272:124:10"},"nodeType":"YulFunctionCall","src":"25272:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25264:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25142:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25157:4:10","type":""}],"src":"24991:419:10"},{"body":{"nodeType":"YulBlock","src":"25522:56:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25544:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"25552:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25540:3:10"},"nodeType":"YulFunctionCall","src":"25540:14:10"},{"hexValue":"416d6f756e7449735a65726f","kind":"string","nodeType":"YulLiteral","src":"25556:14:10","type":"","value":"AmountIsZero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25533:6:10"},"nodeType":"YulFunctionCall","src":"25533:38:10"},"nodeType":"YulExpressionStatement","src":"25533:38:10"}]},"name":"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25514:6:10","type":""}],"src":"25416:162:10"},{"body":{"nodeType":"YulBlock","src":"25730:220:10","statements":[{"nodeType":"YulAssignment","src":"25740:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25806:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"25811:2:10","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25747:58:10"},"nodeType":"YulFunctionCall","src":"25747:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25740:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25912:3:10"}],"functionName":{"name":"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","nodeType":"YulIdentifier","src":"25823:88:10"},"nodeType":"YulFunctionCall","src":"25823:93:10"},"nodeType":"YulExpressionStatement","src":"25823:93:10"},{"nodeType":"YulAssignment","src":"25925:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25936:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"25941:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25932:3:10"},"nodeType":"YulFunctionCall","src":"25932:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25925:3:10"}]}]},"name":"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25718:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25726:3:10","type":""}],"src":"25584:366:10"},{"body":{"nodeType":"YulBlock","src":"26127:248:10","statements":[{"nodeType":"YulAssignment","src":"26137:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26149:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"26160:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26145:3:10"},"nodeType":"YulFunctionCall","src":"26145:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26137:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26184:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"26195:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26180:3:10"},"nodeType":"YulFunctionCall","src":"26180:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26203:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"26209:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26199:3:10"},"nodeType":"YulFunctionCall","src":"26199:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26173:6:10"},"nodeType":"YulFunctionCall","src":"26173:47:10"},"nodeType":"YulExpressionStatement","src":"26173:47:10"},{"nodeType":"YulAssignment","src":"26229:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26363:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26237:124:10"},"nodeType":"YulFunctionCall","src":"26237:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26229:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26107:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26122:4:10","type":""}],"src":"25956:419:10"},{"body":{"nodeType":"YulBlock","src":"26487:66:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26509:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"26517:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26505:3:10"},"nodeType":"YulFunctionCall","src":"26505:14:10"},{"hexValue":"526563697069656e7449735a65726f41646472657373","kind":"string","nodeType":"YulLiteral","src":"26521:24:10","type":"","value":"RecipientIsZeroAddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26498:6:10"},"nodeType":"YulFunctionCall","src":"26498:48:10"},"nodeType":"YulExpressionStatement","src":"26498:48:10"}]},"name":"store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26479:6:10","type":""}],"src":"26381:172:10"},{"body":{"nodeType":"YulBlock","src":"26705:220:10","statements":[{"nodeType":"YulAssignment","src":"26715:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26781:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"26786:2:10","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26722:58:10"},"nodeType":"YulFunctionCall","src":"26722:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26715:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26887:3:10"}],"functionName":{"name":"store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07","nodeType":"YulIdentifier","src":"26798:88:10"},"nodeType":"YulFunctionCall","src":"26798:93:10"},"nodeType":"YulExpressionStatement","src":"26798:93:10"},{"nodeType":"YulAssignment","src":"26900:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26911:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"26916:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26907:3:10"},"nodeType":"YulFunctionCall","src":"26907:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26900:3:10"}]}]},"name":"abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26693:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26701:3:10","type":""}],"src":"26559:366:10"},{"body":{"nodeType":"YulBlock","src":"27102:248:10","statements":[{"nodeType":"YulAssignment","src":"27112:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27124:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27135:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27120:3:10"},"nodeType":"YulFunctionCall","src":"27120:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27112:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27159:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"27170:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27155:3:10"},"nodeType":"YulFunctionCall","src":"27155:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27178:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"27184:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27174:3:10"},"nodeType":"YulFunctionCall","src":"27174:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27148:6:10"},"nodeType":"YulFunctionCall","src":"27148:47:10"},"nodeType":"YulExpressionStatement","src":"27148:47:10"},{"nodeType":"YulAssignment","src":"27204:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27338:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27212:124:10"},"nodeType":"YulFunctionCall","src":"27212:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27204:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27082:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27097:4:10","type":""}],"src":"26931:419:10"},{"body":{"nodeType":"YulBlock","src":"27462:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27484:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"27492:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27480:3:10"},"nodeType":"YulFunctionCall","src":"27480:14:10"},{"hexValue":"53656e646572466565526563697069656e7449735a65726f41646472657373","kind":"string","nodeType":"YulLiteral","src":"27496:33:10","type":"","value":"SenderFeeRecipientIsZeroAddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27473:6:10"},"nodeType":"YulFunctionCall","src":"27473:57:10"},"nodeType":"YulExpressionStatement","src":"27473:57:10"}]},"name":"store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27454:6:10","type":""}],"src":"27356:181:10"},{"body":{"nodeType":"YulBlock","src":"27689:220:10","statements":[{"nodeType":"YulAssignment","src":"27699:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27765:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"27770:2:10","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27706:58:10"},"nodeType":"YulFunctionCall","src":"27706:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27699:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27871:3:10"}],"functionName":{"name":"store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61","nodeType":"YulIdentifier","src":"27782:88:10"},"nodeType":"YulFunctionCall","src":"27782:93:10"},"nodeType":"YulExpressionStatement","src":"27782:93:10"},{"nodeType":"YulAssignment","src":"27884:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27895:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"27900:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27891:3:10"},"nodeType":"YulFunctionCall","src":"27891:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27884:3:10"}]}]},"name":"abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27677:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27685:3:10","type":""}],"src":"27543:366:10"},{"body":{"nodeType":"YulBlock","src":"28086:248:10","statements":[{"nodeType":"YulAssignment","src":"28096:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28108:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28119:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28104:3:10"},"nodeType":"YulFunctionCall","src":"28104:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28096:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28143:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28154:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28139:3:10"},"nodeType":"YulFunctionCall","src":"28139:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28162:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"28168:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28158:3:10"},"nodeType":"YulFunctionCall","src":"28158:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28132:6:10"},"nodeType":"YulFunctionCall","src":"28132:47:10"},"nodeType":"YulExpressionStatement","src":"28132:47:10"},{"nodeType":"YulAssignment","src":"28188:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28322:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28196:124:10"},"nodeType":"YulFunctionCall","src":"28196:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28188:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28066:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28081:4:10","type":""}],"src":"27915:419:10"},{"body":{"nodeType":"YulBlock","src":"28372:28:10","statements":[{"nodeType":"YulAssignment","src":"28382:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"28389:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28382:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28358:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28368:3:10","type":""}],"src":"28340:60:10"},{"body":{"nodeType":"YulBlock","src":"28465:81:10","statements":[{"nodeType":"YulAssignment","src":"28475:65:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28532:5:10"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"28515:16:10"},"nodeType":"YulFunctionCall","src":"28515:23:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"28506:8:10"},"nodeType":"YulFunctionCall","src":"28506:33:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28488:17:10"},"nodeType":"YulFunctionCall","src":"28488:52:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"28475:9:10"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28445:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"28455:9:10","type":""}],"src":"28406:140:10"},{"body":{"nodeType":"YulBlock","src":"28616:65:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28633:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28668:5:10"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"28638:29:10"},"nodeType":"YulFunctionCall","src":"28638:36:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28626:6:10"},"nodeType":"YulFunctionCall","src":"28626:49:10"},"nodeType":"YulExpressionStatement","src":"28626:49:10"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28604:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28611:3:10","type":""}],"src":"28552:129:10"},{"body":{"nodeType":"YulBlock","src":"28812:205:10","statements":[{"nodeType":"YulAssignment","src":"28822:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28834:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28845:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28830:3:10"},"nodeType":"YulFunctionCall","src":"28830:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28822:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28902:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28915:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28926:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28911:3:10"},"nodeType":"YulFunctionCall","src":"28911:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28858:43:10"},"nodeType":"YulFunctionCall","src":"28858:71:10"},"nodeType":"YulExpressionStatement","src":"28858:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28982:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28995:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"29006:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28991:3:10"},"nodeType":"YulFunctionCall","src":"28991:18:10"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28939:42:10"},"nodeType":"YulFunctionCall","src":"28939:71:10"},"nodeType":"YulExpressionStatement","src":"28939:71:10"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28776:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28788:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28796:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28807:4:10","type":""}],"src":"28687:330:10"},{"body":{"nodeType":"YulBlock","src":"29086:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29103:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29125:5:10"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"29108:16:10"},"nodeType":"YulFunctionCall","src":"29108:23:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29096:6:10"},"nodeType":"YulFunctionCall","src":"29096:36:10"},"nodeType":"YulExpressionStatement","src":"29096:36:10"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29074:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29081:3:10","type":""}],"src":"29023:115:10"},{"body":{"nodeType":"YulBlock","src":"29208:82:10","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"29231:3:10"},{"name":"src","nodeType":"YulIdentifier","src":"29236:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"29241:6:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"29218:12:10"},"nodeType":"YulFunctionCall","src":"29218:30:10"},"nodeType":"YulExpressionStatement","src":"29218:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"29268:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"29273:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29264:3:10"},"nodeType":"YulFunctionCall","src":"29264:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"29282:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29257:6:10"},"nodeType":"YulFunctionCall","src":"29257:27:10"},"nodeType":"YulExpressionStatement","src":"29257:27:10"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"29190:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"29195:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"29200:6:10","type":""}],"src":"29144:146:10"},{"body":{"nodeType":"YulBlock","src":"29344:54:10","statements":[{"nodeType":"YulAssignment","src":"29354:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29372:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"29379:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29368:3:10"},"nodeType":"YulFunctionCall","src":"29368:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29388:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29384:3:10"},"nodeType":"YulFunctionCall","src":"29384:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29364:3:10"},"nodeType":"YulFunctionCall","src":"29364:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"29354:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29327:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"29337:6:10","type":""}],"src":"29296:102:10"},{"body":{"nodeType":"YulBlock","src":"29530:215:10","statements":[{"nodeType":"YulAssignment","src":"29540:78:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29606:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"29611:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29547:58:10"},"nodeType":"YulFunctionCall","src":"29547:71:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29540:3:10"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29665:5:10"},{"name":"pos","nodeType":"YulIdentifier","src":"29672:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"29677:6:10"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"29628:36:10"},"nodeType":"YulFunctionCall","src":"29628:56:10"},"nodeType":"YulExpressionStatement","src":"29628:56:10"},{"nodeType":"YulAssignment","src":"29693:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29704:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29731:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"29709:21:10"},"nodeType":"YulFunctionCall","src":"29709:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29700:3:10"},"nodeType":"YulFunctionCall","src":"29700:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29693:3:10"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"29503:5:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"29510:6:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29518:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29526:3:10","type":""}],"src":"29428:317:10"},{"body":{"nodeType":"YulBlock","src":"29989:533:10","statements":[{"nodeType":"YulAssignment","src":"29999:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30011:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30022:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30007:3:10"},"nodeType":"YulFunctionCall","src":"30007:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29999:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30080:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30093:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30104:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30089:3:10"},"nodeType":"YulFunctionCall","src":"30089:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30036:43:10"},"nodeType":"YulFunctionCall","src":"30036:71:10"},"nodeType":"YulExpressionStatement","src":"30036:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30161:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30174:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30185:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30170:3:10"},"nodeType":"YulFunctionCall","src":"30170:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30117:43:10"},"nodeType":"YulFunctionCall","src":"30117:72:10"},"nodeType":"YulExpressionStatement","src":"30117:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"30243:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30256:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30267:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30252:3:10"},"nodeType":"YulFunctionCall","src":"30252:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30199:43:10"},"nodeType":"YulFunctionCall","src":"30199:72:10"},"nodeType":"YulExpressionStatement","src":"30199:72:10"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30323:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30336:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30347:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30332:3:10"},"nodeType":"YulFunctionCall","src":"30332:18:10"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"30281:41:10"},"nodeType":"YulFunctionCall","src":"30281:70:10"},"nodeType":"YulExpressionStatement","src":"30281:70:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30372:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"30383:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30368:3:10"},"nodeType":"YulFunctionCall","src":"30368:19:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30393:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"30399:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30389:3:10"},"nodeType":"YulFunctionCall","src":"30389:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30361:6:10"},"nodeType":"YulFunctionCall","src":"30361:49:10"},"nodeType":"YulExpressionStatement","src":"30361:49:10"},{"nodeType":"YulAssignment","src":"30419:96:10","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"30493:6:10"},{"name":"value5","nodeType":"YulIdentifier","src":"30501:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"30510:4:10"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30427:65:10"},"nodeType":"YulFunctionCall","src":"30427:88:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30419:4:10"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_string_calldata_ptr__to_t_address_t_address_t_address_t_uint96_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29921:9:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"29933:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29941:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29949:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29957:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29965:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29973:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29984:4:10","type":""}],"src":"29751:771:10"},{"body":{"nodeType":"YulBlock","src":"30634:62:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30656:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"30664:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30652:3:10"},"nodeType":"YulFunctionCall","src":"30652:14:10"},{"hexValue":"496e76616c69644d65737361676548617368","kind":"string","nodeType":"YulLiteral","src":"30668:20:10","type":"","value":"InvalidMessageHash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30645:6:10"},"nodeType":"YulFunctionCall","src":"30645:44:10"},"nodeType":"YulExpressionStatement","src":"30645:44:10"}]},"name":"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30626:6:10","type":""}],"src":"30528:168:10"},{"body":{"nodeType":"YulBlock","src":"30848:220:10","statements":[{"nodeType":"YulAssignment","src":"30858:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30924:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"30929:2:10","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30865:58:10"},"nodeType":"YulFunctionCall","src":"30865:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30858:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31030:3:10"}],"functionName":{"name":"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","nodeType":"YulIdentifier","src":"30941:88:10"},"nodeType":"YulFunctionCall","src":"30941:93:10"},"nodeType":"YulExpressionStatement","src":"30941:93:10"},{"nodeType":"YulAssignment","src":"31043:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31054:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"31059:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31050:3:10"},"nodeType":"YulFunctionCall","src":"31050:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31043:3:10"}]}]},"name":"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30836:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30844:3:10","type":""}],"src":"30702:366:10"},{"body":{"nodeType":"YulBlock","src":"31245:248:10","statements":[{"nodeType":"YulAssignment","src":"31255:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31267:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31278:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31263:3:10"},"nodeType":"YulFunctionCall","src":"31263:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31255:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31302:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31313:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31298:3:10"},"nodeType":"YulFunctionCall","src":"31298:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31321:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"31327:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31317:3:10"},"nodeType":"YulFunctionCall","src":"31317:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31291:6:10"},"nodeType":"YulFunctionCall","src":"31291:47:10"},"nodeType":"YulExpressionStatement","src":"31291:47:10"},{"nodeType":"YulAssignment","src":"31347:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31481:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31355:124:10"},"nodeType":"YulFunctionCall","src":"31355:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31347:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31225:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31240:4:10","type":""}],"src":"31074:419:10"},{"body":{"nodeType":"YulBlock","src":"31653:288:10","statements":[{"nodeType":"YulAssignment","src":"31663:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31675:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31686:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31671:3:10"},"nodeType":"YulFunctionCall","src":"31671:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31663:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31743:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31756:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31767:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31752:3:10"},"nodeType":"YulFunctionCall","src":"31752:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31699:43:10"},"nodeType":"YulFunctionCall","src":"31699:71:10"},"nodeType":"YulExpressionStatement","src":"31699:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31824:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31837:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31848:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31833:3:10"},"nodeType":"YulFunctionCall","src":"31833:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31780:43:10"},"nodeType":"YulFunctionCall","src":"31780:72:10"},"nodeType":"YulExpressionStatement","src":"31780:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31906:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31919:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"31930:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31915:3:10"},"nodeType":"YulFunctionCall","src":"31915:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31862:43:10"},"nodeType":"YulFunctionCall","src":"31862:72:10"},"nodeType":"YulExpressionStatement","src":"31862:72:10"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31609:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31621:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31629:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31637:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31648:4:10","type":""}],"src":"31499:442:10"},{"body":{"nodeType":"YulBlock","src":"31990:190:10","statements":[{"nodeType":"YulAssignment","src":"32000:33:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32027:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32009:17:10"},"nodeType":"YulFunctionCall","src":"32009:24:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32000:5:10"}]},{"body":{"nodeType":"YulBlock","src":"32123:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32125:16:10"},"nodeType":"YulFunctionCall","src":"32125:18:10"},"nodeType":"YulExpressionStatement","src":"32125:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32048:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"32055:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32045:2:10"},"nodeType":"YulFunctionCall","src":"32045:77:10"},"nodeType":"YulIf","src":"32042:103:10"},{"nodeType":"YulAssignment","src":"32154:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32165:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"32172:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32161:3:10"},"nodeType":"YulFunctionCall","src":"32161:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32154:3:10"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31976:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31986:3:10","type":""}],"src":"31947:233:10"},{"body":{"nodeType":"YulBlock","src":"32234:362:10","statements":[{"nodeType":"YulAssignment","src":"32244:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32267:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32249:17:10"},"nodeType":"YulFunctionCall","src":"32249:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32244:1:10"}]},{"nodeType":"YulAssignment","src":"32278:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32301:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32283:17:10"},"nodeType":"YulFunctionCall","src":"32283:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32278:1:10"}]},{"nodeType":"YulVariableDeclaration","src":"32312:28:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32335:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"32338:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32331:3:10"},"nodeType":"YulFunctionCall","src":"32331:9:10"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"32316:11:10","type":""}]},{"nodeType":"YulAssignment","src":"32349:41:10","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"32378:11:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32360:17:10"},"nodeType":"YulFunctionCall","src":"32360:30:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"32349:7:10"}]},{"body":{"nodeType":"YulBlock","src":"32567:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32569:16:10"},"nodeType":"YulFunctionCall","src":"32569:18:10"},"nodeType":"YulExpressionStatement","src":"32569:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32500:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32493:6:10"},"nodeType":"YulFunctionCall","src":"32493:9:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32523:1:10"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"32530:7:10"},{"name":"x","nodeType":"YulIdentifier","src":"32539:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"32526:3:10"},"nodeType":"YulFunctionCall","src":"32526:15:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32520:2:10"},"nodeType":"YulFunctionCall","src":"32520:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32473:2:10"},"nodeType":"YulFunctionCall","src":"32473:83:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32453:6:10"},"nodeType":"YulFunctionCall","src":"32453:113:10"},"nodeType":"YulIf","src":"32450:139:10"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32217:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"32220:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"32226:7:10","type":""}],"src":"32186:410:10"},{"body":{"nodeType":"YulBlock","src":"32630:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32647:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32650:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32640:6:10"},"nodeType":"YulFunctionCall","src":"32640:88:10"},"nodeType":"YulExpressionStatement","src":"32640:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32744:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32747:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32737:6:10"},"nodeType":"YulFunctionCall","src":"32737:15:10"},"nodeType":"YulExpressionStatement","src":"32737:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32768:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32771:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32761:6:10"},"nodeType":"YulFunctionCall","src":"32761:15:10"},"nodeType":"YulExpressionStatement","src":"32761:15:10"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"32602:180:10"},{"body":{"nodeType":"YulBlock","src":"32830:143:10","statements":[{"nodeType":"YulAssignment","src":"32840:25:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32863:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32845:17:10"},"nodeType":"YulFunctionCall","src":"32845:20:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32840:1:10"}]},{"nodeType":"YulAssignment","src":"32874:25:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32897:1:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32879:17:10"},"nodeType":"YulFunctionCall","src":"32879:20:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32874:1:10"}]},{"body":{"nodeType":"YulBlock","src":"32921:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"32923:16:10"},"nodeType":"YulFunctionCall","src":"32923:18:10"},"nodeType":"YulExpressionStatement","src":"32923:18:10"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32918:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32911:6:10"},"nodeType":"YulFunctionCall","src":"32911:9:10"},"nodeType":"YulIf","src":"32908:35:10"},{"nodeType":"YulAssignment","src":"32953:14:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32962:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"32965:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"32958:3:10"},"nodeType":"YulFunctionCall","src":"32958:9:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"32953:1:10"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32819:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"32822:1:10","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"32828:1:10","type":""}],"src":"32788:185:10"},{"body":{"nodeType":"YulBlock","src":"33190:451:10","statements":[{"nodeType":"YulAssignment","src":"33200:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33212:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"33223:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33208:3:10"},"nodeType":"YulFunctionCall","src":"33208:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33200:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33281:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33294:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"33305:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33290:3:10"},"nodeType":"YulFunctionCall","src":"33290:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33237:43:10"},"nodeType":"YulFunctionCall","src":"33237:71:10"},"nodeType":"YulExpressionStatement","src":"33237:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33362:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33375:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"33386:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33371:3:10"},"nodeType":"YulFunctionCall","src":"33371:18:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33318:43:10"},"nodeType":"YulFunctionCall","src":"33318:72:10"},"nodeType":"YulExpressionStatement","src":"33318:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33443:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33456:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"33467:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33452:3:10"},"nodeType":"YulFunctionCall","src":"33452:18:10"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33400:42:10"},"nodeType":"YulFunctionCall","src":"33400:71:10"},"nodeType":"YulExpressionStatement","src":"33400:71:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33492:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"33503:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33488:3:10"},"nodeType":"YulFunctionCall","src":"33488:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33512:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"33518:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33508:3:10"},"nodeType":"YulFunctionCall","src":"33508:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33481:6:10"},"nodeType":"YulFunctionCall","src":"33481:48:10"},"nodeType":"YulExpressionStatement","src":"33481:48:10"},{"nodeType":"YulAssignment","src":"33538:96:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33612:6:10"},{"name":"value4","nodeType":"YulIdentifier","src":"33620:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"33629:4:10"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33546:65:10"},"nodeType":"YulFunctionCall","src":"33546:88:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33538:4:10"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33130:9:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33142:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33150:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33158:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33166:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33174:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33185:4:10","type":""}],"src":"32979:662:10"},{"body":{"nodeType":"YulBlock","src":"33753:127:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33775:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"33783:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33771:3:10"},"nodeType":"YulFunctionCall","src":"33771:14:10"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"33787:34:10","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33764:6:10"},"nodeType":"YulFunctionCall","src":"33764:58:10"},"nodeType":"YulExpressionStatement","src":"33764:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33843:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"33851:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33839:3:10"},"nodeType":"YulFunctionCall","src":"33839:15:10"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"33856:16:10","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33832:6:10"},"nodeType":"YulFunctionCall","src":"33832:41:10"},"nodeType":"YulExpressionStatement","src":"33832:41:10"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33745:6:10","type":""}],"src":"33647:233:10"},{"body":{"nodeType":"YulBlock","src":"34032:220:10","statements":[{"nodeType":"YulAssignment","src":"34042:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34108:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"34113:2:10","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34049:58:10"},"nodeType":"YulFunctionCall","src":"34049:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34042:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34214:3:10"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"34125:88:10"},"nodeType":"YulFunctionCall","src":"34125:93:10"},"nodeType":"YulExpressionStatement","src":"34125:93:10"},{"nodeType":"YulAssignment","src":"34227:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34238:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"34243:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34234:3:10"},"nodeType":"YulFunctionCall","src":"34234:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34227:3:10"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34020:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34028:3:10","type":""}],"src":"33886:366:10"},{"body":{"nodeType":"YulBlock","src":"34429:248:10","statements":[{"nodeType":"YulAssignment","src":"34439:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34451:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"34462:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34447:3:10"},"nodeType":"YulFunctionCall","src":"34447:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34439:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34486:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"34497:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34482:3:10"},"nodeType":"YulFunctionCall","src":"34482:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34505:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"34511:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34501:3:10"},"nodeType":"YulFunctionCall","src":"34501:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34475:6:10"},"nodeType":"YulFunctionCall","src":"34475:47:10"},"nodeType":"YulExpressionStatement","src":"34475:47:10"},{"nodeType":"YulAssignment","src":"34531:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34665:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34539:124:10"},"nodeType":"YulFunctionCall","src":"34539:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34531:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34409:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34424:4:10","type":""}],"src":"34258:419:10"},{"body":{"nodeType":"YulBlock","src":"34736:32:10","statements":[{"nodeType":"YulAssignment","src":"34746:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"34757:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"34746:7:10"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34718:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"34728:7:10","type":""}],"src":"34683:85:10"},{"body":{"nodeType":"YulBlock","src":"34817:43:10","statements":[{"nodeType":"YulAssignment","src":"34827:27:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34842:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"34849:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34838:3:10"},"nodeType":"YulFunctionCall","src":"34838:16:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"34827:7:10"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34799:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"34809:7:10","type":""}],"src":"34774:86:10"},{"body":{"nodeType":"YulBlock","src":"34932:88:10","statements":[{"nodeType":"YulAssignment","src":"34942:72:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35006:5:10"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"34980:25:10"},"nodeType":"YulFunctionCall","src":"34980:32:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"34971:8:10"},"nodeType":"YulFunctionCall","src":"34971:42:10"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"34955:15:10"},"nodeType":"YulFunctionCall","src":"34955:59:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"34942:9:10"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34912:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"34922:9:10","type":""}],"src":"34866:154:10"},{"body":{"nodeType":"YulBlock","src":"35097:72:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35114:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35156:5:10"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"35119:36:10"},"nodeType":"YulFunctionCall","src":"35119:43:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35107:6:10"},"nodeType":"YulFunctionCall","src":"35107:56:10"},"nodeType":"YulExpressionStatement","src":"35107:56:10"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35085:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35092:3:10","type":""}],"src":"35026:143:10"},{"body":{"nodeType":"YulBlock","src":"35279:130:10","statements":[{"nodeType":"YulAssignment","src":"35289:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35301:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"35312:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35297:3:10"},"nodeType":"YulFunctionCall","src":"35297:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35289:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35375:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35388:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"35399:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35384:3:10"},"nodeType":"YulFunctionCall","src":"35384:17:10"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"35325:49:10"},"nodeType":"YulFunctionCall","src":"35325:77:10"},"nodeType":"YulExpressionStatement","src":"35325:77:10"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35251:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35263:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35274:4:10","type":""}],"src":"35175:234:10"},{"body":{"nodeType":"YulBlock","src":"35521:67:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35543:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"35551:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35539:3:10"},"nodeType":"YulFunctionCall","src":"35539:14:10"},{"hexValue":"476174657761793a20696e76616c696420737461747573","kind":"string","nodeType":"YulLiteral","src":"35555:25:10","type":"","value":"Gateway: invalid status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35532:6:10"},"nodeType":"YulFunctionCall","src":"35532:49:10"},"nodeType":"YulExpressionStatement","src":"35532:49:10"}]},"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35513:6:10","type":""}],"src":"35415:173:10"},{"body":{"nodeType":"YulBlock","src":"35740:220:10","statements":[{"nodeType":"YulAssignment","src":"35750:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35816:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"35821:2:10","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35757:58:10"},"nodeType":"YulFunctionCall","src":"35757:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35750:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35922:3:10"}],"functionName":{"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulIdentifier","src":"35833:88:10"},"nodeType":"YulFunctionCall","src":"35833:93:10"},"nodeType":"YulExpressionStatement","src":"35833:93:10"},{"nodeType":"YulAssignment","src":"35935:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35946:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"35951:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35942:3:10"},"nodeType":"YulFunctionCall","src":"35942:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35935:3:10"}]}]},"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35728:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35736:3:10","type":""}],"src":"35594:366:10"},{"body":{"nodeType":"YulBlock","src":"36137:248:10","statements":[{"nodeType":"YulAssignment","src":"36147:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36159:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"36170:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36155:3:10"},"nodeType":"YulFunctionCall","src":"36155:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36147:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36194:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"36205:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36190:3:10"},"nodeType":"YulFunctionCall","src":"36190:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36213:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"36219:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36209:3:10"},"nodeType":"YulFunctionCall","src":"36209:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36183:6:10"},"nodeType":"YulFunctionCall","src":"36183:47:10"},"nodeType":"YulExpressionStatement","src":"36183:47:10"},{"nodeType":"YulAssignment","src":"36239:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36373:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36247:124:10"},"nodeType":"YulFunctionCall","src":"36247:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36239:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36117:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36132:4:10","type":""}],"src":"35966:419:10"},{"body":{"nodeType":"YulBlock","src":"36435:172:10","statements":[{"nodeType":"YulAssignment","src":"36445:24:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36467:1:10"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"36450:16:10"},"nodeType":"YulFunctionCall","src":"36450:19:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"36445:1:10"}]},{"nodeType":"YulAssignment","src":"36478:24:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36500:1:10"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"36483:16:10"},"nodeType":"YulFunctionCall","src":"36483:19:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"36478:1:10"}]},{"nodeType":"YulAssignment","src":"36511:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36523:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"36526:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36519:3:10"},"nodeType":"YulFunctionCall","src":"36519:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"36511:4:10"}]},{"body":{"nodeType":"YulBlock","src":"36578:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"36580:16:10"},"nodeType":"YulFunctionCall","src":"36580:18:10"},"nodeType":"YulExpressionStatement","src":"36580:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"36544:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"36550:26:10","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36541:2:10"},"nodeType":"YulFunctionCall","src":"36541:36:10"},"nodeType":"YulIf","src":"36538:62:10"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"36421:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"36424:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"36430:4:10","type":""}],"src":"36391:216:10"},{"body":{"nodeType":"YulBlock","src":"36671:80:10","statements":[{"nodeType":"YulAssignment","src":"36681:64:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36737:5:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"36720:16:10"},"nodeType":"YulFunctionCall","src":"36720:23:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"36711:8:10"},"nodeType":"YulFunctionCall","src":"36711:33:10"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"36694:16:10"},"nodeType":"YulFunctionCall","src":"36694:51:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"36681:9:10"}]}]},"name":"convert_t_uint64_to_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36651:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"36661:9:10","type":""}],"src":"36613:138:10"},{"body":{"nodeType":"YulBlock","src":"36820:64:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36837:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36871:5:10"}],"functionName":{"name":"convert_t_uint64_to_t_uint96","nodeType":"YulIdentifier","src":"36842:28:10"},"nodeType":"YulFunctionCall","src":"36842:35:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36830:6:10"},"nodeType":"YulFunctionCall","src":"36830:48:10"},"nodeType":"YulExpressionStatement","src":"36830:48:10"}]},"name":"abi_encode_t_uint64_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36808:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36815:3:10","type":""}],"src":"36757:127:10"},{"body":{"nodeType":"YulBlock","src":"37014:204:10","statements":[{"nodeType":"YulAssignment","src":"37024:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37036:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"37047:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37032:3:10"},"nodeType":"YulFunctionCall","src":"37032:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37024:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37104:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37117:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"37128:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37113:3:10"},"nodeType":"YulFunctionCall","src":"37113:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37060:43:10"},"nodeType":"YulFunctionCall","src":"37060:71:10"},"nodeType":"YulExpressionStatement","src":"37060:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37183:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37196:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"37207:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37192:3:10"},"nodeType":"YulFunctionCall","src":"37192:18:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"37141:41:10"},"nodeType":"YulFunctionCall","src":"37141:70:10"},"nodeType":"YulExpressionStatement","src":"37141:70:10"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36978:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36990:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36998:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37009:4:10","type":""}],"src":"36890:328:10"},{"body":{"nodeType":"YulBlock","src":"37330:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37352:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"37360:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37348:3:10"},"nodeType":"YulFunctionCall","src":"37348:14:10"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"37364:34:10","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37341:6:10"},"nodeType":"YulFunctionCall","src":"37341:58:10"},"nodeType":"YulExpressionStatement","src":"37341:58:10"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37322:6:10","type":""}],"src":"37224:182:10"},{"body":{"nodeType":"YulBlock","src":"37558:220:10","statements":[{"nodeType":"YulAssignment","src":"37568:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37634:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"37639:2:10","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37575:58:10"},"nodeType":"YulFunctionCall","src":"37575:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37568:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37740:3:10"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"37651:88:10"},"nodeType":"YulFunctionCall","src":"37651:93:10"},"nodeType":"YulExpressionStatement","src":"37651:93:10"},{"nodeType":"YulAssignment","src":"37753:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37764:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"37769:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37760:3:10"},"nodeType":"YulFunctionCall","src":"37760:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37753:3:10"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37546:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37554:3:10","type":""}],"src":"37412:366:10"},{"body":{"nodeType":"YulBlock","src":"37955:248:10","statements":[{"nodeType":"YulAssignment","src":"37965:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37977:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"37988:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37973:3:10"},"nodeType":"YulFunctionCall","src":"37973:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37965:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38012:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"38023:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38008:3:10"},"nodeType":"YulFunctionCall","src":"38008:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38031:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"38037:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38027:3:10"},"nodeType":"YulFunctionCall","src":"38027:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38001:6:10"},"nodeType":"YulFunctionCall","src":"38001:47:10"},"nodeType":"YulExpressionStatement","src":"38001:47:10"},{"nodeType":"YulAssignment","src":"38057:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38191:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38065:124:10"},"nodeType":"YulFunctionCall","src":"38065:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38057:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37935:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37950:4:10","type":""}],"src":"37784:419:10"},{"body":{"nodeType":"YulBlock","src":"38315:60:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38337:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"38345:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38333:3:10"},"nodeType":"YulFunctionCall","src":"38333:14:10"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"38349:18:10","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38326:6:10"},"nodeType":"YulFunctionCall","src":"38326:42:10"},"nodeType":"YulExpressionStatement","src":"38326:42:10"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38307:6:10","type":""}],"src":"38209:166:10"},{"body":{"nodeType":"YulBlock","src":"38527:220:10","statements":[{"nodeType":"YulAssignment","src":"38537:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38603:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"38608:2:10","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38544:58:10"},"nodeType":"YulFunctionCall","src":"38544:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38537:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38709:3:10"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"38620:88:10"},"nodeType":"YulFunctionCall","src":"38620:93:10"},"nodeType":"YulExpressionStatement","src":"38620:93:10"},{"nodeType":"YulAssignment","src":"38722:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38733:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"38738:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38729:3:10"},"nodeType":"YulFunctionCall","src":"38729:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38722:3:10"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38515:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38523:3:10","type":""}],"src":"38381:366:10"},{"body":{"nodeType":"YulBlock","src":"38924:248:10","statements":[{"nodeType":"YulAssignment","src":"38934:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38946:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"38957:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38942:3:10"},"nodeType":"YulFunctionCall","src":"38942:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38934:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38981:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"38992:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38977:3:10"},"nodeType":"YulFunctionCall","src":"38977:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39000:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"39006:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38996:3:10"},"nodeType":"YulFunctionCall","src":"38996:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38970:6:10"},"nodeType":"YulFunctionCall","src":"38970:47:10"},"nodeType":"YulExpressionStatement","src":"38970:47:10"},{"nodeType":"YulAssignment","src":"39026:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39160:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39034:124:10"},"nodeType":"YulFunctionCall","src":"39034:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39026:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38904:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38919:4:10","type":""}],"src":"38753:419:10"},{"body":{"nodeType":"YulBlock","src":"39284:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39306:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"39314:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39302:3:10"},"nodeType":"YulFunctionCall","src":"39302:14:10"},{"hexValue":"546f6b656e4e6f74537570706f72746564","kind":"string","nodeType":"YulLiteral","src":"39318:19:10","type":"","value":"TokenNotSupported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39295:6:10"},"nodeType":"YulFunctionCall","src":"39295:43:10"},"nodeType":"YulExpressionStatement","src":"39295:43:10"}]},"name":"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39276:6:10","type":""}],"src":"39178:167:10"},{"body":{"nodeType":"YulBlock","src":"39497:220:10","statements":[{"nodeType":"YulAssignment","src":"39507:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39573:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"39578:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39514:58:10"},"nodeType":"YulFunctionCall","src":"39514:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39507:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39679:3:10"}],"functionName":{"name":"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","nodeType":"YulIdentifier","src":"39590:88:10"},"nodeType":"YulFunctionCall","src":"39590:93:10"},"nodeType":"YulExpressionStatement","src":"39590:93:10"},{"nodeType":"YulAssignment","src":"39692:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39703:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"39708:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39699:3:10"},"nodeType":"YulFunctionCall","src":"39699:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39692:3:10"}]}]},"name":"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39485:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39493:3:10","type":""}],"src":"39351:366:10"},{"body":{"nodeType":"YulBlock","src":"39894:248:10","statements":[{"nodeType":"YulAssignment","src":"39904:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39916:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"39927:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39912:3:10"},"nodeType":"YulFunctionCall","src":"39912:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39904:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39951:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"39962:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39947:3:10"},"nodeType":"YulFunctionCall","src":"39947:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39970:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"39976:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39966:3:10"},"nodeType":"YulFunctionCall","src":"39966:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39940:6:10"},"nodeType":"YulFunctionCall","src":"39940:47:10"},"nodeType":"YulExpressionStatement","src":"39940:47:10"},{"nodeType":"YulAssignment","src":"39996:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40130:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40004:124:10"},"nodeType":"YulFunctionCall","src":"40004:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39996:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39874:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39889:4:10","type":""}],"src":"39723:419:10"},{"body":{"nodeType":"YulBlock","src":"40254:60:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40276:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"40284:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40272:3:10"},"nodeType":"YulFunctionCall","src":"40272:14:10"},{"hexValue":"5468726f775a65726f41646472657373","kind":"string","nodeType":"YulLiteral","src":"40288:18:10","type":"","value":"ThrowZeroAddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40265:6:10"},"nodeType":"YulFunctionCall","src":"40265:42:10"},"nodeType":"YulExpressionStatement","src":"40265:42:10"}]},"name":"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40246:6:10","type":""}],"src":"40148:166:10"},{"body":{"nodeType":"YulBlock","src":"40466:220:10","statements":[{"nodeType":"YulAssignment","src":"40476:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40542:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"40547:2:10","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40483:58:10"},"nodeType":"YulFunctionCall","src":"40483:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40476:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40648:3:10"}],"functionName":{"name":"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","nodeType":"YulIdentifier","src":"40559:88:10"},"nodeType":"YulFunctionCall","src":"40559:93:10"},"nodeType":"YulExpressionStatement","src":"40559:93:10"},{"nodeType":"YulAssignment","src":"40661:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40672:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"40677:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40668:3:10"},"nodeType":"YulFunctionCall","src":"40668:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40661:3:10"}]}]},"name":"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40454:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40462:3:10","type":""}],"src":"40320:366:10"},{"body":{"nodeType":"YulBlock","src":"40863:248:10","statements":[{"nodeType":"YulAssignment","src":"40873:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40885:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"40896:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40881:3:10"},"nodeType":"YulFunctionCall","src":"40881:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40873:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40920:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"40931:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40916:3:10"},"nodeType":"YulFunctionCall","src":"40916:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40939:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"40945:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40935:3:10"},"nodeType":"YulFunctionCall","src":"40935:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40909:6:10"},"nodeType":"YulFunctionCall","src":"40909:47:10"},"nodeType":"YulExpressionStatement","src":"40909:47:10"},{"nodeType":"YulAssignment","src":"40965:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41099:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40973:124:10"},"nodeType":"YulFunctionCall","src":"40973:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40965:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40843:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40858:4:10","type":""}],"src":"40692:419:10"},{"body":{"nodeType":"YulBlock","src":"41223:69:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41245:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"41253:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41241:3:10"},"nodeType":"YulFunctionCall","src":"41241:14:10"},{"hexValue":"496e76616c696453656e646572466565526563697069656e74","kind":"string","nodeType":"YulLiteral","src":"41257:27:10","type":"","value":"InvalidSenderFeeRecipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41234:6:10"},"nodeType":"YulFunctionCall","src":"41234:51:10"},"nodeType":"YulExpressionStatement","src":"41234:51:10"}]},"name":"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41215:6:10","type":""}],"src":"41117:175:10"},{"body":{"nodeType":"YulBlock","src":"41444:220:10","statements":[{"nodeType":"YulAssignment","src":"41454:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41520:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"41525:2:10","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41461:58:10"},"nodeType":"YulFunctionCall","src":"41461:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41454:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41626:3:10"}],"functionName":{"name":"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","nodeType":"YulIdentifier","src":"41537:88:10"},"nodeType":"YulFunctionCall","src":"41537:93:10"},"nodeType":"YulExpressionStatement","src":"41537:93:10"},{"nodeType":"YulAssignment","src":"41639:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41650:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"41655:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41646:3:10"},"nodeType":"YulFunctionCall","src":"41646:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41639:3:10"}]}]},"name":"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41432:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41440:3:10","type":""}],"src":"41298:366:10"},{"body":{"nodeType":"YulBlock","src":"41841:248:10","statements":[{"nodeType":"YulAssignment","src":"41851:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41863:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"41874:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41859:3:10"},"nodeType":"YulFunctionCall","src":"41859:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41851:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41898:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"41909:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41894:3:10"},"nodeType":"YulFunctionCall","src":"41894:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41917:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"41923:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41913:3:10"},"nodeType":"YulFunctionCall","src":"41913:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41887:6:10"},"nodeType":"YulFunctionCall","src":"41887:47:10"},"nodeType":"YulExpressionStatement","src":"41887:47:10"},{"nodeType":"YulAssignment","src":"41943:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42077:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41951:124:10"},"nodeType":"YulFunctionCall","src":"41951:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41943:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41821:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41836:4:10","type":""}],"src":"41670:419:10"},{"body":{"nodeType":"YulBlock","src":"42201:124:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42223:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"42231:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42219:3:10"},"nodeType":"YulFunctionCall","src":"42219:14:10"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"42235:34:10","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42212:6:10"},"nodeType":"YulFunctionCall","src":"42212:58:10"},"nodeType":"YulExpressionStatement","src":"42212:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42291:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"42299:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42287:3:10"},"nodeType":"YulFunctionCall","src":"42287:15:10"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"42304:13:10","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42280:6:10"},"nodeType":"YulFunctionCall","src":"42280:38:10"},"nodeType":"YulExpressionStatement","src":"42280:38:10"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42193:6:10","type":""}],"src":"42095:230:10"},{"body":{"nodeType":"YulBlock","src":"42477:220:10","statements":[{"nodeType":"YulAssignment","src":"42487:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42553:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"42558:2:10","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42494:58:10"},"nodeType":"YulFunctionCall","src":"42494:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42487:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42659:3:10"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"42570:88:10"},"nodeType":"YulFunctionCall","src":"42570:93:10"},"nodeType":"YulExpressionStatement","src":"42570:93:10"},{"nodeType":"YulAssignment","src":"42672:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42683:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"42688:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42679:3:10"},"nodeType":"YulFunctionCall","src":"42679:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42672:3:10"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42465:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42473:3:10","type":""}],"src":"42331:366:10"},{"body":{"nodeType":"YulBlock","src":"42874:248:10","statements":[{"nodeType":"YulAssignment","src":"42884:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42896:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"42907:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42892:3:10"},"nodeType":"YulFunctionCall","src":"42892:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42884:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42931:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"42942:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42927:3:10"},"nodeType":"YulFunctionCall","src":"42927:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42950:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"42956:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42946:3:10"},"nodeType":"YulFunctionCall","src":"42946:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42920:6:10"},"nodeType":"YulFunctionCall","src":"42920:47:10"},"nodeType":"YulExpressionStatement","src":"42920:47:10"},{"nodeType":"YulAssignment","src":"42976:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43110:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42984:124:10"},"nodeType":"YulFunctionCall","src":"42984:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42976:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42854:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42869:4:10","type":""}],"src":"42703:419:10"},{"body":{"nodeType":"YulBlock","src":"43234:64:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43256:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"43264:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43252:3:10"},"nodeType":"YulFunctionCall","src":"43252:14:10"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"43268:22:10","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43245:6:10"},"nodeType":"YulFunctionCall","src":"43245:46:10"},"nodeType":"YulExpressionStatement","src":"43245:46:10"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43226:6:10","type":""}],"src":"43128:170:10"},{"body":{"nodeType":"YulBlock","src":"43450:220:10","statements":[{"nodeType":"YulAssignment","src":"43460:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43526:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"43531:2:10","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43467:58:10"},"nodeType":"YulFunctionCall","src":"43467:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43460:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43632:3:10"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"43543:88:10"},"nodeType":"YulFunctionCall","src":"43543:93:10"},"nodeType":"YulExpressionStatement","src":"43543:93:10"},{"nodeType":"YulAssignment","src":"43645:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43656:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"43661:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43652:3:10"},"nodeType":"YulFunctionCall","src":"43652:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43645:3:10"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43438:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43446:3:10","type":""}],"src":"43304:366:10"},{"body":{"nodeType":"YulBlock","src":"43847:248:10","statements":[{"nodeType":"YulAssignment","src":"43857:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43869:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"43880:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43865:3:10"},"nodeType":"YulFunctionCall","src":"43865:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43857:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43904:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"43915:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43900:3:10"},"nodeType":"YulFunctionCall","src":"43900:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43923:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"43929:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43919:3:10"},"nodeType":"YulFunctionCall","src":"43919:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43893:6:10"},"nodeType":"YulFunctionCall","src":"43893:47:10"},"nodeType":"YulExpressionStatement","src":"43893:47:10"},{"nodeType":"YulAssignment","src":"43949:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44083:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43957:124:10"},"nodeType":"YulFunctionCall","src":"43957:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43949:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43827:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43842:4:10","type":""}],"src":"43676:419:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    // struct IGateway.Order -> struct IGateway.Order\n    function abi_encode_t_struct$_Order_$2020_memory_ptr_to_t_struct$_Order_$2020_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // senderFeeRecipient\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // senderFee\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // protocolFee\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // isFulfilled\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // isRefunded\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // refundAddress\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // currentBPS\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint96_to_t_uint96(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Order_$2020_memory_ptr__to_t_struct$_Order_$2020_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_struct$_Order_$2020_memory_ptr_to_t_struct$_Order_$2020_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256t_addresst_uint96t_addresst_uint96t_addresst_uint96t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 320) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 288))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value9, value10 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint96t_addresst_uint256t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 192))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: treasury address alread\")\n\n        mstore(add(memPtr, 32), \"y set\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: aggregator address alre\")\n\n        mstore(add(memPtr, 32), \"ady set\")\n\n    }\n\n    function abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnlyAggregator\")\n\n    }\n\n    function abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"OrderFulfilled\")\n\n    }\n\n    function abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"OrderRefunded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de(memPtr) {\n\n        mstore(add(memPtr, 0), \"FeeExceedsProtocolFee\")\n\n    }\n\n    function abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86(memPtr) {\n\n        mstore(add(memPtr, 0), \"OrderNotFulfilled\")\n\n    }\n\n    function abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"AmountIsZero\")\n\n    }\n\n    function abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07(memPtr) {\n\n        mstore(add(memPtr, 0), \"RecipientIsZeroAddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61(memPtr) {\n\n        mstore(add(memPtr, 0), \"SenderFeeRecipientIsZeroAddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_string_calldata_ptr__to_t_address_t_address_t_address_t_uint96_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"InvalidMessageHash\")\n\n    }\n\n    function abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value3, value4,  tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: invalid status\")\n\n    }\n\n    function abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function convert_t_uint64_to_t_uint96(value) -> converted {\n        converted := cleanup_t_uint96(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenNotSupported\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7(memPtr) {\n\n        mstore(add(memPtr, 0), \"ThrowZeroAddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"InvalidSenderFeeRecipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101215760003560e01c806379ec5809116100ad578063b810c63611610071578063b810c636146102bc578063cd992400146102db578063e30c3978146102f7578063f22ee70414610315578063f2fde38b1461034557610121565b806379ec58091461022a578063809804f71461025a5780638129fc1c1461028a5780638456cb59146102945780638da5cb5b1461029e57610121565b8063715018a6116100f4578063715018a61461018657806371eedb881461019057806375151b63146101c0578063768c6ec0146101f057806379ba50971461022057610121565b80633f4ba83a1461012657806340ebc6771461013057806347094e2e1461014c5780635c975abb14610168575b600080fd5b61012e610361565b005b61014a60048036038101906101459190612bb0565b610373565b005b61016660048036038101906101619190612c30565b61063b565b005b6101706106a6565b60405161017d9190612c78565b60405180910390f35b61018e6106bd565b005b6101aa60048036038101906101a59190612cc9565b6106d1565b6040516101b79190612c78565b60405180910390f35b6101da60048036038101906101d59190612d09565b610b4f565b6040516101e79190612c78565b60405180910390f35b61020a60048036038101906102059190612d36565b610bab565b6040516102179190612e83565b60405180910390f35b610228610dc3565b005b610244600480360381019061023f9190612f30565b610e50565b6040516102519190612c78565b60405180910390f35b610274600480360381019061026f9190613030565b6114b1565b6040516102819190613101565b60405180910390f35b6102926119b0565b005b61029c611b00565b005b6102a6611b12565b6040516102b3919061312b565b60405180910390f35b6102c4611b3c565b6040516102d2929190613164565b60405180910390f35b6102f560048036038101906102f0919061318d565b611b61565b005b6102ff611ce6565b60405161030c919061312b565b60405180910390f35b61032f600480360381019061032a91906131e0565b611d10565b60405161033c9190612c78565b60405180910390f35b61035f600480360381019061035a9190612d09565b61237d565b005b61036961242a565b6103716124a8565b565b61037b61242a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e1906132a4565b60405180910390fd5b60007f747265617375727900000000000000000000000000000000000000000000000083036104ed578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90613336565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506105eb565b7f61676772656761746f720000000000000000000000000000000000000000000083036105ea578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b906133c8565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610636578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b61064361242a565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b8160405161069b91906133e8565b60405180910390a150565b600060cd60009054906101000a900460ff16905090565b6106c561242a565b6106cf600061250b565b565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075a9061344f565b60405180910390fd5b60ff600083815260200190815260200160002060050160009054906101000a900460ff16156107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be906134bb565b60405180910390fd5b60ff600083815260200190815260200160002060050160019054906101000a900460ff161561082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290613527565b60405180910390fd5b8260ff6000848152602001908152602001600020600401541015610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b90613593565b60405180910390fd5b60008311156109655760ff600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b81526004016109209291906135b3565b6020604051808303816000875af115801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190613608565b505b600160ff600084815260200190815260200160002060050160016101000a81548160ff021916908315150217905550600060ff600084815260200190815260200160002060060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060008360ff6000858152602001908152602001600020600701546109fe9190613664565b905060ff600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60ff600086815260200190815260200160002060050160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff60008781526020019081526020016000206003015484610aab9190613698565b6040518363ffffffff1660e01b8152600401610ac89291906135b3565b6020604051808303816000875af1158015610ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0b9190613608565b50827f0736fe428e1747ca8d387c2e6fa1a31a0cde62d3a167c40a46ade59a3cdc828e85604051610b3c91906136cc565b60405180910390a2600191505092915050565b60006001609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610ba15760019050610ba6565b600090505b919050565b610bb3612a55565b60ff6000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020016007820154815250509050919050565b6000610dcd61253c565b90508073ffffffffffffffffffffffffffffffffffffffff16610dee611ce6565b73ffffffffffffffffffffffffffffffffffffffff1614610e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3b90613759565b60405180910390fd5b610e4d8161250b565b50565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed99061344f565b60405180910390fd5b60ff60008d815260200190815260200160002060050160009054906101000a900460ff1615610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3d906137c5565b60405180910390fd5b60008a11610f89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8090613831565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef9061389d565b60405180910390fd5b60008a90506000896bffffffffffffffffffffffff161461117057600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1603611082576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107990613909565b60405180910390fd5b886bffffffffffffffffffffffff168161109c9190613664565b90508b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8b8b6040518363ffffffff1660e01b81526004016110d9929190613964565b6020604051808303816000875af11580156110f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111c9190613608565b50886bffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b6000876bffffffffffffffffffffffff161115611229578b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16896040518363ffffffff1660e01b81526004016111e4929190613964565b6020604051808303816000875af1158015611203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112279190613608565b505b8b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87836040518363ffffffff1660e01b81526004016112649291906135b3565b6020604051808303816000875af1158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a79190613608565b508560ff60008f815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b60ff60008f815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508960ff60008f815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550886bffffffffffffffffffffffff1660ff60008f815260200190815260200160002060030181905550866bffffffffffffffffffffffff1660ff60008f815260200190815260200160002060040181905550600160ff60008f815260200190815260200160002060050160006101000a81548160ff0219169083151502179055508060ff60008f8152602001908152602001600020600701819055508573ffffffffffffffffffffffffffffffffffffffff168b8e7f8658aa8a4a6ef641d1fd3b5bb33205d173a5404ab1f7cd1a81d2828f94b8bf028f8e8d8b8b8b604051611495969594939291906139e9565b60405180910390a460019150509b9a5050505050505050505050565b60006114bb612544565b6114c8898986898961258e565b6000838390500361150e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150590613a91565b60405180910390fd5b8873ffffffffffffffffffffffffffffffffffffffff166323b872dd3330888c6115389190613698565b6040518463ffffffff1660e01b815260040161155693929190613ab1565b6020604051808303816000875af1158015611575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115999190613608565b5061010060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906115eb90613ae8565b91905055503361010060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516020016116439291906135b3565b6040516020818303038152906040528051906020012090506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff168a61168c9190613b30565b6116969190613ba1565b90506040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018281526020016000151581526020016000151581526020018673ffffffffffffffffffffffffffffffffffffffff16815260200160975467ffffffffffffffff166bffffffffffffffffffffffff1681526020018a81525060ff600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550610120820151816007015590505060ff6000838152602001908152602001600020600701548a73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f40ccd1ceb111a3c186ef9911e1b876dc1f789ed331b86097b3b8851055b6a13784868d8a8a60405161199b959493929190613bd2565b60405180910390a45098975050505050505050565b60008060019054906101000a900460ff161590508080156119e15750600160008054906101000a900460ff1660ff16105b80611a0e57506119f030612741565b158015611a0d5750600160008054906101000a900460ff1660ff16145b5b611a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4490613c92565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611a8a576001600060016101000a81548160ff0219169083151502179055505b620186a0609781905550611a9c612764565b611aa46127bd565b8015611afd5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051611af49190613cfa565b60405180910390a15b50565b611b0861242a565b611b10612816565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080609860009054906101000a900467ffffffffffffffff16609754915091509091565b611b6961242a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bcf906132a4565b60405180910390fd5b6001811480611be75750600281145b611c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1d90613d61565b60405180910390fd5b7f746f6b656e0000000000000000000000000000000000000000000000000000008303611ce15780609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c83604051611cd891906136cc565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611da2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d999061344f565b60405180910390fd5b60ff600085815260200190815260200160002060050160009054906101000a900460ff1615611e06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dfd906134bb565b60405180910390fd5b60ff600085815260200190815260200160002060050160019054906101000a900460ff1615611e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6190613527565b60405180910390fd5b600060ff600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508267ffffffffffffffff1660ff600087815260200190815260200160002060060160008282829054906101000a90046bffffffffffffffffffffffff16611eec9190613d81565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600060ff600087815260200190815260200160002060060160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff160361213e57600160ff600087815260200190815260200160002060050160006101000a81548160ff021916908315150217905550600060ff6000878152602001908152602001600020600301541461213d5760ff600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60ff600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff6000898152602001908152602001600020600301546040518363ffffffff1660e01b81526004016120689291906135b3565b6020604051808303816000875af1158015612087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ab9190613608565b5060ff60008681526020019081526020016000206003015460ff600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b5b60006097548467ffffffffffffffff1660ff60008981526020019081526020016000206007015461216f9190613b30565b6121799190613ba1565b90508060ff600088815260200190815260200160002060070160008282546121a19190613664565b925050819055506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff16836121d99190613b30565b6121e39190613ba1565b905080826121f19190613664565b9150600081111561229e578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016122599291906135b3565b6020604051808303816000875af1158015612278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229c9190613608565b505b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87846040518363ffffffff1660e01b81526004016122d99291906135b3565b6020604051808303816000875af11580156122f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231c9190613608565b508573ffffffffffffffffffffffffffffffffffffffff16877f98ece21e01a01cbe1d1c0dad3b053c8fbd368f99be78be958fcf1d1d13fd249a8a88604051612366929190613df2565b60405180910390a360019350505050949350505050565b61238561242a565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166123e5611b12565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61243261253c565b73ffffffffffffffffffffffffffffffffffffffff16612450611b12565b73ffffffffffffffffffffffffffffffffffffffff16146124a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249d90613e67565b60405180910390fd5b565b6124b0612879565b600060cd60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6124f461253c565b604051612501919061312b565b60405180910390a1565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055612539816128c2565b50565b600033905090565b61254c6106a6565b1561258c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161258390613ed3565b60405180910390fd5b565b6001609a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161260790613f3f565b60405180910390fd5b60008403612653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161264a90613831565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036126c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126b990613fab565b60405180910390fd5b6000811461273a57600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273090614017565b60405180910390fd5b5b5050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166127b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127aa906140a9565b60405180910390fd5b6127bb612988565b565b600060019054906101000a900460ff1661280c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612803906140a9565b60405180910390fd5b6128146129e9565b565b61281e612544565b600160cd60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861286261253c565b60405161286f919061312b565b60405180910390a1565b6128816106a6565b6128c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b790614115565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff166129d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129ce906140a9565b60405180910390fd5b6129e76129e261253c565b61250b565b565b600060019054906101000a900460ff16612a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a2f906140a9565b60405180910390fd5b600060cd60006101000a81548160ff021916908315150217905550565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600081525090565b600080fd5b600080fd5b6000819050919050565b612b2f81612b1c565b8114612b3a57600080fd5b50565b600081359050612b4c81612b26565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b7d82612b52565b9050919050565b612b8d81612b72565b8114612b9857600080fd5b50565b600081359050612baa81612b84565b92915050565b60008060408385031215612bc757612bc6612b12565b5b6000612bd585828601612b3d565b9250506020612be685828601612b9b565b9150509250929050565b600067ffffffffffffffff82169050919050565b612c0d81612bf0565b8114612c1857600080fd5b50565b600081359050612c2a81612c04565b92915050565b600060208284031215612c4657612c45612b12565b5b6000612c5484828501612c1b565b91505092915050565b60008115159050919050565b612c7281612c5d565b82525050565b6000602082019050612c8d6000830184612c69565b92915050565b6000819050919050565b612ca681612c93565b8114612cb157600080fd5b50565b600081359050612cc381612c9d565b92915050565b60008060408385031215612ce057612cdf612b12565b5b6000612cee85828601612cb4565b9250506020612cff85828601612b3d565b9150509250929050565b600060208284031215612d1f57612d1e612b12565b5b6000612d2d84828501612b9b565b91505092915050565b600060208284031215612d4c57612d4b612b12565b5b6000612d5a84828501612b3d565b91505092915050565b612d6c81612b72565b82525050565b612d7b81612c93565b82525050565b612d8a81612c5d565b82525050565b60006bffffffffffffffffffffffff82169050919050565b612db181612d90565b82525050565b61014082016000820151612dce6000850182612d63565b506020820151612de16020850182612d63565b506040820151612df46040850182612d63565b506060820151612e076060850182612d72565b506080820151612e1a6080850182612d72565b5060a0820151612e2d60a0850182612d81565b5060c0820151612e4060c0850182612d81565b5060e0820151612e5360e0850182612d63565b50610100820151612e68610100850182612da8565b50610120820151612e7d610120850182612d72565b50505050565b600061014082019050612e996000830184612db7565b92915050565b612ea881612d90565b8114612eb357600080fd5b50565b600081359050612ec581612e9f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612ef057612eef612ecb565b5b8235905067ffffffffffffffff811115612f0d57612f0c612ed0565b5b602083019150836001820283011115612f2957612f28612ed5565b5b9250929050565b60008060008060008060008060008060006101408c8e031215612f5657612f55612b12565b5b6000612f648e828f01612b3d565b9b50506020612f758e828f01612b9b565b9a50506040612f868e828f01612cb4565b9950506060612f978e828f01612b9b565b9850506080612fa88e828f01612eb6565b97505060a0612fb98e828f01612b9b565b96505060c0612fca8e828f01612eb6565b95505060e0612fdb8e828f01612b9b565b945050610100612fed8e828f01612eb6565b9350506101208c013567ffffffffffffffff81111561300f5761300e612b17565b5b61301b8e828f01612eda565b92509250509295989b509295989b9093969950565b60008060008060008060008060e0898b0312156130505761304f612b12565b5b600061305e8b828c01612b9b565b985050602061306f8b828c01612cb4565b97505060406130808b828c01612eb6565b96505060606130918b828c01612b9b565b95505060806130a28b828c01612cb4565b94505060a06130b38b828c01612b9b565b93505060c089013567ffffffffffffffff8111156130d4576130d3612b17565b5b6130e08b828c01612eda565b92509250509295985092959890939650565b6130fb81612b1c565b82525050565b600060208201905061311660008301846130f2565b92915050565b61312581612b72565b82525050565b6000602082019050613140600083018461311c565b92915050565b61314f81612bf0565b82525050565b61315e81612c93565b82525050565b60006040820190506131796000830185613146565b6131866020830184613155565b9392505050565b6000806000606084860312156131a6576131a5612b12565b5b60006131b486828701612b3d565b93505060206131c586828701612b9b565b92505060406131d686828701612cb4565b9150509250925092565b600080600080608085870312156131fa576131f9612b12565b5b600061320887828801612b3d565b945050602061321987828801612b3d565b935050604061322a87828801612b9b565b925050606061323b87828801612c1b565b91505092959194509250565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b600061328e601583613247565b915061329982613258565b602082019050919050565b600060208201905081810360008301526132bd81613281565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b6000613320602583613247565b915061332b826132c4565b604082019050919050565b6000602082019050818103600083015261334f81613313565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b60006133b2602783613247565b91506133bd82613356565b604082019050919050565b600060208201905081810360008301526133e1816133a5565b9050919050565b60006020820190506133fd6000830184613146565b92915050565b7f4f6e6c7941676772656761746f72000000000000000000000000000000000000600082015250565b6000613439600e83613247565b915061344482613403565b602082019050919050565b600060208201905081810360008301526134688161342c565b9050919050565b7f4f7264657246756c66696c6c6564000000000000000000000000000000000000600082015250565b60006134a5600e83613247565b91506134b08261346f565b602082019050919050565b600060208201905081810360008301526134d481613498565b9050919050565b7f4f72646572526566756e64656400000000000000000000000000000000000000600082015250565b6000613511600d83613247565b915061351c826134db565b602082019050919050565b6000602082019050818103600083015261354081613504565b9050919050565b7f4665654578636565647350726f746f636f6c4665650000000000000000000000600082015250565b600061357d601583613247565b915061358882613547565b602082019050919050565b600060208201905081810360008301526135ac81613570565b9050919050565b60006040820190506135c8600083018561311c565b6135d56020830184613155565b9392505050565b6135e581612c5d565b81146135f057600080fd5b50565b600081519050613602816135dc565b92915050565b60006020828403121561361e5761361d612b12565b5b600061362c848285016135f3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061366f82612c93565b915061367a83612c93565b925082820390508181111561369257613691613635565b5b92915050565b60006136a382612c93565b91506136ae83612c93565b92508282019050808211156136c6576136c5613635565b5b92915050565b60006020820190506136e16000830184613155565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000613743602983613247565b915061374e826136e7565b604082019050919050565b6000602082019050818103600083015261377281613736565b9050919050565b7f4f726465724e6f7446756c66696c6c6564000000000000000000000000000000600082015250565b60006137af601183613247565b91506137ba82613779565b602082019050919050565b600060208201905081810360008301526137de816137a2565b9050919050565b7f416d6f756e7449735a65726f0000000000000000000000000000000000000000600082015250565b600061381b600c83613247565b9150613826826137e5565b602082019050919050565b6000602082019050818103600083015261384a8161380e565b9050919050565b7f526563697069656e7449735a65726f4164647265737300000000000000000000600082015250565b6000613887601683613247565b915061389282613851565b602082019050919050565b600060208201905081810360008301526138b68161387a565b9050919050565b7f53656e646572466565526563697069656e7449735a65726f4164647265737300600082015250565b60006138f3601f83613247565b91506138fe826138bd565b602082019050919050565b60006020820190508181036000830152613922816138e6565b9050919050565b6000819050919050565b600061394e61394961394484612d90565b613929565b612c93565b9050919050565b61395e81613933565b82525050565b6000604082019050613979600083018561311c565b6139866020830184613955565b9392505050565b61399681612d90565b82525050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006139c88385613247565b93506139d583858461399c565b6139de836139ab565b840190509392505050565b600060a0820190506139fe600083018961311c565b613a0b602083018861311c565b613a18604083018761311c565b613a25606083018661398d565b8181036080830152613a388184866139bc565b9050979650505050505050565b7f496e76616c69644d657373616765486173680000000000000000000000000000600082015250565b6000613a7b601283613247565b9150613a8682613a45565b602082019050919050565b60006020820190508181036000830152613aaa81613a6e565b9050919050565b6000606082019050613ac6600083018661311c565b613ad3602083018561311c565b613ae06040830184613155565b949350505050565b6000613af382612c93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613b2557613b24613635565b5b600182019050919050565b6000613b3b82612c93565b9150613b4683612c93565b9250828202613b5481612c93565b91508282048414831517613b6b57613b6a613635565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613bac82612c93565b9150613bb783612c93565b925082613bc757613bc6613b72565b5b828204905092915050565b6000608082019050613be76000830188613155565b613bf460208301876130f2565b613c016040830186613955565b8181036060830152613c148184866139bc565b90509695505050505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613c7c602e83613247565b9150613c8782613c20565b604082019050919050565b60006020820190508181036000830152613cab81613c6f565b9050919050565b6000819050919050565b600060ff82169050919050565b6000613ce4613cdf613cda84613cb2565b613929565b613cbc565b9050919050565b613cf481613cc9565b82525050565b6000602082019050613d0f6000830184613ceb565b92915050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b6000613d4b601783613247565b9150613d5682613d15565b602082019050919050565b60006020820190508181036000830152613d7a81613d3e565b9050919050565b6000613d8c82612d90565b9150613d9783612d90565b925082820390506bffffffffffffffffffffffff811115613dbb57613dba613635565b5b92915050565b6000613ddc613dd7613dd284612bf0565b613929565b612d90565b9050919050565b613dec81613dc1565b82525050565b6000604082019050613e0760008301856130f2565b613e146020830184613de3565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613e51602083613247565b9150613e5c82613e1b565b602082019050919050565b60006020820190508181036000830152613e8081613e44565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613ebd601083613247565b9150613ec882613e87565b602082019050919050565b60006020820190508181036000830152613eec81613eb0565b9050919050565b7f546f6b656e4e6f74537570706f72746564000000000000000000000000000000600082015250565b6000613f29601183613247565b9150613f3482613ef3565b602082019050919050565b60006020820190508181036000830152613f5881613f1c565b9050919050565b7f5468726f775a65726f4164647265737300000000000000000000000000000000600082015250565b6000613f95601083613247565b9150613fa082613f5f565b602082019050919050565b60006020820190508181036000830152613fc481613f88565b9050919050565b7f496e76616c696453656e646572466565526563697069656e7400000000000000600082015250565b6000614001601983613247565b915061400c82613fcb565b602082019050919050565b6000602082019050818103600083015261403081613ff4565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000614093602b83613247565b915061409e82614037565b604082019050919050565b600060208201905081810360008301526140c281614086565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006140ff601483613247565b915061410a826140c9565b602082019050919050565b6000602082019050818103600083015261412e816140f2565b905091905056fea26469706673582212205175adabb80fc697577424a466888e0a017043c5a1e54056637096b25deffed964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79EC5809 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB810C636 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB810C636 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF22EE704 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x79EC5809 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x809804F7 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x71EEDB88 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x75151B63 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x768C6EC0 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x220 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x168 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x361 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0xDC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x19B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH2 0x1B00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x1B3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0x3164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x318D JUMP JUMPDEST PUSH2 0x1B61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FF PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH2 0x237D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x369 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x371 PUSH2 0x24A8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x37B PUSH2 0x242A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP1 PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x4ED JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x5EB JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x5EA JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59B SWAP1 PUSH2 0x33C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x636 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x643 PUSH2 0x242A JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x33E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x0 PUSH2 0x250B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x763 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75A SWAP1 PUSH2 0x344F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP1 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x822 SWAP1 PUSH2 0x3527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP1 PUSH2 0x3593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x965 JUMPI PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x920 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0x3664 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x3698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP DUP3 PUSH32 0x736FE428E1747CA8D387C2E6FA1A31A0CDE62D3A167C40A46ADE59A3CDC828E DUP6 PUSH1 0x40 MLOAD PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xBA1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCD PUSH2 0x253C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDEE PUSH2 0x1CE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3B SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0x250B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED9 SWAP1 PUSH2 0x344F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3D SWAP1 PUSH2 0x37C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF80 SWAP1 PUSH2 0x3831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEF SWAP1 PUSH2 0x389D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 SWAP1 POP PUSH1 0x0 DUP10 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1170 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP1 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x3664 JUMP JUMPDEST SWAP1 POP DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP12 DUP12 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP3 SWAP2 SWAP1 PUSH2 0x3964 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111C SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 DUP8 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1229 JUMPI DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E4 SWAP3 SWAP2 SWAP1 PUSH2 0x3964 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1203 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1227 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP DUP6 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 DUP15 PUSH32 0x8658AA8A4A6EF641D1FD3B5BB33205D173A5404AB1F7CD1A81D2828F94B8BF02 DUP16 DUP15 DUP14 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x1495 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB PUSH2 0x2544 JUMP JUMPDEST PUSH2 0x14C8 DUP10 DUP10 DUP7 DUP10 DUP10 PUSH2 0x258E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x150E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1505 SWAP1 PUSH2 0x3A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP13 PUSH2 0x1538 SWAP2 SWAP1 PUSH2 0x3698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1556 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AB1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1599 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15EB SWAP1 PUSH2 0x3AE8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH2 0x100 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1643 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x168C SWAP2 SWAP1 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x1696 SWAP2 SWAP1 PUSH2 0x3BA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x97 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE POP PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40CCD1CEB111A3C186EF9911E1B876DC1F789ED331B86097B3B8851055B6A137 DUP5 DUP7 DUP14 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x199B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x19E1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1A0E JUMPI POP PUSH2 0x19F0 ADDRESS PUSH2 0x2741 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1A0D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1A4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A44 SWAP1 PUSH2 0x3C92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A8A JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH3 0x186A0 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x1A9C PUSH2 0x2764 JUMP JUMPDEST PUSH2 0x1AA4 PUSH2 0x27BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AFD JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1AF4 SWAP2 SWAP1 PUSH2 0x3CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B08 PUSH2 0x242A JUMP JUMPDEST PUSH2 0x1B10 PUSH2 0x2816 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x97 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1B69 PUSH2 0x242A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCF SWAP1 PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x1BE7 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x1C26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1D SWAP1 PUSH2 0x3D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x1CE1 JUMPI DUP1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CD8 SWAP2 SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D99 SWAP1 PUSH2 0x344F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFD SWAP1 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E61 SWAP1 PUSH2 0x3527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP2 SWAP1 PUSH2 0x3D81 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x213E JUMPI PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x213D JUMPI PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xFF PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2068 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2087 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20AB SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x216F SWAP2 SWAP1 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x2179 SWAP2 SWAP1 PUSH2 0x3BA1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x21A1 SWAP2 SWAP1 PUSH2 0x3664 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x21D9 SWAP2 SWAP1 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x21E3 SWAP2 SWAP1 PUSH2 0x3BA1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x21F1 SWAP2 SWAP1 PUSH2 0x3664 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x229E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2259 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229C SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D9 SWAP3 SWAP2 SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x231C SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH32 0x98ECE21E01A01CBE1D1C0DAD3B053C8FBD368F99BE78BE958FCF1D1D13FD249A DUP11 DUP9 PUSH1 0x40 MLOAD PUSH2 0x2366 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2385 PUSH2 0x242A JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23E5 PUSH2 0x1B12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x2432 PUSH2 0x253C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2450 PUSH2 0x1B12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249D SWAP1 PUSH2 0x3E67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x24B0 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x24F4 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2501 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x2539 DUP2 PUSH2 0x28C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x254C PUSH2 0x6A6 JUMP JUMPDEST ISZERO PUSH2 0x258C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2583 SWAP1 PUSH2 0x3ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9A PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2607 SWAP1 PUSH2 0x3F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SUB PUSH2 0x2653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x264A SWAP1 PUSH2 0x3831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B9 SWAP1 PUSH2 0x3FAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x273A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2739 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2730 SWAP1 PUSH2 0x4017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27AA SWAP1 PUSH2 0x40A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27BB PUSH2 0x2988 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x280C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2803 SWAP1 PUSH2 0x40A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2814 PUSH2 0x29E9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x281E PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2862 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286F SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2881 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x28C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28B7 SWAP1 PUSH2 0x4115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x29D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29CE SWAP1 PUSH2 0x40A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29E7 PUSH2 0x29E2 PUSH2 0x253C JUMP JUMPDEST PUSH2 0x250B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A2F SWAP1 PUSH2 0x40A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B2F DUP2 PUSH2 0x2B1C JUMP JUMPDEST DUP2 EQ PUSH2 0x2B3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B4C DUP2 PUSH2 0x2B26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B7D DUP3 PUSH2 0x2B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B8D DUP2 PUSH2 0x2B72 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BAA DUP2 PUSH2 0x2B84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BC7 JUMPI PUSH2 0x2BC6 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD5 DUP6 DUP3 DUP7 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BE6 DUP6 DUP3 DUP7 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C0D DUP2 PUSH2 0x2BF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C2A DUP2 PUSH2 0x2C04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C46 JUMPI PUSH2 0x2C45 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C54 DUP5 DUP3 DUP6 ADD PUSH2 0x2C1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C72 DUP2 PUSH2 0x2C5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C8D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CA6 DUP2 PUSH2 0x2C93 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CC3 DUP2 PUSH2 0x2C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE0 JUMPI PUSH2 0x2CDF PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CEE DUP6 DUP3 DUP7 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CFF DUP6 DUP3 DUP7 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1F JUMPI PUSH2 0x2D1E PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D2D DUP5 DUP3 DUP6 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4C JUMPI PUSH2 0x2D4B PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D5A DUP5 DUP3 DUP6 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D6C DUP2 PUSH2 0x2B72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D7B DUP2 PUSH2 0x2C93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D8A DUP2 PUSH2 0x2C5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB1 DUP2 PUSH2 0x2D90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2DCE PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2D63 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2DE1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2D63 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2DF4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2D63 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2E07 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2D72 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2E1A PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2D72 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2E2D PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2D81 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2E40 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2D81 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2E53 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2D63 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2E68 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2DA8 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2E7D PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2D72 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x2E99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EA8 DUP2 PUSH2 0x2D90 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC5 DUP2 PUSH2 0x2E9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2EF0 JUMPI PUSH2 0x2EEF PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F0D JUMPI PUSH2 0x2F0C PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2F29 JUMPI PUSH2 0x2F28 PUSH2 0x2ED5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x140 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x2F56 JUMPI PUSH2 0x2F55 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F64 DUP15 DUP3 DUP16 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH2 0x2F75 DUP15 DUP3 DUP16 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH2 0x2F86 DUP15 DUP3 DUP16 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH2 0x2F97 DUP15 DUP3 DUP16 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH2 0x2FA8 DUP15 DUP3 DUP16 ADD PUSH2 0x2EB6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH2 0x2FB9 DUP15 DUP3 DUP16 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 PUSH2 0x2FCA DUP15 DUP3 DUP16 ADD PUSH2 0x2EB6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 PUSH2 0x2FDB DUP15 DUP3 DUP16 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP5 POP POP PUSH2 0x100 PUSH2 0x2FED DUP15 DUP3 DUP16 ADD PUSH2 0x2EB6 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x120 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x300F JUMPI PUSH2 0x300E PUSH2 0x2B17 JUMP JUMPDEST JUMPDEST PUSH2 0x301B DUP15 DUP3 DUP16 ADD PUSH2 0x2EDA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3050 JUMPI PUSH2 0x304F PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x305E DUP12 DUP3 DUP13 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x306F DUP12 DUP3 DUP13 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x3080 DUP12 DUP3 DUP13 ADD PUSH2 0x2EB6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x3091 DUP12 DUP3 DUP13 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x30A2 DUP12 DUP3 DUP13 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x30B3 DUP12 DUP3 DUP13 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D4 JUMPI PUSH2 0x30D3 PUSH2 0x2B17 JUMP JUMPDEST JUMPDEST PUSH2 0x30E0 DUP12 DUP3 DUP13 ADD PUSH2 0x2EDA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x30FB DUP2 PUSH2 0x2B1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3116 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3125 DUP2 PUSH2 0x2B72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3140 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x314F DUP2 PUSH2 0x2BF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x315E DUP2 PUSH2 0x2C93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3179 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3146 JUMP JUMPDEST PUSH2 0x3186 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31A6 JUMPI PUSH2 0x31A5 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31B4 DUP7 DUP3 DUP8 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31C5 DUP7 DUP3 DUP8 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31D6 DUP7 DUP3 DUP8 ADD PUSH2 0x2CB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31FA JUMPI PUSH2 0x31F9 PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3208 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3219 DUP8 DUP3 DUP9 ADD PUSH2 0x2B3D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x322A DUP8 DUP3 DUP9 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x323B DUP8 DUP3 DUP9 ADD PUSH2 0x2C1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328E PUSH1 0x15 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3299 DUP3 PUSH2 0x3258 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32BD DUP2 PUSH2 0x3281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3320 PUSH1 0x25 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x332B DUP3 PUSH2 0x32C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x334F DUP2 PUSH2 0x3313 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B2 PUSH1 0x27 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x33BD DUP3 PUSH2 0x3356 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33E1 DUP2 PUSH2 0x33A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7941676772656761746F72000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3439 PUSH1 0xE DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3444 DUP3 PUSH2 0x3403 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3468 DUP2 PUSH2 0x342C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F7264657246756C66696C6C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A5 PUSH1 0xE DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x34B0 DUP3 PUSH2 0x346F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34D4 DUP2 PUSH2 0x3498 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F72646572526566756E64656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3511 PUSH1 0xD DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x351C DUP3 PUSH2 0x34DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3540 DUP2 PUSH2 0x3504 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665654578636565647350726F746F636F6C4665650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357D PUSH1 0x15 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3588 DUP3 PUSH2 0x3547 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35AC DUP2 PUSH2 0x3570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35C8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x35D5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x35E5 DUP2 PUSH2 0x2C5D JUMP JUMPDEST DUP2 EQ PUSH2 0x35F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3602 DUP2 PUSH2 0x35DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x361E JUMPI PUSH2 0x361D PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x362C DUP5 DUP3 DUP6 ADD PUSH2 0x35F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x366F DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x367A DUP4 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3692 JUMPI PUSH2 0x3691 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A3 DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x36AE DUP4 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x36C6 JUMPI PUSH2 0x36C5 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3743 PUSH1 0x29 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x374E DUP3 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3772 DUP2 PUSH2 0x3736 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465724E6F7446756C66696C6C6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37AF PUSH1 0x11 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x37BA DUP3 PUSH2 0x3779 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37DE DUP2 PUSH2 0x37A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7449735A65726F0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381B PUSH1 0xC DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3826 DUP3 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x384A DUP2 PUSH2 0x380E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E7449735A65726F4164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3887 PUSH1 0x16 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3892 DUP3 PUSH2 0x3851 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38B6 DUP2 PUSH2 0x387A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572466565526563697069656E7449735A65726F4164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F3 PUSH1 0x1F DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x38FE DUP3 PUSH2 0x38BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3922 DUP2 PUSH2 0x38E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x394E PUSH2 0x3949 PUSH2 0x3944 DUP5 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0x3929 JUMP JUMPDEST PUSH2 0x2C93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x395E DUP2 PUSH2 0x3933 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3979 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3986 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3955 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3996 DUP2 PUSH2 0x2D90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C8 DUP4 DUP6 PUSH2 0x3247 JUMP JUMPDEST SWAP4 POP PUSH2 0x39D5 DUP4 DUP6 DUP5 PUSH2 0x399C JUMP JUMPDEST PUSH2 0x39DE DUP4 PUSH2 0x39AB JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x39FE PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3A0B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3A18 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3A25 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x398D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3A38 DUP2 DUP5 DUP7 PUSH2 0x39BC JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C69644D657373616765486173680000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A7B PUSH1 0x12 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A86 DUP3 PUSH2 0x3A45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AAA DUP2 PUSH2 0x3A6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3AC6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3AD3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x311C JUMP JUMPDEST PUSH2 0x3AE0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF3 DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3B25 JUMPI PUSH2 0x3B24 PUSH2 0x3635 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3B DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B46 DUP4 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3B54 DUP2 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3B6B JUMPI PUSH2 0x3B6A PUSH2 0x3635 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BAC DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BB7 DUP4 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3BC7 JUMPI PUSH2 0x3BC6 PUSH2 0x3B72 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3BE7 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3155 JUMP JUMPDEST PUSH2 0x3BF4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x30F2 JUMP JUMPDEST PUSH2 0x3C01 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3955 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C14 DUP2 DUP5 DUP7 PUSH2 0x39BC JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7C PUSH1 0x2E DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C87 DUP3 PUSH2 0x3C20 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CAB DUP2 PUSH2 0x3C6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE4 PUSH2 0x3CDF PUSH2 0x3CDA DUP5 PUSH2 0x3CB2 JUMP JUMPDEST PUSH2 0x3929 JUMP JUMPDEST PUSH2 0x3CBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CF4 DUP2 PUSH2 0x3CC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4B PUSH1 0x17 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D56 DUP3 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D7A DUP2 PUSH2 0x3D3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8C DUP3 PUSH2 0x2D90 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D97 DUP4 PUSH2 0x2D90 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DBB JUMPI PUSH2 0x3DBA PUSH2 0x3635 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DDC PUSH2 0x3DD7 PUSH2 0x3DD2 DUP5 PUSH2 0x2BF0 JUMP JUMPDEST PUSH2 0x3929 JUMP JUMPDEST PUSH2 0x2D90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DEC DUP2 PUSH2 0x3DC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E07 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30F2 JUMP JUMPDEST PUSH2 0x3E14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3DE3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E51 PUSH1 0x20 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E5C DUP3 PUSH2 0x3E1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E80 DUP2 PUSH2 0x3E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EBD PUSH1 0x10 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC8 DUP3 PUSH2 0x3E87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EEC DUP2 PUSH2 0x3EB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E4E6F74537570706F72746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F29 PUSH1 0x11 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F34 DUP3 PUSH2 0x3EF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F58 DUP2 PUSH2 0x3F1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726F775A65726F4164647265737300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F95 PUSH1 0x10 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA0 DUP3 PUSH2 0x3F5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FC4 DUP2 PUSH2 0x3F88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696453656E646572466565526563697069656E7400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4001 PUSH1 0x19 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x400C DUP3 PUSH2 0x3FCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4030 DUP2 PUSH2 0x3FF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4093 PUSH1 0x2B DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x409E DUP3 PUSH2 0x4037 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40C2 DUP2 PUSH2 0x4086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40FF PUSH1 0x14 DUP4 PUSH2 0x3247 JUMP JUMPDEST SWAP2 POP PUSH2 0x410A DUP3 PUSH2 0x40C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x412E DUP2 PUSH2 0x40F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH22 0xADABB80FC697577424A466888E0A017043C5A1E54056 PUSH4 0x7096B25D 0xEF INVALID 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"390:8510:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:56;;;:::i;:::-;;2293:551:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1894:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1879:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:101:1;;;:::i;:::-;;5704:920:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8601:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8445:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2031:212:0;;;:::i;:::-;;6674:1538:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1709:1324;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;795:114;;;:::i;:::-;;1325:52;;;:::i;:::-;;1462:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8789:109:7;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1426:335:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1144:99:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4090:1575:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1436:178:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1421:56:7;1355:13:1;:11;:13::i;:::-;1463:10:7::1;:8;:10::i;:::-;1421:56::o:0;2293:551:8:-;1355:13:1;:11;:13::i;:::-;2401:1:8::1;2384:19;;:5;:19;;::::0;2376:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2433:12;2453:18;:4;:18:::0;2449:326:::1;;2505:5;2486:24;;:15;;;;;;;;;;;:24;;::::0;2478:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2575:5;2557:15;;:23;;;;;;;;;;;;;;;;;;2595:4;2585:14;;2449:326;;;2614:20;:4;:20:::0;2610:165:::1;;2671:5;2649:27;;:18;;;;;;;;;;;:27;;::::0;2641:79:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2746:5;2725:18;;:26;;;;;;;;;;;;;;;;;;2766:4;2756:14;;2610:165;2449:326;2782:7;2778:63;;;2830:5;2801:35;;2824:4;2801:35;;;;;;;;;;2778:63;2372:472;2293:551:::0;;:::o;1894:170::-;1355:13:1;:11;:13::i;:::-;1993:19:8::1;1972:18;;:40;;;;;;;;;;;;;;;;;;2021:39;2040:19;2021:39;;;;;;:::i;:::-;;;;;;;;1894:170:::0;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;5704:920:7:-;5785:4;1044:18;;;;;;;;;;;1030:32;;:10;:32;;;1022:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5855:5:::1;:15;5861:8;5855:15;;;;;;;;;;;:27;;;;;;;;;;;;5854:28;5846:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5914:5;:15;5920:8;5914:15;;;;;;;;;;;:26;;;;;;;;;;;;5913:27;5905:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;6001:4;5970:5;:15;5976:8;5970:15;;;;;;;;;;;:27;;;:35;;5962:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6047:1;6040:4;:8;6036:127;;;6104:5;:15;6110:8;6104:15;;;;;;;;;;;:21;;;;;;;;;;;;6097:38;;;6136:15;;;;;;;;;;;6153:4;6097:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6036:127;6220:4;6191:5;:15;6197:8;6191:15;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;6257:1;6228:5;:15;6234:8;6228:15;;;;;;;;;;;:26;;;:30;;;;;;;;;;;;;;;;;;6297:20;6345:4;6320:5;:15;6326:8;6320:15;;;;;;;;;;;:22;;;:29;;;;:::i;:::-;6297:52;;6426:5;:15;6432:8;6426:15;;;;;;;;;;;:21;;;;;;;;;;;;6419:38;;;6462:5;:15;6468:8;6462:15;;;;;;;;;;;:29;;;;;;;;;;;;6511:5;:15;6517:8;6511:15;;;;;;;;;;;:25;;;6496:12;:40;;;;:::i;:::-;6419:121;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6595:8;6575:29;6589:4;6575:29;;;;;;:::i;:::-;;;;;;;;6616:4;6609:11;;;5704:920:::0;;;;:::o;8601:142::-;8666:4;8709:1;8680:17;:25;8698:6;8680:25;;;;;;;;;;;;;;;;:30;8676:47;;8719:4;8712:11;;;;8676:47;8734:5;8727:12;;8601:142;;;;:::o;8445:107::-;8508:12;;:::i;:::-;8533:5;:15;8539:8;8533:15;;;;;;;;;;;8526:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8445:107;;;:::o;2031:212:0:-;2083:14;2100:12;:10;:12::i;:::-;2083:29;;2148:6;2130:24;;:14;:12;:14::i;:::-;:24;;;2122:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2210:26;2229:6;2210:18;:26::i;:::-;2073:170;2031:212::o;6674:1538:7:-;7026:4;1044:18;;;;;;;;;;;1030:32;;:10;:32;;;1022:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;7045:5:::1;:15;7051:8;7045:15;;;;;;;;;;;:27;;;;;;;;;;;;7044:28;7036:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7116:1;7106:7;:11;7098:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;7168:1;7146:24;;:10;:24;;::::0;7138:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7202:23;7228:7;7202:33;;7257:1;7243:10;:15;;;7240:300;;7304:1;7273:33;;:19;:33;;::::0;7265:77:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7370:10;7351:29;;;;;;;:::i;:::-;;;7396:6;7389:23;;;7418:19;7443:10;7389:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7520:10;7469:66;;7495:19;7469:66;;;;;;;;;;;;7240:300;7563:1;7548:12;:16;;;7544:76;;;7573:6;7566:23;;;7590:15;;;;;;;;;;;7607:12;7566:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7544:76;7632:6;7625:23;;;7649:10;7661:15;7625:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7735:10;7710:5;:15;7716:8;7710:15;;;;;;;;;;;:22;;;:35;;;;;;;;;;;;;;;;;;7773:6;7749:5;:15;7755:8;7749:15;;;;;;;;;;;:21;;;:30;;;;;;;;;;;;;;;;;;7820:19;7783:5;:15;7789:8;7783:15;;;;;;;;;;;:34;;;:56;;;;;;;;;;;;;;;;;;7871:10;7843:38;;:5;:15;7849:8;7843:15;;;;;;;;;;;:25;;:38;;;;7915:12;7885:42;;:5;:15;7891:8;7885:15;;;;;;;;;;;:27;;:42;;;;7961:4;7931:5;:15;7937:8;7931:15;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;7994:15;7969:5;:15;7975:8;7969:15;;;;;;;;;;;:22;;:40;;;;8093:10;8046:146;;8081:7;8068:8;8046:146;8108:6;8119:19;8143:18;8166:5;8176:12;;8046:146;;;;;;;;;;;:::i;:::-;;;;;;;;8204:4;8197:11;;;6674:1538:::0;;;;;;;;;;;;;:::o;1709:1324::-;1928:15;1503:19:3;:17;:19::i;:::-;1979:74:7::1;1988:6;1996:7;2005:14;2021:19;2042:10;1979:8;:74::i;:::-;2121:1;2098:11;;2092:25;;:30:::0;2084:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2205:6;2198:27;;;2226:10;2246:4;2263:10;2253:7;:20;;;;:::i;:::-;2198:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2329:6;:18;2336:10;2329:18;;;;;;;;;;;;;;;;:20;;;;;;;;;:::i;:::-;;;;;;2434:10;2446:6;:18;2453:10;2446:18;;;;;;;;;;;;;;;;2423:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2413:53;;;;;;2403:63;;2495:20;2551:7;;2529:18;;;;;;;;;;;2519:28;;:7;:28;;;;:::i;:::-;2518:40;;;;:::i;:::-;2495:63;;2579:283;;;;;;;;2598:10;2579:283;;;;;;2620:6;2579:283;;;;;;2651:19;2579:283;;;;;;2686:10;2579:283;;;;2714:12;2579:283;;;;2744:5;2579:283;;;;;;2766:5;2579:283;;;;;;2791:14;2579:283;;;;;;2829:7;;2579:283;;;;;;;;2850:7;2579:283;;::::0;2562:5:::1;:14;2568:7;2562:14;;;;;;;;;;;:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2949:5;:14;2955:7;2949:14;;;;;;;;;;;:21;;;2938:6;2902:127;;2919:14;2902:127;;;2975:12;2992:7;3004:5;3014:11;;2902:127;;;;;;;;;;:::i;:::-;;;;;;;;1945:1088;1709:1324:::0;;;;;;;;;;:::o;795:114::-;3279:19:2;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;852:7:7::1;842;:17;;;;863:21;:19;:21::i;:::-;888:17;:15;:17::i;:::-;3651:14:2::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;795:114:7:o;1325:52::-;1355:13:1;:11;:13::i;:::-;1365:8:7::1;:6;:8::i;:::-;1325:52::o:0;1462:85:1:-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;8789:109:7:-;8837:6;8845:7;8866:18;;;;;;;;;;;8886:7;;8858:36;;;;8789:109;;:::o;1426:335:8:-;1355:13:1;:11;:13::i;:::-;1547:1:8::1;1530:19;;:5;:19;;::::0;1522:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:1;1587:6;:11;:26;;;;1612:1;1602:6;:11;1587:26;1579:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:15;:4;:15:::0;1645:113:::1;;1698:6;1671:17;:24;1689:5;1671:24;;;;;;;;;;;;;;;:33;;;;1739:5;1714:39;;1733:4;1714:39;1746:6;1714:39;;;;;;:::i;:::-;;;;;;;;1645:113;1426:335:::0;;;:::o;1144:99:0:-;1197:7;1223:13;;;;;;;;;;;1216:20;;1144:99;:::o;4090:1575:7:-;4242:4;1044:18;;;;;;;;;;;1030:32;;:10;:32;;;1022:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4312:5:::1;:15;4318:8;4312:15;;;;;;;;;;;:27;;;;;;;;;;;;4311:28;4303:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4371:5;:15;4377:8;4371:15;;;;;;;;;;;:26;;;;;;;;;;;;4370:27;4362:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4452:13;4468:5;:15;4474:8;4468:15;;;;;;;;;;;:21;;;;;;;;;;;;4452:37;;4586:14;4556:44;;:5;:15;4562:8;4556:15;;;;;;;;;;;:26;;;:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4639:1;4609:5;:15;4615:8;4609:15;;;;;;;;;;;:26;;;;;;;;;;;;:31;;::::0;4605:453:::1;;4722:4;4692:5;:15;4698:8;4692:15;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;4765:1;4736:5;:15;4742:8;4736:15;;;;;;;;;;;:25;;;:30;4732:321;;4808:5;:15;4814:8;4808:15;;;;;;;;;;;:21;;;;;;;;;;;;4801:38;;;4846:5;:15;4852:8;4846:15;;;;;;;;;;;:34;;;;;;;;;;;;4887:5;:15;4893:8;4887:15;;;;;;;;;;;:25;;;4801:117;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5016:5;:15;5022:8;5016:15;;;;;;;;;;;:25;;;4975:5;:15;4981:8;4975:15;;;;;;;;;;;:34;;;;;;;;;;;;4948:99;;;;;;;;;;;;4732:321;4605:453;5098:31;5176:7;;5158:14;5133:39;;:5;:15;5139:8;5133:15;;;;;;;;;;;:22;;;:39;;;;:::i;:::-;5132:51;;;;:::i;:::-;5098:85;;5213:23;5187:5;:15;5193:8;5187:15;;;;;;;;;;;:22;;;:49;;;;;;;:::i;:::-;;;;;;;;5241:19;5312:7;;5290:18;;;;;;;;;;;5264:44;;:23;:44;;;;:::i;:::-;5263:56;;;;:::i;:::-;5241:78;;5350:11;5323:38;;;;;:::i;:::-;;;5411:1;5397:11;:15;5393:73;;;5421:5;5414:22;;;5437:15;;;;;;;;;;;5454:11;5414:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5393:73;5478:5;5471:22;;;5494:18;5514:23;5471:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5610:18;5572:73;;5600:8;5572:73;5585:13;5630:14;5572:73;;;;;;;:::i;:::-;;;;;;;;5657:4;5650:11;;;;;4090:1575:::0;;;;;;:::o;1436:178:0:-;1355:13:1;:11;:13::i;:::-;1541:8:0::1;1525:13;;:24;;;;;;;;;;;;;;;;;;1598:8;1564:43;;1589:7;:5;:7::i;:::-;1564:43;;;;;;;;;;;;1436:178:::0;:::o;1620:130:1:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7;;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;1798:153:0:-;1887:13;;1880:20;;;;;;;;;;;1910:34;1935:8;1910:24;:34::i;:::-;1798:153;:::o;886:96:5:-;939:7;965:10;958:17;;886:96;:::o;2031:106:3:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;3426:427:7:-;3618:1;3589:17;:25;3607:6;3589:25;;;;;;;;;;;;;;;;:30;3581:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3664:1;3653:7;:12;3645:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;3720:1;3694:28;;:14;:28;;;3686:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3766:1;3752:10;:15;3748:102;;3813:1;3782:33;;:19;:33;;;3774:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3748:102;3426:427;;;;;:::o;1423:320:4:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;889:100:0:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;956:26:0::1;:24;:26::i;:::-;889:100::o:0;1084:97:3:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;2450:115::-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;;:14;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;2209:106::-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;2687:187:1:-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;1125:111::-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:32:1::1;1216:12;:10;:12::i;:::-;1197:18;:32::i;:::-;1125:111::o:0;1187:95:3:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1270:5:3::1;1260:7;;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:101::-;1713:7;1753:18;1746:5;1742:30;1731:41;;1677:101;;;:::o;1784:120::-;1856:23;1873:5;1856:23;:::i;:::-;1849:5;1846:34;1836:62;;1894:1;1891;1884:12;1836:62;1784:120;:::o;1910:137::-;1955:5;1993:6;1980:20;1971:29;;2009:32;2035:5;2009:32;:::i;:::-;1910:137;;;;:::o;2053:327::-;2111:6;2160:2;2148:9;2139:7;2135:23;2131:32;2128:119;;;2166:79;;:::i;:::-;2128:119;2286:1;2311:52;2355:7;2346:6;2335:9;2331:22;2311:52;:::i;:::-;2301:62;;2257:116;2053:327;;;;:::o;2386:90::-;2420:7;2463:5;2456:13;2449:21;2438:32;;2386:90;;;:::o;2482:109::-;2563:21;2578:5;2563:21;:::i;:::-;2558:3;2551:34;2482:109;;:::o;2597:210::-;2684:4;2722:2;2711:9;2707:18;2699:26;;2735:65;2797:1;2786:9;2782:17;2773:6;2735:65;:::i;:::-;2597:210;;;;:::o;2813:77::-;2850:7;2879:5;2868:16;;2813:77;;;:::o;2896:122::-;2969:24;2987:5;2969:24;:::i;:::-;2962:5;2959:35;2949:63;;3008:1;3005;2998:12;2949:63;2896:122;:::o;3024:139::-;3070:5;3108:6;3095:20;3086:29;;3124:33;3151:5;3124:33;:::i;:::-;3024:139;;;;:::o;3169:474::-;3237:6;3245;3294:2;3282:9;3273:7;3269:23;3265:32;3262:119;;;3300:79;;:::i;:::-;3262:119;3420:1;3445:53;3490:7;3481:6;3470:9;3466:22;3445:53;:::i;:::-;3435:63;;3391:117;3547:2;3573:53;3618:7;3609:6;3598:9;3594:22;3573:53;:::i;:::-;3563:63;;3518:118;3169:474;;;;;:::o;3649:329::-;3708:6;3757:2;3745:9;3736:7;3732:23;3728:32;3725:119;;;3763:79;;:::i;:::-;3725:119;3883:1;3908:53;3953:7;3944:6;3933:9;3929:22;3908:53;:::i;:::-;3898:63;;3854:117;3649:329;;;;:::o;3984:::-;4043:6;4092:2;4080:9;4071:7;4067:23;4063:32;4060:119;;;4098:79;;:::i;:::-;4060:119;4218:1;4243:53;4288:7;4279:6;4268:9;4264:22;4243:53;:::i;:::-;4233:63;;4189:117;3984:329;;;;:::o;4319:108::-;4396:24;4414:5;4396:24;:::i;:::-;4391:3;4384:37;4319:108;;:::o;4433:::-;4510:24;4528:5;4510:24;:::i;:::-;4505:3;4498:37;4433:108;;:::o;4547:99::-;4618:21;4633:5;4618:21;:::i;:::-;4613:3;4606:34;4547:99;;:::o;4652:109::-;4688:7;4728:26;4721:5;4717:38;4706:49;;4652:109;;;:::o;4767:105::-;4842:23;4859:5;4842:23;:::i;:::-;4837:3;4830:36;4767:105;;:::o;4932:1950::-;5075:6;5070:3;5066:16;5166:4;5159:5;5155:16;5149:23;5185:63;5242:4;5237:3;5233:14;5219:12;5185:63;:::i;:::-;5092:166;5341:4;5334:5;5330:16;5324:23;5360:63;5417:4;5412:3;5408:14;5394:12;5360:63;:::i;:::-;5268:165;5529:4;5522:5;5518:16;5512:23;5548:63;5605:4;5600:3;5596:14;5582:12;5548:63;:::i;:::-;5443:178;5708:4;5701:5;5697:16;5691:23;5727:63;5784:4;5779:3;5775:14;5761:12;5727:63;:::i;:::-;5631:169;5889:4;5882:5;5878:16;5872:23;5908:63;5965:4;5960:3;5956:14;5942:12;5908:63;:::i;:::-;5810:171;6070:4;6063:5;6059:16;6053:23;6089:57;6140:4;6135:3;6131:14;6117:12;6089:57;:::i;:::-;5991:165;6244:4;6237:5;6233:16;6227:23;6263:57;6314:4;6309:3;6305:14;6291:12;6263:57;:::i;:::-;6166:164;6421:4;6414:5;6410:16;6404:23;6440:63;6497:4;6492:3;6488:14;6474:12;6440:63;:::i;:::-;6340:173;6601:6;6594:5;6590:18;6584:25;6622:63;6677:6;6672:3;6668:16;6654:12;6622:63;:::i;:::-;6523:172;6779:6;6772:5;6768:18;6762:25;6800:65;6857:6;6852:3;6848:16;6834:12;6800:65;:::i;:::-;6705:170;5044:1838;4932:1950;;:::o;6888:315::-;7027:4;7065:3;7054:9;7050:19;7042:27;;7079:117;7193:1;7182:9;7178:17;7169:6;7079:117;:::i;:::-;6888:315;;;;:::o;7209:120::-;7281:23;7298:5;7281:23;:::i;:::-;7274:5;7271:34;7261:62;;7319:1;7316;7309:12;7261:62;7209:120;:::o;7335:137::-;7380:5;7418:6;7405:20;7396:29;;7434:32;7460:5;7434:32;:::i;:::-;7335:137;;;;:::o;7478:117::-;7587:1;7584;7577:12;7601:117;7710:1;7707;7700:12;7724:117;7833:1;7830;7823:12;7861:553;7919:8;7929:6;7979:3;7972:4;7964:6;7960:17;7956:27;7946:122;;7987:79;;:::i;:::-;7946:122;8100:6;8087:20;8077:30;;8130:18;8122:6;8119:30;8116:117;;;8152:79;;:::i;:::-;8116:117;8266:4;8258:6;8254:17;8242:29;;8320:3;8312:4;8304:6;8300:17;8290:8;8286:32;8283:41;8280:128;;;8327:79;;:::i;:::-;8280:128;7861:553;;;;;:::o;8420:1837::-;8569:6;8577;8585;8593;8601;8609;8617;8625;8633;8641;8649:7;8699:3;8687:9;8678:7;8674:23;8670:33;8667:120;;;8706:79;;:::i;:::-;8667:120;8826:1;8851:53;8896:7;8887:6;8876:9;8872:22;8851:53;:::i;:::-;8841:63;;8797:117;8953:2;8979:53;9024:7;9015:6;9004:9;9000:22;8979:53;:::i;:::-;8969:63;;8924:118;9081:2;9107:53;9152:7;9143:6;9132:9;9128:22;9107:53;:::i;:::-;9097:63;;9052:118;9209:2;9235:53;9280:7;9271:6;9260:9;9256:22;9235:53;:::i;:::-;9225:63;;9180:118;9337:3;9364:52;9408:7;9399:6;9388:9;9384:22;9364:52;:::i;:::-;9354:62;;9308:118;9465:3;9492:53;9537:7;9528:6;9517:9;9513:22;9492:53;:::i;:::-;9482:63;;9436:119;9594:3;9621:52;9665:7;9656:6;9645:9;9641:22;9621:52;:::i;:::-;9611:62;;9565:118;9722:3;9749:53;9794:7;9785:6;9774:9;9770:22;9749:53;:::i;:::-;9739:63;;9693:119;9851:3;9878:52;9922:7;9913:6;9902:9;9898:22;9878:52;:::i;:::-;9868:62;;9822:118;10007:3;9996:9;9992:19;9979:33;10039:18;10031:6;10028:30;10025:117;;;10061:79;;:::i;:::-;10025:117;10175:65;10232:7;10223:6;10212:9;10208:22;10175:65;:::i;:::-;10156:84;;;;9950:300;8420:1837;;;;;;;;;;;;;;:::o;10263:1401::-;10387:6;10395;10403;10411;10419;10427;10435;10443;10492:3;10480:9;10471:7;10467:23;10463:33;10460:120;;;10499:79;;:::i;:::-;10460:120;10619:1;10644:53;10689:7;10680:6;10669:9;10665:22;10644:53;:::i;:::-;10634:63;;10590:117;10746:2;10772:53;10817:7;10808:6;10797:9;10793:22;10772:53;:::i;:::-;10762:63;;10717:118;10874:2;10900:52;10944:7;10935:6;10924:9;10920:22;10900:52;:::i;:::-;10890:62;;10845:117;11001:2;11027:53;11072:7;11063:6;11052:9;11048:22;11027:53;:::i;:::-;11017:63;;10972:118;11129:3;11156:53;11201:7;11192:6;11181:9;11177:22;11156:53;:::i;:::-;11146:63;;11100:119;11258:3;11285:53;11330:7;11321:6;11310:9;11306:22;11285:53;:::i;:::-;11275:63;;11229:119;11415:3;11404:9;11400:19;11387:33;11447:18;11439:6;11436:30;11433:117;;;11469:79;;:::i;:::-;11433:117;11582:65;11639:7;11630:6;11619:9;11615:22;11582:65;:::i;:::-;11564:83;;;;11358:299;10263:1401;;;;;;;;;;;:::o;11670:118::-;11757:24;11775:5;11757:24;:::i;:::-;11752:3;11745:37;11670:118;;:::o;11794:222::-;11887:4;11925:2;11914:9;11910:18;11902:26;;11938:71;12006:1;11995:9;11991:17;11982:6;11938:71;:::i;:::-;11794:222;;;;:::o;12022:118::-;12109:24;12127:5;12109:24;:::i;:::-;12104:3;12097:37;12022:118;;:::o;12146:222::-;12239:4;12277:2;12266:9;12262:18;12254:26;;12290:71;12358:1;12347:9;12343:17;12334:6;12290:71;:::i;:::-;12146:222;;;;:::o;12374:115::-;12459:23;12476:5;12459:23;:::i;:::-;12454:3;12447:36;12374:115;;:::o;12495:118::-;12582:24;12600:5;12582:24;:::i;:::-;12577:3;12570:37;12495:118;;:::o;12619:328::-;12738:4;12776:2;12765:9;12761:18;12753:26;;12789:69;12855:1;12844:9;12840:17;12831:6;12789:69;:::i;:::-;12868:72;12936:2;12925:9;12921:18;12912:6;12868:72;:::i;:::-;12619:328;;;;;:::o;12953:619::-;13030:6;13038;13046;13095:2;13083:9;13074:7;13070:23;13066:32;13063:119;;;13101:79;;:::i;:::-;13063:119;13221:1;13246:53;13291:7;13282:6;13271:9;13267:22;13246:53;:::i;:::-;13236:63;;13192:117;13348:2;13374:53;13419:7;13410:6;13399:9;13395:22;13374:53;:::i;:::-;13364:63;;13319:118;13476:2;13502:53;13547:7;13538:6;13527:9;13523:22;13502:53;:::i;:::-;13492:63;;13447:118;12953:619;;;;;:::o;13578:763::-;13663:6;13671;13679;13687;13736:3;13724:9;13715:7;13711:23;13707:33;13704:120;;;13743:79;;:::i;:::-;13704:120;13863:1;13888:53;13933:7;13924:6;13913:9;13909:22;13888:53;:::i;:::-;13878:63;;13834:117;13990:2;14016:53;14061:7;14052:6;14041:9;14037:22;14016:53;:::i;:::-;14006:63;;13961:118;14118:2;14144:53;14189:7;14180:6;14169:9;14165:22;14144:53;:::i;:::-;14134:63;;14089:118;14246:2;14272:52;14316:7;14307:6;14296:9;14292:22;14272:52;:::i;:::-;14262:62;;14217:117;13578:763;;;;;;;:::o;14347:169::-;14431:11;14465:6;14460:3;14453:19;14505:4;14500:3;14496:14;14481:29;;14347:169;;;;:::o;14522:171::-;14662:23;14658:1;14650:6;14646:14;14639:47;14522:171;:::o;14699:366::-;14841:3;14862:67;14926:2;14921:3;14862:67;:::i;:::-;14855:74;;14938:93;15027:3;14938:93;:::i;:::-;15056:2;15051:3;15047:12;15040:19;;14699:366;;;:::o;15071:419::-;15237:4;15275:2;15264:9;15260:18;15252:26;;15324:9;15318:4;15314:20;15310:1;15299:9;15295:17;15288:47;15352:131;15478:4;15352:131;:::i;:::-;15344:139;;15071:419;;;:::o;15496:224::-;15636:34;15632:1;15624:6;15620:14;15613:58;15705:7;15700:2;15692:6;15688:15;15681:32;15496:224;:::o;15726:366::-;15868:3;15889:67;15953:2;15948:3;15889:67;:::i;:::-;15882:74;;15965:93;16054:3;15965:93;:::i;:::-;16083:2;16078:3;16074:12;16067:19;;15726:366;;;:::o;16098:419::-;16264:4;16302:2;16291:9;16287:18;16279:26;;16351:9;16345:4;16341:20;16337:1;16326:9;16322:17;16315:47;16379:131;16505:4;16379:131;:::i;:::-;16371:139;;16098:419;;;:::o;16523:226::-;16663:34;16659:1;16651:6;16647:14;16640:58;16732:9;16727:2;16719:6;16715:15;16708:34;16523:226;:::o;16755:366::-;16897:3;16918:67;16982:2;16977:3;16918:67;:::i;:::-;16911:74;;16994:93;17083:3;16994:93;:::i;:::-;17112:2;17107:3;17103:12;17096:19;;16755:366;;;:::o;17127:419::-;17293:4;17331:2;17320:9;17316:18;17308:26;;17380:9;17374:4;17370:20;17366:1;17355:9;17351:17;17344:47;17408:131;17534:4;17408:131;:::i;:::-;17400:139;;17127:419;;;:::o;17552:218::-;17643:4;17681:2;17670:9;17666:18;17658:26;;17694:69;17760:1;17749:9;17745:17;17736:6;17694:69;:::i;:::-;17552:218;;;;:::o;17776:164::-;17916:16;17912:1;17904:6;17900:14;17893:40;17776:164;:::o;17946:366::-;18088:3;18109:67;18173:2;18168:3;18109:67;:::i;:::-;18102:74;;18185:93;18274:3;18185:93;:::i;:::-;18303:2;18298:3;18294:12;18287:19;;17946:366;;;:::o;18318:419::-;18484:4;18522:2;18511:9;18507:18;18499:26;;18571:9;18565:4;18561:20;18557:1;18546:9;18542:17;18535:47;18599:131;18725:4;18599:131;:::i;:::-;18591:139;;18318:419;;;:::o;18743:164::-;18883:16;18879:1;18871:6;18867:14;18860:40;18743:164;:::o;18913:366::-;19055:3;19076:67;19140:2;19135:3;19076:67;:::i;:::-;19069:74;;19152:93;19241:3;19152:93;:::i;:::-;19270:2;19265:3;19261:12;19254:19;;18913:366;;;:::o;19285:419::-;19451:4;19489:2;19478:9;19474:18;19466:26;;19538:9;19532:4;19528:20;19524:1;19513:9;19509:17;19502:47;19566:131;19692:4;19566:131;:::i;:::-;19558:139;;19285:419;;;:::o;19710:163::-;19850:15;19846:1;19838:6;19834:14;19827:39;19710:163;:::o;19879:366::-;20021:3;20042:67;20106:2;20101:3;20042:67;:::i;:::-;20035:74;;20118:93;20207:3;20118:93;:::i;:::-;20236:2;20231:3;20227:12;20220:19;;19879:366;;;:::o;20251:419::-;20417:4;20455:2;20444:9;20440:18;20432:26;;20504:9;20498:4;20494:20;20490:1;20479:9;20475:17;20468:47;20532:131;20658:4;20532:131;:::i;:::-;20524:139;;20251:419;;;:::o;20676:171::-;20816:23;20812:1;20804:6;20800:14;20793:47;20676:171;:::o;20853:366::-;20995:3;21016:67;21080:2;21075:3;21016:67;:::i;:::-;21009:74;;21092:93;21181:3;21092:93;:::i;:::-;21210:2;21205:3;21201:12;21194:19;;20853:366;;;:::o;21225:419::-;21391:4;21429:2;21418:9;21414:18;21406:26;;21478:9;21472:4;21468:20;21464:1;21453:9;21449:17;21442:47;21506:131;21632:4;21506:131;:::i;:::-;21498:139;;21225:419;;;:::o;21650:332::-;21771:4;21809:2;21798:9;21794:18;21786:26;;21822:71;21890:1;21879:9;21875:17;21866:6;21822:71;:::i;:::-;21903:72;21971:2;21960:9;21956:18;21947:6;21903:72;:::i;:::-;21650:332;;;;;:::o;21988:116::-;22058:21;22073:5;22058:21;:::i;:::-;22051:5;22048:32;22038:60;;22094:1;22091;22084:12;22038:60;21988:116;:::o;22110:137::-;22164:5;22195:6;22189:13;22180:22;;22211:30;22235:5;22211:30;:::i;:::-;22110:137;;;;:::o;22253:345::-;22320:6;22369:2;22357:9;22348:7;22344:23;22340:32;22337:119;;;22375:79;;:::i;:::-;22337:119;22495:1;22520:61;22573:7;22564:6;22553:9;22549:22;22520:61;:::i;:::-;22510:71;;22466:125;22253:345;;;;:::o;22604:180::-;22652:77;22649:1;22642:88;22749:4;22746:1;22739:15;22773:4;22770:1;22763:15;22790:194;22830:4;22850:20;22868:1;22850:20;:::i;:::-;22845:25;;22884:20;22902:1;22884:20;:::i;:::-;22879:25;;22928:1;22925;22921:9;22913:17;;22952:1;22946:4;22943:11;22940:37;;;22957:18;;:::i;:::-;22940:37;22790:194;;;;:::o;22990:191::-;23030:3;23049:20;23067:1;23049:20;:::i;:::-;23044:25;;23083:20;23101:1;23083:20;:::i;:::-;23078:25;;23126:1;23123;23119:9;23112:16;;23147:3;23144:1;23141:10;23138:36;;;23154:18;;:::i;:::-;23138:36;22990:191;;;;:::o;23187:222::-;23280:4;23318:2;23307:9;23303:18;23295:26;;23331:71;23399:1;23388:9;23384:17;23375:6;23331:71;:::i;:::-;23187:222;;;;:::o;23415:228::-;23555:34;23551:1;23543:6;23539:14;23532:58;23624:11;23619:2;23611:6;23607:15;23600:36;23415:228;:::o;23649:366::-;23791:3;23812:67;23876:2;23871:3;23812:67;:::i;:::-;23805:74;;23888:93;23977:3;23888:93;:::i;:::-;24006:2;24001:3;23997:12;23990:19;;23649:366;;;:::o;24021:419::-;24187:4;24225:2;24214:9;24210:18;24202:26;;24274:9;24268:4;24264:20;24260:1;24249:9;24245:17;24238:47;24302:131;24428:4;24302:131;:::i;:::-;24294:139;;24021:419;;;:::o;24446:167::-;24586:19;24582:1;24574:6;24570:14;24563:43;24446:167;:::o;24619:366::-;24761:3;24782:67;24846:2;24841:3;24782:67;:::i;:::-;24775:74;;24858:93;24947:3;24858:93;:::i;:::-;24976:2;24971:3;24967:12;24960:19;;24619:366;;;:::o;24991:419::-;25157:4;25195:2;25184:9;25180:18;25172:26;;25244:9;25238:4;25234:20;25230:1;25219:9;25215:17;25208:47;25272:131;25398:4;25272:131;:::i;:::-;25264:139;;24991:419;;;:::o;25416:162::-;25556:14;25552:1;25544:6;25540:14;25533:38;25416:162;:::o;25584:366::-;25726:3;25747:67;25811:2;25806:3;25747:67;:::i;:::-;25740:74;;25823:93;25912:3;25823:93;:::i;:::-;25941:2;25936:3;25932:12;25925:19;;25584:366;;;:::o;25956:419::-;26122:4;26160:2;26149:9;26145:18;26137:26;;26209:9;26203:4;26199:20;26195:1;26184:9;26180:17;26173:47;26237:131;26363:4;26237:131;:::i;:::-;26229:139;;25956:419;;;:::o;26381:172::-;26521:24;26517:1;26509:6;26505:14;26498:48;26381:172;:::o;26559:366::-;26701:3;26722:67;26786:2;26781:3;26722:67;:::i;:::-;26715:74;;26798:93;26887:3;26798:93;:::i;:::-;26916:2;26911:3;26907:12;26900:19;;26559:366;;;:::o;26931:419::-;27097:4;27135:2;27124:9;27120:18;27112:26;;27184:9;27178:4;27174:20;27170:1;27159:9;27155:17;27148:47;27212:131;27338:4;27212:131;:::i;:::-;27204:139;;26931:419;;;:::o;27356:181::-;27496:33;27492:1;27484:6;27480:14;27473:57;27356:181;:::o;27543:366::-;27685:3;27706:67;27770:2;27765:3;27706:67;:::i;:::-;27699:74;;27782:93;27871:3;27782:93;:::i;:::-;27900:2;27895:3;27891:12;27884:19;;27543:366;;;:::o;27915:419::-;28081:4;28119:2;28108:9;28104:18;28096:26;;28168:9;28162:4;28158:20;28154:1;28143:9;28139:17;28132:47;28196:131;28322:4;28196:131;:::i;:::-;28188:139;;27915:419;;;:::o;28340:60::-;28368:3;28389:5;28382:12;;28340:60;;;:::o;28406:140::-;28455:9;28488:52;28506:33;28515:23;28532:5;28515:23;:::i;:::-;28506:33;:::i;:::-;28488:52;:::i;:::-;28475:65;;28406:140;;;:::o;28552:129::-;28638:36;28668:5;28638:36;:::i;:::-;28633:3;28626:49;28552:129;;:::o;28687:330::-;28807:4;28845:2;28834:9;28830:18;28822:26;;28858:71;28926:1;28915:9;28911:17;28902:6;28858:71;:::i;:::-;28939;29006:2;28995:9;28991:18;28982:6;28939:71;:::i;:::-;28687:330;;;;;:::o;29023:115::-;29108:23;29125:5;29108:23;:::i;:::-;29103:3;29096:36;29023:115;;:::o;29144:146::-;29241:6;29236:3;29231;29218:30;29282:1;29273:6;29268:3;29264:16;29257:27;29144:146;;;:::o;29296:102::-;29337:6;29388:2;29384:7;29379:2;29372:5;29368:14;29364:28;29354:38;;29296:102;;;:::o;29428:317::-;29526:3;29547:71;29611:6;29606:3;29547:71;:::i;:::-;29540:78;;29628:56;29677:6;29672:3;29665:5;29628:56;:::i;:::-;29709:29;29731:6;29709:29;:::i;:::-;29704:3;29700:39;29693:46;;29428:317;;;;;:::o;29751:771::-;29984:4;30022:3;30011:9;30007:19;29999:27;;30036:71;30104:1;30093:9;30089:17;30080:6;30036:71;:::i;:::-;30117:72;30185:2;30174:9;30170:18;30161:6;30117:72;:::i;:::-;30199;30267:2;30256:9;30252:18;30243:6;30199:72;:::i;:::-;30281:70;30347:2;30336:9;30332:18;30323:6;30281:70;:::i;:::-;30399:9;30393:4;30389:20;30383:3;30372:9;30368:19;30361:49;30427:88;30510:4;30501:6;30493;30427:88;:::i;:::-;30419:96;;29751:771;;;;;;;;;:::o;30528:168::-;30668:20;30664:1;30656:6;30652:14;30645:44;30528:168;:::o;30702:366::-;30844:3;30865:67;30929:2;30924:3;30865:67;:::i;:::-;30858:74;;30941:93;31030:3;30941:93;:::i;:::-;31059:2;31054:3;31050:12;31043:19;;30702:366;;;:::o;31074:419::-;31240:4;31278:2;31267:9;31263:18;31255:26;;31327:9;31321:4;31317:20;31313:1;31302:9;31298:17;31291:47;31355:131;31481:4;31355:131;:::i;:::-;31347:139;;31074:419;;;:::o;31499:442::-;31648:4;31686:2;31675:9;31671:18;31663:26;;31699:71;31767:1;31756:9;31752:17;31743:6;31699:71;:::i;:::-;31780:72;31848:2;31837:9;31833:18;31824:6;31780:72;:::i;:::-;31862;31930:2;31919:9;31915:18;31906:6;31862:72;:::i;:::-;31499:442;;;;;;:::o;31947:233::-;31986:3;32009:24;32027:5;32009:24;:::i;:::-;32000:33;;32055:66;32048:5;32045:77;32042:103;;32125:18;;:::i;:::-;32042:103;32172:1;32165:5;32161:13;32154:20;;31947:233;;;:::o;32186:410::-;32226:7;32249:20;32267:1;32249:20;:::i;:::-;32244:25;;32283:20;32301:1;32283:20;:::i;:::-;32278:25;;32338:1;32335;32331:9;32360:30;32378:11;32360:30;:::i;:::-;32349:41;;32539:1;32530:7;32526:15;32523:1;32520:22;32500:1;32493:9;32473:83;32450:139;;32569:18;;:::i;:::-;32450:139;32234:362;32186:410;;;;:::o;32602:180::-;32650:77;32647:1;32640:88;32747:4;32744:1;32737:15;32771:4;32768:1;32761:15;32788:185;32828:1;32845:20;32863:1;32845:20;:::i;:::-;32840:25;;32879:20;32897:1;32879:20;:::i;:::-;32874:25;;32918:1;32908:35;;32923:18;;:::i;:::-;32908:35;32965:1;32962;32958:9;32953:14;;32788:185;;;;:::o;32979:662::-;33185:4;33223:3;33212:9;33208:19;33200:27;;33237:71;33305:1;33294:9;33290:17;33281:6;33237:71;:::i;:::-;33318:72;33386:2;33375:9;33371:18;33362:6;33318:72;:::i;:::-;33400:71;33467:2;33456:9;33452:18;33443:6;33400:71;:::i;:::-;33518:9;33512:4;33508:20;33503:2;33492:9;33488:18;33481:48;33546:88;33629:4;33620:6;33612;33546:88;:::i;:::-;33538:96;;32979:662;;;;;;;;:::o;33647:233::-;33787:34;33783:1;33775:6;33771:14;33764:58;33856:16;33851:2;33843:6;33839:15;33832:41;33647:233;:::o;33886:366::-;34028:3;34049:67;34113:2;34108:3;34049:67;:::i;:::-;34042:74;;34125:93;34214:3;34125:93;:::i;:::-;34243:2;34238:3;34234:12;34227:19;;33886:366;;;:::o;34258:419::-;34424:4;34462:2;34451:9;34447:18;34439:26;;34511:9;34505:4;34501:20;34497:1;34486:9;34482:17;34475:47;34539:131;34665:4;34539:131;:::i;:::-;34531:139;;34258:419;;;:::o;34683:85::-;34728:7;34757:5;34746:16;;34683:85;;;:::o;34774:86::-;34809:7;34849:4;34842:5;34838:16;34827:27;;34774:86;;;:::o;34866:154::-;34922:9;34955:59;34971:42;34980:32;35006:5;34980:32;:::i;:::-;34971:42;:::i;:::-;34955:59;:::i;:::-;34942:72;;34866:154;;;:::o;35026:143::-;35119:43;35156:5;35119:43;:::i;:::-;35114:3;35107:56;35026:143;;:::o;35175:234::-;35274:4;35312:2;35301:9;35297:18;35289:26;;35325:77;35399:1;35388:9;35384:17;35375:6;35325:77;:::i;:::-;35175:234;;;;:::o;35415:173::-;35555:25;35551:1;35543:6;35539:14;35532:49;35415:173;:::o;35594:366::-;35736:3;35757:67;35821:2;35816:3;35757:67;:::i;:::-;35750:74;;35833:93;35922:3;35833:93;:::i;:::-;35951:2;35946:3;35942:12;35935:19;;35594:366;;;:::o;35966:419::-;36132:4;36170:2;36159:9;36155:18;36147:26;;36219:9;36213:4;36209:20;36205:1;36194:9;36190:17;36183:47;36247:131;36373:4;36247:131;:::i;:::-;36239:139;;35966:419;;;:::o;36391:216::-;36430:4;36450:19;36467:1;36450:19;:::i;:::-;36445:24;;36483:19;36500:1;36483:19;:::i;:::-;36478:24;;36526:1;36523;36519:9;36511:17;;36550:26;36544:4;36541:36;36538:62;;;36580:18;;:::i;:::-;36538:62;36391:216;;;;:::o;36613:138::-;36661:9;36694:51;36711:33;36720:23;36737:5;36720:23;:::i;:::-;36711:33;:::i;:::-;36694:51;:::i;:::-;36681:64;;36613:138;;;:::o;36757:127::-;36842:35;36871:5;36842:35;:::i;:::-;36837:3;36830:48;36757:127;;:::o;36890:328::-;37009:4;37047:2;37036:9;37032:18;37024:26;;37060:71;37128:1;37117:9;37113:17;37104:6;37060:71;:::i;:::-;37141:70;37207:2;37196:9;37192:18;37183:6;37141:70;:::i;:::-;36890:328;;;;;:::o;37224:182::-;37364:34;37360:1;37352:6;37348:14;37341:58;37224:182;:::o;37412:366::-;37554:3;37575:67;37639:2;37634:3;37575:67;:::i;:::-;37568:74;;37651:93;37740:3;37651:93;:::i;:::-;37769:2;37764:3;37760:12;37753:19;;37412:366;;;:::o;37784:419::-;37950:4;37988:2;37977:9;37973:18;37965:26;;38037:9;38031:4;38027:20;38023:1;38012:9;38008:17;38001:47;38065:131;38191:4;38065:131;:::i;:::-;38057:139;;37784:419;;;:::o;38209:166::-;38349:18;38345:1;38337:6;38333:14;38326:42;38209:166;:::o;38381:366::-;38523:3;38544:67;38608:2;38603:3;38544:67;:::i;:::-;38537:74;;38620:93;38709:3;38620:93;:::i;:::-;38738:2;38733:3;38729:12;38722:19;;38381:366;;;:::o;38753:419::-;38919:4;38957:2;38946:9;38942:18;38934:26;;39006:9;39000:4;38996:20;38992:1;38981:9;38977:17;38970:47;39034:131;39160:4;39034:131;:::i;:::-;39026:139;;38753:419;;;:::o;39178:167::-;39318:19;39314:1;39306:6;39302:14;39295:43;39178:167;:::o;39351:366::-;39493:3;39514:67;39578:2;39573:3;39514:67;:::i;:::-;39507:74;;39590:93;39679:3;39590:93;:::i;:::-;39708:2;39703:3;39699:12;39692:19;;39351:366;;;:::o;39723:419::-;39889:4;39927:2;39916:9;39912:18;39904:26;;39976:9;39970:4;39966:20;39962:1;39951:9;39947:17;39940:47;40004:131;40130:4;40004:131;:::i;:::-;39996:139;;39723:419;;;:::o;40148:166::-;40288:18;40284:1;40276:6;40272:14;40265:42;40148:166;:::o;40320:366::-;40462:3;40483:67;40547:2;40542:3;40483:67;:::i;:::-;40476:74;;40559:93;40648:3;40559:93;:::i;:::-;40677:2;40672:3;40668:12;40661:19;;40320:366;;;:::o;40692:419::-;40858:4;40896:2;40885:9;40881:18;40873:26;;40945:9;40939:4;40935:20;40931:1;40920:9;40916:17;40909:47;40973:131;41099:4;40973:131;:::i;:::-;40965:139;;40692:419;;;:::o;41117:175::-;41257:27;41253:1;41245:6;41241:14;41234:51;41117:175;:::o;41298:366::-;41440:3;41461:67;41525:2;41520:3;41461:67;:::i;:::-;41454:74;;41537:93;41626:3;41537:93;:::i;:::-;41655:2;41650:3;41646:12;41639:19;;41298:366;;;:::o;41670:419::-;41836:4;41874:2;41863:9;41859:18;41851:26;;41923:9;41917:4;41913:20;41909:1;41898:9;41894:17;41887:47;41951:131;42077:4;41951:131;:::i;:::-;41943:139;;41670:419;;;:::o;42095:230::-;42235:34;42231:1;42223:6;42219:14;42212:58;42304:13;42299:2;42291:6;42287:15;42280:38;42095:230;:::o;42331:366::-;42473:3;42494:67;42558:2;42553:3;42494:67;:::i;:::-;42487:74;;42570:93;42659:3;42570:93;:::i;:::-;42688:2;42683:3;42679:12;42672:19;;42331:366;;;:::o;42703:419::-;42869:4;42907:2;42896:9;42892:18;42884:26;;42956:9;42950:4;42946:20;42942:1;42931:9;42927:17;42920:47;42984:131;43110:4;42984:131;:::i;:::-;42976:139;;42703:419;;;:::o;43128:170::-;43268:22;43264:1;43256:6;43252:14;43245:46;43128:170;:::o;43304:366::-;43446:3;43467:67;43531:2;43526:3;43467:67;:::i;:::-;43460:74;;43543:93;43632:3;43543:93;:::i;:::-;43661:2;43656:3;43652:12;43645:19;;43304:366;;;:::o;43676:419::-;43842:4;43880:2;43869:9;43865:18;43857:26;;43929:9;43923:4;43919:20;43915:1;43904:9;43900:17;43893:47;43957:131;44083:4;43957:131;:::i;:::-;43949:139;;43676:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3349400","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54769","createOrder(address,uint256,uint96,address,uint256,address,string)":"infinite","getFeeDetails()":"4715","getOrderInfo(bytes32)":"infinite","initialize()":"191300","isTokenSupported(address)":"2948","owner()":"2633","pause()":"infinite","paused()":"2569","pendingOwner()":"2588","processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)":"infinite","refund(uint256,bytes32)":"infinite","renounceOwnership()":"54692","settingManagerBool(bytes32,address,uint256)":"infinite","settle(bytes32,bytes32,address,uint64)":"infinite","transferOwnership(address)":"infinite","unpause()":"infinite","updateProtocolAddress(bytes32,address)":"31117","updateProtocolFee(uint64)":"infinite"},"internal":{"_handler(address,uint256,address,address,uint256)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","createOrder(address,uint256,uint96,address,uint256,address,string)":"809804f7","getFeeDetails()":"b810c636","getOrderInfo(bytes32)":"768c6ec0","initialize()":"8129fc1c","isTokenSupported(address)":"75151b63","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","pendingOwner()":"e30c3978","processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)":"79ec5809","refund(uint256,bytes32)":"71eedb88","renounceOwnership()":"715018a6","settingManagerBool(bytes32,address,uint256)":"cd992400","settle(bytes32,bytes32,address,uint64)":"f22ee704","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateProtocolAddress(bytes32,address)":"40ebc677","updateProtocolFee(uint64)":"47094e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"splitOrderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"settlePercent\",\"type\":\"uint96\"}],\"name\":\"OrderSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"senderFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"rate\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"ProcessSettlement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"ProtocolAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"protocolFee\",\"type\":\"uint64\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SenderFeeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"SetFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"SettingManagerBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_senderFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDetails\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"currentBPS\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGateway.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_senderFee\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_protocolFee\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"string\",\"name\":\"_messageHash\",\"type\":\"string\"}],\"name\":\"processSettlement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"settingManagerBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_splitOrderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_settlePercent\",\"type\":\"uint64\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"updateProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_protocolFeePercent\",\"type\":\"uint64\"}],\"name\":\"updateProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OrderCreated(address,address,uint256,uint256,bytes32,uint256,string)\":{\"details\":\"Emitted when a deposit is made.\",\"params\":{\"amount\":\"The amount of the deposit.\",\"messageHash\":\"The hash of the message.\",\"orderId\":\"The ID of the order.\",\"rate\":\"The rate at which the deposit is made.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"OrderRefunded(uint256,bytes32)\":{\"details\":\"Emitted when an aggregator refunds a transaction.\",\"params\":{\"fee\":\"The fee deducted from the refund amount.\",\"orderId\":\"The ID of the order.\"}},\"OrderSettled(bytes32,bytes32,address,uint96)\":{\"details\":\"Emitted when an aggregator settles a transaction.\",\"params\":{\"liquidityProvider\":\"The address of the liquidity provider.\",\"orderId\":\"The ID of the order.\",\"settlePercent\":\"The percentage at which the transaction is settled.\",\"splitOrderId\":\"The ID of the split order.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"ProcessSettlement(bytes32,uint256,address,address,address,address,uint96,string)\":{\"details\":\"Emitted when an onramp order is successfully processed\"},\"SenderFeeTransferred(address,uint256)\":{\"details\":\"Emitted when the sender's fee is transferred.\",\"params\":{\"amount\":\"The amount of the fee transferred.\",\"sender\":\"The address of the sender.\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createOrder(address,uint256,uint96,address,uint256,address,string)\":{\"details\":\"See {createOrder-IGateway}. \"},\"getFeeDetails()\":{\"details\":\"See {getFeeDetails-IGateway}. \"},\"getOrderInfo(bytes32)\":{\"details\":\"See {getOrderInfo-IGateway}. \"},\"initialize()\":{\"details\":\"Initialize function.\"},\"isTokenSupported(address)\":{\"details\":\"See {isTokenSupported-IGateway}. \"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)\":{\"details\":\"See {processSettlement-IGateway}. \"},\"refund(uint256,bytes32)\":{\"details\":\"See {refund-IGateway}. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"settingManagerBool(bytes32,address,uint256)\":{\"details\":\"Sets the boolean value for a specific setting.\",\"params\":{\"status\":\"The boolean value to be set. Requirements: - The value must not be a zero address.\",\"value\":\"The address or value associated with the setting.\",\"what\":\"The setting to be updated.\"}},\"settle(bytes32,bytes32,address,uint64)\":{\"details\":\"See {settle-IGateway}. \"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause the contract.\"},\"updateProtocolAddress(bytes32,address)\":{\"details\":\"Updates a protocol address.\",\"params\":{\"value\":\"The new address to be set. Requirements: - The value must not be a zero address.\",\"what\":\"The address type to be updated (treasury or aggregator).\"}},\"updateProtocolFee(uint64)\":{\"details\":\"Updates the protocol fee percentage.\",\"params\":{\"_protocolFeePercent\":\"The new protocol fee percentage to be set.\"}}},\"title\":\"Gateway\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract serves as a gateway for creating orders and managing settlements.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gateway.sol\":\"Gateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Gateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\\n\\nimport {GatewaySettingManager} from './GatewaySettingManager.sol';\\nimport {IGateway, IERC20} from './interfaces/IGateway.sol';\\n\\n/**\\n * @title Gateway\\n * @notice This contract serves as a gateway for creating orders and managing settlements.\\n */\\ncontract Gateway is IGateway, GatewaySettingManager, PausableUpgradeable {\\n\\tstruct fee {\\n\\t\\tuint256 protocolFee;\\n\\t\\tuint256 liquidityProviderAmount;\\n\\t}\\n\\n\\tmapping(bytes32 => Order) private order;\\n\\tmapping(address => uint256) private _nonce;\\n\\tuint256[50] private __gap;\\n\\n\\t/// @custom:oz-upgrades-unsafe-allow constructor\\n\\tconstructor() {\\n\\t\\t_disableInitializers();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Initialize function.\\n\\t */\\n\\tfunction initialize() external initializer {\\n\\t\\tMAX_BPS = 100_000;\\n\\t\\t__Ownable2Step_init();\\n\\t\\t__Pausable_init();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Modifier that allows only the aggregator to call a function.\\n\\t */\\n\\tmodifier onlyAggregator() {\\n\\t\\trequire(msg.sender == _aggregatorAddress, 'OnlyAggregator');\\n\\t\\t_;\\n\\t}\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\t/**\\n\\t * @dev Pause the contract.\\n\\t */\\n\\tfunction pause() external onlyOwner {\\n\\t\\t_pause();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Unpause the contract.\\n\\t */\\n\\tfunction unpause() external onlyOwner {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\t/* ##################################################################\\n                                USER CALLS\\n    ################################################################## */\\n\\t/** @dev See {createOrder-IGateway}. */\\n\\tfunction createOrder(\\n\\t\\taddress _token,\\n\\t\\tuint256 _amount,\\n\\t\\tuint96 _rate,\\n\\t\\taddress _senderFeeRecipient,\\n\\t\\tuint256 _senderFee,\\n\\t\\taddress _refundAddress,\\n\\t\\tstring calldata messageHash\\n\\t) external whenNotPaused returns (bytes32 orderId) {\\n\\t\\t// checks that are required\\n\\t\\t_handler(_token, _amount, _refundAddress, _senderFeeRecipient, _senderFee);\\n\\n\\t\\t// validate messageHash\\n\\t\\trequire(bytes(messageHash).length != 0, 'InvalidMessageHash');\\n\\n\\t\\t// transfer token from msg.sender to contract\\n\\t\\tIERC20(_token).transferFrom(msg.sender, address(this), _amount + _senderFee);\\n\\n\\t\\t// increase users nonce to avoid replay attacks\\n\\t\\t_nonce[msg.sender]++;\\n\\n\\t\\t// generate transaction id for the transaction\\n\\t\\torderId = keccak256(abi.encode(msg.sender, _nonce[msg.sender]));\\n\\n\\t\\t// update transaction\\n\\t\\tuint256 _protocolFee = (_amount * protocolFeePercent) / MAX_BPS;\\n\\t\\torder[orderId] = Order({\\n\\t\\t\\tsender: msg.sender,\\n\\t\\t\\ttoken: _token,\\n\\t\\t\\tsenderFeeRecipient: _senderFeeRecipient,\\n\\t\\t\\tsenderFee: _senderFee,\\n\\t\\t\\tprotocolFee: _protocolFee,\\n\\t\\t\\tisFulfilled: false,\\n\\t\\t\\tisRefunded: false,\\n\\t\\t\\trefundAddress: _refundAddress,\\n\\t\\t\\tcurrentBPS: uint64(MAX_BPS),\\n\\t\\t\\tamount: _amount\\n\\t\\t});\\n\\n\\t\\t// emit order created event\\n\\t\\temit OrderCreated(\\n\\t\\t\\t_refundAddress,\\n\\t\\t\\t_token,\\n\\t\\t\\torder[orderId].amount,\\n\\t\\t\\t_protocolFee,\\n\\t\\t\\torderId,\\n\\t\\t\\t_rate,\\n\\t\\t\\tmessageHash\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Internal function to handle order creation.\\n\\t * @param _token The address of the token being traded.\\n\\t * @param _amount The amount of tokens being traded.\\n\\t * @param _refundAddress The address to refund the tokens in case of cancellation.\\n\\t * @param _senderFeeRecipient The address of the recipient for the sender fee.\\n\\t * @param _senderFee The amount of the sender fee.\\n\\t */\\n\\tfunction _handler(\\n\\t\\taddress _token,\\n\\t\\tuint256 _amount,\\n\\t\\taddress _refundAddress,\\n\\t\\taddress _senderFeeRecipient,\\n\\t\\tuint256 _senderFee\\n\\t) internal view {\\n\\t\\trequire(_isTokenSupported[_token] == 1, 'TokenNotSupported');\\n\\t\\trequire(_amount != 0, 'AmountIsZero');\\n\\t\\trequire(_refundAddress != address(0), 'ThrowZeroAddress');\\n\\n\\t\\tif (_senderFee != 0) {\\n\\t\\t\\trequire(_senderFeeRecipient != address(0), 'InvalidSenderFeeRecipient');\\n\\t\\t}\\n\\t}\\n\\n\\t/* ##################################################################\\n                                AGGREGATOR FUNCTIONS\\n    ################################################################## */\\n\\t/** @dev See {settle-IGateway}. */\\n\\tfunction settle(\\n\\t\\tbytes32 _splitOrderId,\\n\\t\\tbytes32 _orderId,\\n\\t\\taddress _liquidityProvider,\\n\\t\\tuint64 _settlePercent\\n\\t) external onlyAggregator returns (bool) {\\n\\t\\t// ensure the transaction has not been fulfilled\\n\\t\\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\\n\\t\\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\\n\\n\\t\\t// load the token into memory\\n\\t\\taddress token = order[_orderId].token;\\n\\n\\t\\t// subtract sum of amount based on the input _settlePercent\\n\\t\\torder[_orderId].currentBPS -= _settlePercent;\\n\\n\\t\\tif (order[_orderId].currentBPS == 0) {\\n\\t\\t\\t// update the transaction to be fulfilled\\n\\t\\t\\torder[_orderId].isFulfilled = true;\\n\\n\\t\\t\\tif (order[_orderId].senderFee != 0) {\\n\\t\\t\\t\\t// transfer sender fee\\n\\t\\t\\t\\tIERC20(order[_orderId].token).transfer(\\n\\t\\t\\t\\t\\torder[_orderId].senderFeeRecipient,\\n\\t\\t\\t\\t\\torder[_orderId].senderFee\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// emit event\\n\\t\\t\\t\\temit SenderFeeTransferred(\\n\\t\\t\\t\\t\\torder[_orderId].senderFeeRecipient,\\n\\t\\t\\t\\t\\torder[_orderId].senderFee\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// transfer to liquidity provider\\n\\t\\tuint256 liquidityProviderAmount = (order[_orderId].amount * _settlePercent) / MAX_BPS;\\n\\t\\torder[_orderId].amount -= liquidityProviderAmount;\\n\\n\\t\\tuint256 protocolFee = (liquidityProviderAmount * protocolFeePercent) / MAX_BPS;\\n\\t\\tliquidityProviderAmount -= protocolFee;\\n\\n\\t\\t// transfer protocol fee\\n\\t\\tif (protocolFee > 0) IERC20(token).transfer(treasuryAddress, protocolFee);\\n\\n\\t\\tIERC20(token).transfer(_liquidityProvider, liquidityProviderAmount);\\n\\n\\t\\t// emit settled event\\n\\t\\temit OrderSettled(_splitOrderId, _orderId, _liquidityProvider, _settlePercent);\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/** @dev See {refund-IGateway}. */\\n\\tfunction refund(uint256 _fee, bytes32 _orderId) external onlyAggregator returns (bool) {\\n\\t\\t// ensure the transaction has not been fulfilled\\n\\t\\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\\n\\t\\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\\n\\t\\trequire(order[_orderId].protocolFee >= _fee, 'FeeExceedsProtocolFee');\\n\\n\\t\\tif (_fee > 0) {\\n\\t\\t\\t// transfer refund fee to the treasury\\n\\t\\t\\tIERC20(order[_orderId].token).transfer(treasuryAddress, _fee);\\n\\t\\t}\\n\\n\\t\\t// reset state values\\n\\t\\torder[_orderId].isRefunded = true;\\n\\t\\torder[_orderId].currentBPS = 0;\\n\\n\\t\\t// deduct fee from order amount\\n\\t\\tuint256 refundAmount = order[_orderId].amount - _fee;\\n\\n\\t\\t// transfer refund amount and sender fee to the refund address\\n\\t\\tIERC20(order[_orderId].token).transfer(\\n\\t\\t\\torder[_orderId].refundAddress,\\n\\t\\t\\trefundAmount + order[_orderId].senderFee\\n\\t\\t);\\n\\n\\t\\t// emit refunded event\\n\\t\\temit OrderRefunded(_fee, _orderId);\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/** @dev See {processSettlement-IGateway}. */\\n\\tfunction processSettlement(\\n        bytes32 _orderId,\\n        address _token,\\n        uint256 _amount,\\n        address _senderFeeRecipient,\\n        uint96 _senderFee,\\n        address _liquidityProvider,\\n\\t\\tuint96 _protocolFee,\\n        address _recipient,\\n        uint96 _rate,\\n        string calldata _messageHash\\n    ) external onlyAggregator returns (bool) {\\n\\t\\trequire(!order[_orderId].isFulfilled, 'OrderNotFulfilled');\\n\\t\\trequire(_amount > 0, 'AmountIsZero');\\n\\t\\trequire(_recipient != address(0), 'RecipientIsZeroAddress');\\n\\n\\t\\tuint256 processedAmount = _amount;\\n\\n\\t\\tif(_senderFee != 0) {\\n\\t\\t\\trequire(_senderFeeRecipient != address(0), \\\"SenderFeeRecipientIsZeroAddress\\\");\\n\\t\\t\\t\\n\\t\\t\\tprocessedAmount -= _senderFee;\\n\\t\\t\\t\\n\\t\\t\\tIERC20(_token).transfer(\\n\\t\\t\\t\\t_senderFeeRecipient,\\n\\t\\t\\t\\t_senderFee\\n\\t\\t\\t);\\n\\n\\t\\t\\temit SenderFeeTransferred(\\n\\t\\t\\t\\t_senderFeeRecipient,\\n\\t\\t\\t\\t_senderFee\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tif (_protocolFee > 0) IERC20(_token).transfer(treasuryAddress, _protocolFee);\\n\\n\\t\\tIERC20(_token).transfer(_recipient, processedAmount);\\n\\n\\t\\t// update the order state\\n\\t\\torder[_orderId].sender = _recipient;\\n\\t\\torder[_orderId].token = _token;\\n\\t\\torder[_orderId].senderFeeRecipient = _senderFeeRecipient;\\n\\t\\torder[_orderId].senderFee = _senderFee;\\n\\t\\torder[_orderId].protocolFee = _protocolFee;\\n\\t\\torder[_orderId].isFulfilled = true;\\n\\t\\torder[_orderId].amount = processedAmount;\\n\\n\\t\\t// emit settlement event\\n\\t\\temit ProcessSettlement(\\n\\t\\t\\t_orderId,\\n\\t\\t\\t_amount,\\n\\t\\t\\t_recipient,\\n\\t\\t\\t_token,\\n\\t\\t\\t_senderFeeRecipient,\\n\\t\\t\\t_liquidityProvider,\\n\\t\\t\\t_rate,\\n\\t\\t\\t_messageHash\\n\\t\\t);\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/* ##################################################################\\n                                VIEW CALLS\\n    ################################################################## */\\n\\t/** @dev See {getOrderInfo-IGateway}. */\\n\\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory) {\\n\\t\\treturn order[_orderId];\\n\\t}\\n\\n\\t/** @dev See {isTokenSupported-IGateway}. */\\n\\tfunction isTokenSupported(address _token) external view returns (bool) {\\n\\t\\tif (_isTokenSupported[_token] == 1) return true;\\n\\t\\treturn false;\\n\\t}\\n\\n\\t/** @dev See {getFeeDetails-IGateway}. */\\n\\tfunction getFeeDetails() external view returns (uint64, uint256) {\\n\\t\\treturn (protocolFeePercent, MAX_BPS);\\n\\t}\\n}\\n\",\"keccak256\":\"0xee602f1e34d5626e4981c4f069f9e84aa5746c40179d3aa5f072f7f1a30a7682\",\"license\":\"UNLICENSED\"},\"contracts/GatewaySettingManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\n/**\\n * @title GatewaySettingManager\\n * @dev This contract manages the settings and configurations for the Gateway protocol.\\n */\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\\n\\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\\n\\tuint256 internal MAX_BPS;\\n\\tuint64 internal protocolFeePercent;\\n\\taddress internal treasuryAddress;\\n\\taddress internal _aggregatorAddress;\\n\\tmapping(address => uint256) internal _isTokenSupported;\\n\\n\\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\\n\\tuint256[50] private __gap;\\n\\n\\n\\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\\n\\tevent ProtocolFeeUpdated(uint64 protocolFee);\\n\\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\\n\\tevent SetFeeRecipient(address indexed treasuryAddress);\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\n\\t/**\\n\\t * @dev Sets the boolean value for a specific setting.\\n\\t * @param what The setting to be updated.\\n\\t * @param value The address or value associated with the setting.\\n\\t * @param status The boolean value to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\trequire(status == 1 || status == 2, 'Gateway: invalid status');\\n\\t\\tif (what == 'token') {\\n\\t\\t\\t_isTokenSupported[value] = status;\\n\\t\\t\\temit SettingManagerBool(what, value, status);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates the protocol fee percentage.\\n\\t * @param _protocolFeePercent The new protocol fee percentage to be set.\\n\\t */\\n\\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\\n\\t\\tprotocolFeePercent = _protocolFeePercent;\\n\\t\\temit ProtocolFeeUpdated(_protocolFeePercent);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates a protocol address.\\n\\t * @param what The address type to be updated (treasury or aggregator).\\n\\t * @param value The new address to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\tbool updated;\\n\\t\\tif (what == 'treasury') {\\n\\t\\t\\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\\n\\t\\t\\ttreasuryAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t} else if (what == 'aggregator') {\\n\\t\\t\\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\\n\\t\\t\\t_aggregatorAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t}\\n\\t\\tif (updated) {\\n\\t\\t\\temit ProtocolAddressUpdated(what, value);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xa6bc7df8377942cbbcd340f9fddad581486e8842ab71e5109b4d71ea1e148059\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IGateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title IGateway\\n * @notice Interface for the Gateway contract.\\n */\\ninterface IGateway {\\n    /* ##################################################################\\n                                EVENTS\\n    ################################################################## */\\n    /**\\n     * @dev Emitted when a deposit is made.\\n     * @param sender The address of the sender.\\n     * @param token The address of the deposited token.\\n     * @param amount The amount of the deposit.\\n     * @param orderId The ID of the order.\\n     * @param rate The rate at which the deposit is made.\\n     * @param messageHash The hash of the message.\\n     */\\n    event OrderCreated(\\n        address indexed sender,\\n        address indexed token,\\n        uint256 indexed amount,\\n        uint256 protocolFee,\\n        bytes32 orderId,\\n        uint256 rate,\\n        string messageHash\\n    );\\n\\n    /**\\n     * @dev Emitted when an aggregator settles a transaction.\\n     * @param splitOrderId The ID of the split order.\\n     * @param orderId The ID of the order.\\n     * @param liquidityProvider The address of the liquidity provider.\\n     * @param settlePercent The percentage at which the transaction is settled.\\n     */\\n    event OrderSettled(\\n        bytes32 splitOrderId,\\n        bytes32 indexed orderId,\\n        address indexed liquidityProvider,\\n        uint96 settlePercent\\n    );\\n\\n    /**\\n     * @dev Emitted when an aggregator refunds a transaction.\\n     * @param fee The fee deducted from the refund amount.\\n     * @param orderId The ID of the order.\\n     */\\n    event OrderRefunded(uint256 fee, bytes32 indexed orderId);\\n\\n    /**\\n     * @dev Emitted when an onramp order is successfully processed\\n     */\\n    event ProcessSettlement(\\n        bytes32 indexed orderId,\\n        uint256 indexed amount,\\n        address indexed recipient,\\n        address token,\\n        address senderFee,\\n\\t\\taddress liquidityProvider,\\n\\t\\tuint96 rate,\\n\\t\\tstring messageHash\\n    );\\n\\n    /**\\n     * @dev Emitted when the sender's fee is transferred.\\n     * @param sender The address of the sender.\\n     * @param amount The amount of the fee transferred.\\n     */\\n    event SenderFeeTransferred(address indexed sender, uint256 indexed amount);\\n\\n    /* ##################################################################\\n                                STRUCTS\\n    ################################################################## */\\n    /**\\n     * @dev Struct representing an order.\\n     * @param sender The address of the sender.\\n     * @param token The address of the token.\\n     * @param senderFeeRecipient The address of the sender fee recipient.\\n     * @param senderFee The fee to be paid to the sender fee recipient.\\n     * @param protocolFee The protocol fee to be paid.\\n     * @param isFulfilled Whether the order is fulfilled.\\n     * @param isRefunded Whether the order is refunded.\\n     * @param refundAddress The address to which the refund is made.\\n     * @param currentBPS The current basis points.\\n     * @param amount The amount of the order.\\n     */\\n    struct Order {\\n        address sender;\\n        address token;\\n        address senderFeeRecipient;\\n        uint256 senderFee;\\n        uint256 protocolFee;\\n        bool isFulfilled;\\n        bool isRefunded;\\n        address refundAddress;\\n        uint96 currentBPS;\\n        uint256 amount;\\n    }\\n\\n    /* ##################################################################\\n                                EXTERNAL CALLS\\n    ################################################################## */\\n    /**\\n     * @notice Locks the sender's amount of token into Gateway.\\n     * @dev Requirements:\\n     * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\\n     * - `_token` must be an acceptable token. See {isTokenSupported}.\\n     * - `amount` must be greater than minimum.\\n     * - `_refundAddress` refund address must not be zero address.\\n     * @param _token The address of the token.\\n     * @param _amount The amount in the decimal of `_token` to be locked.\\n     * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\\n     * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\\n     * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\\n     * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\\n     * @param messageHash The hash of the message.\\n     * @return _orderId The ID of the order.\\n     */\\n    function createOrder(\\n        address _token,\\n        uint256 _amount,\\n        uint96 _rate,\\n        address _senderFeeRecipient,\\n        uint256 _senderFee,\\n        address _refundAddress,\\n        string calldata messageHash\\n    ) external returns (bytes32 _orderId);\\n\\n    /**\\n     * @notice Settles a transaction and distributes rewards accordingly.\\n     * @param _splitOrderId The ID of the split order.\\n     * @param _orderId The ID of the transaction.\\n     * @param _liquidityProvider The address of the liquidity provider.\\n     * @param _settlePercent The rate at which the transaction is settled.\\n     * @return bool the settlement is successful.\\n     */\\n    function settle(\\n        bytes32 _splitOrderId,\\n        bytes32 _orderId,\\n        address _liquidityProvider,\\n        uint64 _settlePercent\\n    ) external returns (bool);\\n\\n    /**\\n     * @notice Refunds to the specified refundable address.\\n     * @dev Requirements:\\n     * - Only aggregators can call this function.\\n     * @param _fee The amount to be deducted from the amount to be refunded.\\n     * @param _orderId The ID of the transaction.\\n     * @return bool the refund is successful.\\n     */\\n    function refund(uint256 _fee, bytes32 _orderId) external returns (bool);\\n\\n    /**\\n     * @notice Process an onramp order for cryptocurrency purchase\\n     * @dev This function is restricted to be called only by an authorized aggregator\\n     * @dev It processes an onramp orders and transfers tokens to the user\\n     * @param _orderId Unique identifier for the order being processed\\n     * @param _token Address of the token to be sent to the user\\n     * @param _amount Amount of tokens to be sent to the user\\n     * @param _senderFeeRecipient Address that will receive the sender fee\\n     * @param _senderFee Amount of fee to be paid to the sender fee recipient\\n     * @param _liquidityProvider Address of the liquidity provider\\n     * @param _recipient Address of the recipient who will receive the tokens\\n     * @param _rate Rate at which the tokens are being sent\\n     * @param _messageHash Hash of the message associated with the order\\n     * @return success Boolean indicating if the operation was successful\\n     */\\n    function processSettlement(\\n        bytes32 _orderId,\\n        address _token,\\n        uint256 _amount,\\n        address _senderFeeRecipient,\\n        uint96 _senderFee,\\n        address _liquidityProvider,\\n        uint96 _protocolFee,\\n        address _recipient,\\n        uint96 _rate,\\n        string calldata _messageHash\\n    ) external returns (bool);\\n\\n    /**\\n     * @notice Checks if a token is supported by Gateway.\\n     * @param _token The address of the token to check.\\n     * @return bool the token is supported.\\n     */\\n    function isTokenSupported(address _token) external view returns (bool);\\n\\n    /**\\n     * @notice Gets the details of an order.\\n     * @param _orderId The ID of the order.\\n     * @return Order The order details.\\n     */\\n    function getOrderInfo(\\n        bytes32 _orderId\\n    ) external view returns (Order memory);\\n\\n    /**\\n     * @notice Gets the fee details of Gateway.\\n     * @return protocolReward The protocol reward amount.\\n     * @return max_bps The maximum basis points.\\n     */\\n    function getFeeDetails()\\n        external\\n        view\\n        returns (uint64 protocolReward, uint256 max_bps);\\n}\\n\",\"keccak256\":\"0x15d5707529c9577ca82446a4f5034f1cf382fbbed2ae368af4711165e33d42b6\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"contracts/Gateway.sol:Gateway","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"contracts/Gateway.sol:Gateway","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"contracts/Gateway.sol:Gateway","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"contracts/Gateway.sol:Gateway","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":1756,"contract":"contracts/Gateway.sol:Gateway","label":"MAX_BPS","offset":0,"slot":"151","type":"t_uint256"},{"astId":1758,"contract":"contracts/Gateway.sol:Gateway","label":"protocolFeePercent","offset":0,"slot":"152","type":"t_uint64"},{"astId":1760,"contract":"contracts/Gateway.sol:Gateway","label":"treasuryAddress","offset":8,"slot":"152","type":"t_address"},{"astId":1762,"contract":"contracts/Gateway.sol:Gateway","label":"_aggregatorAddress","offset":0,"slot":"153","type":"t_address"},{"astId":1766,"contract":"contracts/Gateway.sol:Gateway","label":"_isTokenSupported","offset":0,"slot":"154","type":"t_mapping(t_address,t_uint256)"},{"astId":1770,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)50_storage"},{"astId":430,"contract":"contracts/Gateway.sol:Gateway","label":"_paused","offset":0,"slot":"205","type":"t_bool"},{"astId":535,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"206","type":"t_array(t_uint256)49_storage"},{"astId":1020,"contract":"contracts/Gateway.sol:Gateway","label":"order","offset":0,"slot":"255","type":"t_mapping(t_bytes32,t_struct(Order)2020_storage)"},{"astId":1024,"contract":"contracts/Gateway.sol:Gateway","label":"_nonce","offset":0,"slot":"256","type":"t_mapping(t_address,t_uint256)"},{"astId":1028,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"257","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(Order)2020_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct IGateway.Order)","numberOfBytes":"32","value":"t_struct(Order)2020_storage"},"t_struct(Order)2020_storage":{"encoding":"inplace","label":"struct IGateway.Order","members":[{"astId":2001,"contract":"contracts/Gateway.sol:Gateway","label":"sender","offset":0,"slot":"0","type":"t_address"},{"astId":2003,"contract":"contracts/Gateway.sol:Gateway","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":2005,"contract":"contracts/Gateway.sol:Gateway","label":"senderFeeRecipient","offset":0,"slot":"2","type":"t_address"},{"astId":2007,"contract":"contracts/Gateway.sol:Gateway","label":"senderFee","offset":0,"slot":"3","type":"t_uint256"},{"astId":2009,"contract":"contracts/Gateway.sol:Gateway","label":"protocolFee","offset":0,"slot":"4","type":"t_uint256"},{"astId":2011,"contract":"contracts/Gateway.sol:Gateway","label":"isFulfilled","offset":0,"slot":"5","type":"t_bool"},{"astId":2013,"contract":"contracts/Gateway.sol:Gateway","label":"isRefunded","offset":1,"slot":"5","type":"t_bool"},{"astId":2015,"contract":"contracts/Gateway.sol:Gateway","label":"refundAddress","offset":2,"slot":"5","type":"t_address"},{"astId":2017,"contract":"contracts/Gateway.sol:Gateway","label":"currentBPS","offset":0,"slot":"6","type":"t_uint96"},{"astId":2019,"contract":"contracts/Gateway.sol:Gateway","label":"amount","offset":0,"slot":"7","type":"t_uint256"}],"numberOfBytes":"256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{},"notice":"This contract serves as a gateway for creating orders and managing settlements.","version":1}}},"contracts/GatewaySettingManager.sol":{"GatewaySettingManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"ProtocolAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"protocolFee","type":"uint64"}],"name":"ProtocolFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"value","type":"address"},{"indexed":false,"internalType":"uint256","name":"status","type":"uint256"}],"name":"SettingManagerBool","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"},{"internalType":"uint256","name":"status","type":"uint256"}],"name":"settingManagerBool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"}],"name":"updateProtocolAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_protocolFeePercent","type":"uint64"}],"name":"updateProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"settingManagerBool(bytes32,address,uint256)":{"details":"Sets the boolean value for a specific setting.","params":{"status":"The boolean value to be set. Requirements: - The value must not be a zero address.","value":"The address or value associated with the setting.","what":"The setting to be updated."}},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"updateProtocolAddress(bytes32,address)":{"details":"Updates a protocol address.","params":{"value":"The new address to be set. Requirements: - The value must not be a zero address.","what":"The address type to be updated (treasury or aggregator)."}},"updateProtocolFee(uint64)":{"details":"Updates the protocol fee percentage.","params":{"_protocolFeePercent":"The new protocol fee percentage to be set."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610edf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d9578063cd992400146100f7578063e30c397814610113578063f2fde38b1461013157610088565b806340ebc6771461008d57806347094e2e146100a9578063715018a6146100c557806379ba5097146100cf575b600080fd5b6100a760048036038101906100a291906109bd565b61014d565b005b6100c360048036038101906100be9190610a3d565b610415565b005b6100cd610480565b005b6100d7610494565b005b6100e1610521565b6040516100ee9190610a79565b60405180910390f35b610111600480360381019061010c9190610aca565b61054b565b005b61011b6106d0565b6040516101289190610a79565b60405180910390f35b61014b60048036038101906101469190610b1d565b6106fa565b005b6101556107a7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb90610ba7565b60405180910390fd5b60007f747265617375727900000000000000000000000000000000000000000000000083036102c7578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027490610c39565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506103c5565b7f61676772656761746f720000000000000000000000000000000000000000000083036103c4578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610ccb565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610410578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b61041d6107a7565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b816040516104759190610cfa565b60405180910390a150565b6104886107a7565b6104926000610825565b565b600061049e610856565b90508073ffffffffffffffffffffffffffffffffffffffff166104bf6106d0565b73ffffffffffffffffffffffffffffffffffffffff1614610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610d87565b60405180910390fd5b61051e81610825565b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105536107a7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610ba7565b60405180910390fd5b60018114806105d15750600281145b610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610df3565b60405180910390fd5b7f746f6b656e00000000000000000000000000000000000000000000000000000083036106cb5780609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c836040516106c29190610e22565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107026107a7565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610762610521565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107af610856565b73ffffffffffffffffffffffffffffffffffffffff166107cd610521565b73ffffffffffffffffffffffffffffffffffffffff1614610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081a90610e89565b60405180910390fd5b565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556108538161085e565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61093c81610929565b811461094757600080fd5b50565b60008135905061095981610933565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098a8261095f565b9050919050565b61099a8161097f565b81146109a557600080fd5b50565b6000813590506109b781610991565b92915050565b600080604083850312156109d4576109d3610924565b5b60006109e28582860161094a565b92505060206109f3858286016109a8565b9150509250929050565b600067ffffffffffffffff82169050919050565b610a1a816109fd565b8114610a2557600080fd5b50565b600081359050610a3781610a11565b92915050565b600060208284031215610a5357610a52610924565b5b6000610a6184828501610a28565b91505092915050565b610a738161097f565b82525050565b6000602082019050610a8e6000830184610a6a565b92915050565b6000819050919050565b610aa781610a94565b8114610ab257600080fd5b50565b600081359050610ac481610a9e565b92915050565b600080600060608486031215610ae357610ae2610924565b5b6000610af18682870161094a565b9350506020610b02868287016109a8565b9250506040610b1386828701610ab5565b9150509250925092565b600060208284031215610b3357610b32610924565b5b6000610b41848285016109a8565b91505092915050565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b6000610b91601583610b4a565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b6000610c23602583610b4a565b9150610c2e82610bc7565b604082019050919050565b60006020820190508181036000830152610c5281610c16565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b6000610cb5602783610b4a565b9150610cc082610c59565b604082019050919050565b60006020820190508181036000830152610ce481610ca8565b9050919050565b610cf4816109fd565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000610d71602983610b4a565b9150610d7c82610d15565b604082019050919050565b60006020820190508181036000830152610da081610d64565b9050919050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b6000610ddd601783610b4a565b9150610de882610da7565b602082019050919050565b60006020820190508181036000830152610e0c81610dd0565b9050919050565b610e1c81610a94565b82525050565b6000602082019050610e376000830184610e13565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e73602083610b4a565b9150610e7e82610e3d565b602082019050919050565b60006020820190508181036000830152610ea281610e66565b905091905056fea264697066735822122081a5d6584d68533dd564cd3881f4d239736bf0f05a86d786e63e89ce2a2d220664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEDF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x131 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x2C7 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3C5 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x3C4 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x375 SWAP1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x410 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x41D PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x488 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x492 PUSH1 0x0 PUSH2 0x825 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E PUSH2 0x856 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BF PUSH2 0x6D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E DUP2 PUSH2 0x825 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x5D1 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x6CB JUMPI DUP1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x702 PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x762 PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x856 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CD PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81A SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x853 DUP2 PUSH2 0x85E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93C DUP2 PUSH2 0x929 JUMP JUMPDEST DUP2 EQ PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x959 DUP2 PUSH2 0x933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98A DUP3 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99A DUP2 PUSH2 0x97F JUMP JUMPDEST DUP2 EQ PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B7 DUP2 PUSH2 0x991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9D4 JUMPI PUSH2 0x9D3 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E2 DUP6 DUP3 DUP7 ADD PUSH2 0x94A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9F3 DUP6 DUP3 DUP7 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1A DUP2 PUSH2 0x9FD JUMP JUMPDEST DUP2 EQ PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA37 DUP2 PUSH2 0xA11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA52 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP5 DUP3 DUP6 ADD PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA73 DUP2 PUSH2 0x97F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA94 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC4 DUP2 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF1 DUP7 DUP3 DUP8 ADD PUSH2 0x94A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB02 DUP7 DUP3 DUP8 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB13 DUP7 DUP3 DUP8 ADD PUSH2 0xAB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB41 DUP5 DUP3 DUP6 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB91 PUSH1 0x15 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC0 DUP2 PUSH2 0xB84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC23 PUSH1 0x25 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xC2E DUP3 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC52 DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB5 PUSH1 0x27 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xCC0 DUP3 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE4 DUP2 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0x9FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD71 PUSH1 0x29 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xD7C DUP3 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDA0 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD PUSH1 0x17 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xDE8 DUP3 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0C DUP2 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xA94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE73 PUSH1 0x20 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xE7E DUP3 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEA2 DUP2 PUSH2 0xE66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xA5 0xD6 PC 0x4D PUSH9 0x533DD564CD3881F4D2 CODECOPY PUSH20 0x6BF0F05A86D786E63E89CE2A2D220664736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"276:2570:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_176":{"entryPoint":1959,"id":176,"parameterSlots":0,"returnSlots":0},"@_msgSender_894":{"entryPoint":2134,"id":894,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_233":{"entryPoint":2142,"id":233,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_78":{"entryPoint":2085,"id":78,"parameterSlots":1,"returnSlots":0},"@acceptOwnership_100":{"entryPoint":1172,"id":100,"parameterSlots":0,"returnSlots":0},"@owner_162":{"entryPoint":1313,"id":162,"parameterSlots":0,"returnSlots":1},"@pendingOwner_41":{"entryPoint":1744,"id":41,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_190":{"entryPoint":1152,"id":190,"parameterSlots":0,"returnSlots":0},"@settingManagerBool_1843":{"entryPoint":1355,"id":1843,"parameterSlots":3,"returnSlots":0},"@transferOwnership_61":{"entryPoint":1786,"id":61,"parameterSlots":1,"returnSlots":0},"@updateProtocolAddress_1932":{"entryPoint":333,"id":1932,"parameterSlots":2,"returnSlots":0},"@updateProtocolFee_1860":{"entryPoint":1045,"id":1860,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2378,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":2600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":2493,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_uint256":{"entryPoint":2762,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint64":{"entryPoint":2621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2666,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack":{"entryPoint":2948,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack":{"entryPoint":3428,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack":{"entryPoint":3536,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3686,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack":{"entryPoint":3094,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack":{"entryPoint":3240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3603,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":3307,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2983,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3721,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3275,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2890,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2431,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2345,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2399,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2708,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":2557,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2340,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf":{"entryPoint":2907,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":3349,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338":{"entryPoint":3495,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3645,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead":{"entryPoint":3015,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4":{"entryPoint":3161,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2449,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2355,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2718,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":2577,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10945:10","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:10","statements":[{"nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:10"},"nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:12:10"},"nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:10"},"nodeType":"YulFunctionCall","src":"310:12:10"},"nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nodeType":"YulBlock","src":"379:32:10","statements":[{"nodeType":"YulAssignment","src":"389:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:77:10"},{"body":{"nodeType":"YulBlock","src":"460:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:10"},"nodeType":"YulFunctionCall","src":"519:12:10"},"nodeType":"YulExpressionStatement","src":"519:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"490:17:10"},"nodeType":"YulFunctionCall","src":"490:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:10"},"nodeType":"YulFunctionCall","src":"480:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:10"},"nodeType":"YulFunctionCall","src":"473:43:10"},"nodeType":"YulIf","src":"470:63:10"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:10","type":""}],"src":"417:122:10"},{"body":{"nodeType":"YulBlock","src":"597:87:10","statements":[{"nodeType":"YulAssignment","src":"607:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:10"},"nodeType":"YulFunctionCall","src":"616:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:10"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"645:26:10"},"nodeType":"YulFunctionCall","src":"645:33:10"},"nodeType":"YulExpressionStatement","src":"645:33:10"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:10","type":""}],"src":"545:139:10"},{"body":{"nodeType":"YulBlock","src":"735:81:10","statements":[{"nodeType":"YulAssignment","src":"745:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"760:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"767:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:10"},"nodeType":"YulFunctionCall","src":"756:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"745:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"717:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"727:7:10","type":""}],"src":"690:126:10"},{"body":{"nodeType":"YulBlock","src":"867:51:10","statements":[{"nodeType":"YulAssignment","src":"877:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"906:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"888:17:10"},"nodeType":"YulFunctionCall","src":"888:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"877:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"849:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"859:7:10","type":""}],"src":"822:96:10"},{"body":{"nodeType":"YulBlock","src":"967:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:10"},"nodeType":"YulFunctionCall","src":"1026:12:10"},"nodeType":"YulExpressionStatement","src":"1026:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"997:17:10"},"nodeType":"YulFunctionCall","src":"997:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:10"},"nodeType":"YulFunctionCall","src":"987:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:10"},"nodeType":"YulFunctionCall","src":"980:43:10"},"nodeType":"YulIf","src":"977:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:10","type":""}],"src":"924:122:10"},{"body":{"nodeType":"YulBlock","src":"1104:87:10","statements":[{"nodeType":"YulAssignment","src":"1114:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:10"},"nodeType":"YulFunctionCall","src":"1123:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1152:26:10"},"nodeType":"YulFunctionCall","src":"1152:33:10"},"nodeType":"YulExpressionStatement","src":"1152:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:10","type":""}],"src":"1052:139:10"},{"body":{"nodeType":"YulBlock","src":"1280:391:10","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:10"},"nodeType":"YulFunctionCall","src":"1328:79:10"},"nodeType":"YulExpressionStatement","src":"1328:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:10"},"nodeType":"YulFunctionCall","src":"1297:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:10"},"nodeType":"YulFunctionCall","src":"1293:32:10"},"nodeType":"YulIf","src":"1290:119:10"},{"nodeType":"YulBlock","src":"1419:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:10"},"nodeType":"YulFunctionCall","src":"1494:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1473:20:10"},"nodeType":"YulFunctionCall","src":"1473:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:10"}]}]},{"nodeType":"YulBlock","src":"1546:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:10","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:10"},"nodeType":"YulFunctionCall","src":"1622:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1601:20:10"},"nodeType":"YulFunctionCall","src":"1601:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:10","type":""}],"src":"1197:474:10"},{"body":{"nodeType":"YulBlock","src":"1721:57:10","statements":[{"nodeType":"YulAssignment","src":"1731:41:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1753:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:10"},"nodeType":"YulFunctionCall","src":"1742:30:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:10"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:10","type":""}],"src":"1677:101:10"},{"body":{"nodeType":"YulBlock","src":"1826:78:10","statements":[{"body":{"nodeType":"YulBlock","src":"1882:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1891:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1894:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1884:6:10"},"nodeType":"YulFunctionCall","src":"1884:12:10"},"nodeType":"YulExpressionStatement","src":"1884:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1849:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1873:5:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1856:16:10"},"nodeType":"YulFunctionCall","src":"1856:23:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1846:2:10"},"nodeType":"YulFunctionCall","src":"1846:34:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1839:6:10"},"nodeType":"YulFunctionCall","src":"1839:42:10"},"nodeType":"YulIf","src":"1836:62:10"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1819:5:10","type":""}],"src":"1784:120:10"},{"body":{"nodeType":"YulBlock","src":"1961:86:10","statements":[{"nodeType":"YulAssignment","src":"1971:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1993:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1980:12:10"},"nodeType":"YulFunctionCall","src":"1980:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1971:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2035:5:10"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"2009:25:10"},"nodeType":"YulFunctionCall","src":"2009:32:10"},"nodeType":"YulExpressionStatement","src":"2009:32:10"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1939:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1947:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1955:5:10","type":""}],"src":"1910:137:10"},{"body":{"nodeType":"YulBlock","src":"2118:262:10","statements":[{"body":{"nodeType":"YulBlock","src":"2164:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2166:77:10"},"nodeType":"YulFunctionCall","src":"2166:79:10"},"nodeType":"YulExpressionStatement","src":"2166:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2139:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2135:3:10"},"nodeType":"YulFunctionCall","src":"2135:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2160:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2131:3:10"},"nodeType":"YulFunctionCall","src":"2131:32:10"},"nodeType":"YulIf","src":"2128:119:10"},{"nodeType":"YulBlock","src":"2257:116:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2272:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2286:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2276:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2301:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2335:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2346:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:10"},"nodeType":"YulFunctionCall","src":"2331:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2355:7:10"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"2311:19:10"},"nodeType":"YulFunctionCall","src":"2311:52:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2301:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2088:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2099:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2111:6:10","type":""}],"src":"2053:327:10"},{"body":{"nodeType":"YulBlock","src":"2451:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2468:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2491:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2473:17:10"},"nodeType":"YulFunctionCall","src":"2473:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2461:6:10"},"nodeType":"YulFunctionCall","src":"2461:37:10"},"nodeType":"YulExpressionStatement","src":"2461:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2439:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2446:3:10","type":""}],"src":"2386:118:10"},{"body":{"nodeType":"YulBlock","src":"2608:124:10","statements":[{"nodeType":"YulAssignment","src":"2618:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2630:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2641:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:10"},"nodeType":"YulFunctionCall","src":"2626:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2618:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2698:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2711:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2722:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:10"},"nodeType":"YulFunctionCall","src":"2707:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2654:43:10"},"nodeType":"YulFunctionCall","src":"2654:71:10"},"nodeType":"YulExpressionStatement","src":"2654:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2580:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2592:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2603:4:10","type":""}],"src":"2510:222:10"},{"body":{"nodeType":"YulBlock","src":"2783:32:10","statements":[{"nodeType":"YulAssignment","src":"2793:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"2804:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2793:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2765:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2775:7:10","type":""}],"src":"2738:77:10"},{"body":{"nodeType":"YulBlock","src":"2864:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"2921:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2930:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2933:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2923:6:10"},"nodeType":"YulFunctionCall","src":"2923:12:10"},"nodeType":"YulExpressionStatement","src":"2923:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2887:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2912:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2894:17:10"},"nodeType":"YulFunctionCall","src":"2894:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2884:2:10"},"nodeType":"YulFunctionCall","src":"2884:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2877:6:10"},"nodeType":"YulFunctionCall","src":"2877:43:10"},"nodeType":"YulIf","src":"2874:63:10"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2857:5:10","type":""}],"src":"2821:122:10"},{"body":{"nodeType":"YulBlock","src":"3001:87:10","statements":[{"nodeType":"YulAssignment","src":"3011:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3033:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3020:12:10"},"nodeType":"YulFunctionCall","src":"3020:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3011:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3049:26:10"},"nodeType":"YulFunctionCall","src":"3049:33:10"},"nodeType":"YulExpressionStatement","src":"3049:33:10"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2979:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"2987:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2995:5:10","type":""}],"src":"2949:139:10"},{"body":{"nodeType":"YulBlock","src":"3194:519:10","statements":[{"body":{"nodeType":"YulBlock","src":"3240:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3242:77:10"},"nodeType":"YulFunctionCall","src":"3242:79:10"},"nodeType":"YulExpressionStatement","src":"3242:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3215:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3224:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:10"},"nodeType":"YulFunctionCall","src":"3211:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3236:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3207:3:10"},"nodeType":"YulFunctionCall","src":"3207:32:10"},"nodeType":"YulIf","src":"3204:119:10"},{"nodeType":"YulBlock","src":"3333:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3348:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3352:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:10"},"nodeType":"YulFunctionCall","src":"3408:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3387:20:10"},"nodeType":"YulFunctionCall","src":"3387:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3377:6:10"}]}]},{"nodeType":"YulBlock","src":"3460:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:10"},"nodeType":"YulFunctionCall","src":"3536:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3515:20:10"},"nodeType":"YulFunctionCall","src":"3515:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3505:6:10"}]}]},{"nodeType":"YulBlock","src":"3588:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3617:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3633:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3668:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3679:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3664:3:10"},"nodeType":"YulFunctionCall","src":"3664:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3688:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3643:20:10"},"nodeType":"YulFunctionCall","src":"3643:53:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3633:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3148:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3159:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3171:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3179:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3187:6:10","type":""}],"src":"3094:619:10"},{"body":{"nodeType":"YulBlock","src":"3785:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"3831:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3833:77:10"},"nodeType":"YulFunctionCall","src":"3833:79:10"},"nodeType":"YulExpressionStatement","src":"3833:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3806:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3815:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3802:3:10"},"nodeType":"YulFunctionCall","src":"3802:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3827:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3798:3:10"},"nodeType":"YulFunctionCall","src":"3798:32:10"},"nodeType":"YulIf","src":"3795:119:10"},{"nodeType":"YulBlock","src":"3924:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3939:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3953:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3943:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3968:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4003:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"4014:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:10"},"nodeType":"YulFunctionCall","src":"3999:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4023:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3978:20:10"},"nodeType":"YulFunctionCall","src":"3978:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3968:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3755:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3766:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3778:6:10","type":""}],"src":"3719:329:10"},{"body":{"nodeType":"YulBlock","src":"4150:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4167:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"4172:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4160:6:10"},"nodeType":"YulFunctionCall","src":"4160:19:10"},"nodeType":"YulExpressionStatement","src":"4160:19:10"},{"nodeType":"YulAssignment","src":"4188:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4207:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4212:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4203:3:10"},"nodeType":"YulFunctionCall","src":"4203:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4188:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4122:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"4127:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4138:11:10","type":""}],"src":"4054:169:10"},{"body":{"nodeType":"YulBlock","src":"4335:65:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4357:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4365:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4353:3:10"},"nodeType":"YulFunctionCall","src":"4353:14:10"},{"hexValue":"476174657761793a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"4369:23:10","type":"","value":"Gateway: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4346:6:10"},"nodeType":"YulFunctionCall","src":"4346:47:10"},"nodeType":"YulExpressionStatement","src":"4346:47:10"}]},"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4327:6:10","type":""}],"src":"4229:171:10"},{"body":{"nodeType":"YulBlock","src":"4552:220:10","statements":[{"nodeType":"YulAssignment","src":"4562:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4628:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4633:2:10","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4569:58:10"},"nodeType":"YulFunctionCall","src":"4569:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4562:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4734:3:10"}],"functionName":{"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulIdentifier","src":"4645:88:10"},"nodeType":"YulFunctionCall","src":"4645:93:10"},"nodeType":"YulExpressionStatement","src":"4645:93:10"},{"nodeType":"YulAssignment","src":"4747:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4758:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"4763:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4754:3:10"},"nodeType":"YulFunctionCall","src":"4754:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4747:3:10"}]}]},"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4540:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4548:3:10","type":""}],"src":"4406:366:10"},{"body":{"nodeType":"YulBlock","src":"4949:248:10","statements":[{"nodeType":"YulAssignment","src":"4959:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4971:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4982:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4967:3:10"},"nodeType":"YulFunctionCall","src":"4967:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4959:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5006:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5017:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5002:3:10"},"nodeType":"YulFunctionCall","src":"5002:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5025:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"5031:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5021:3:10"},"nodeType":"YulFunctionCall","src":"5021:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4995:6:10"},"nodeType":"YulFunctionCall","src":"4995:47:10"},"nodeType":"YulExpressionStatement","src":"4995:47:10"},{"nodeType":"YulAssignment","src":"5051:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5185:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5059:124:10"},"nodeType":"YulFunctionCall","src":"5059:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5051:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4929:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4944:4:10","type":""}],"src":"4778:419:10"},{"body":{"nodeType":"YulBlock","src":"5309:118:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5331:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5339:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5327:3:10"},"nodeType":"YulFunctionCall","src":"5327:14:10"},{"hexValue":"476174657761793a207472656173757279206164647265737320616c72656164","kind":"string","nodeType":"YulLiteral","src":"5343:34:10","type":"","value":"Gateway: treasury address alread"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5320:6:10"},"nodeType":"YulFunctionCall","src":"5320:58:10"},"nodeType":"YulExpressionStatement","src":"5320:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5399:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5407:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:10"},"nodeType":"YulFunctionCall","src":"5395:15:10"},{"hexValue":"7920736574","kind":"string","nodeType":"YulLiteral","src":"5412:7:10","type":"","value":"y set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5388:6:10"},"nodeType":"YulFunctionCall","src":"5388:32:10"},"nodeType":"YulExpressionStatement","src":"5388:32:10"}]},"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5301:6:10","type":""}],"src":"5203:224:10"},{"body":{"nodeType":"YulBlock","src":"5579:220:10","statements":[{"nodeType":"YulAssignment","src":"5589:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5655:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5660:2:10","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5596:58:10"},"nodeType":"YulFunctionCall","src":"5596:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5589:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5761:3:10"}],"functionName":{"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulIdentifier","src":"5672:88:10"},"nodeType":"YulFunctionCall","src":"5672:93:10"},"nodeType":"YulExpressionStatement","src":"5672:93:10"},{"nodeType":"YulAssignment","src":"5774:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5785:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5790:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5781:3:10"},"nodeType":"YulFunctionCall","src":"5781:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5774:3:10"}]}]},"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5567:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5575:3:10","type":""}],"src":"5433:366:10"},{"body":{"nodeType":"YulBlock","src":"5976:248:10","statements":[{"nodeType":"YulAssignment","src":"5986:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5998:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6009:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5994:3:10"},"nodeType":"YulFunctionCall","src":"5994:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5986:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6033:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6044:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6029:3:10"},"nodeType":"YulFunctionCall","src":"6029:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6052:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6058:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6048:3:10"},"nodeType":"YulFunctionCall","src":"6048:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6022:6:10"},"nodeType":"YulFunctionCall","src":"6022:47:10"},"nodeType":"YulExpressionStatement","src":"6022:47:10"},{"nodeType":"YulAssignment","src":"6078:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6212:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6086:124:10"},"nodeType":"YulFunctionCall","src":"6086:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6078:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5956:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5971:4:10","type":""}],"src":"5805:419:10"},{"body":{"nodeType":"YulBlock","src":"6336:120:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6358:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6366:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6354:3:10"},"nodeType":"YulFunctionCall","src":"6354:14:10"},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c7265","kind":"string","nodeType":"YulLiteral","src":"6370:34:10","type":"","value":"Gateway: aggregator address alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6347:6:10"},"nodeType":"YulFunctionCall","src":"6347:58:10"},"nodeType":"YulExpressionStatement","src":"6347:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6426:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6434:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6422:3:10"},"nodeType":"YulFunctionCall","src":"6422:15:10"},{"hexValue":"61647920736574","kind":"string","nodeType":"YulLiteral","src":"6439:9:10","type":"","value":"ady set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6415:6:10"},"nodeType":"YulFunctionCall","src":"6415:34:10"},"nodeType":"YulExpressionStatement","src":"6415:34:10"}]},"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6328:6:10","type":""}],"src":"6230:226:10"},{"body":{"nodeType":"YulBlock","src":"6608:220:10","statements":[{"nodeType":"YulAssignment","src":"6618:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6684:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6689:2:10","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6625:58:10"},"nodeType":"YulFunctionCall","src":"6625:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6618:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6790:3:10"}],"functionName":{"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulIdentifier","src":"6701:88:10"},"nodeType":"YulFunctionCall","src":"6701:93:10"},"nodeType":"YulExpressionStatement","src":"6701:93:10"},{"nodeType":"YulAssignment","src":"6803:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6814:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"6819:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6810:3:10"},"nodeType":"YulFunctionCall","src":"6810:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6803:3:10"}]}]},"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6596:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6604:3:10","type":""}],"src":"6462:366:10"},{"body":{"nodeType":"YulBlock","src":"7005:248:10","statements":[{"nodeType":"YulAssignment","src":"7015:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7027:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7038:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7023:3:10"},"nodeType":"YulFunctionCall","src":"7023:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7015:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7062:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7073:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7058:3:10"},"nodeType":"YulFunctionCall","src":"7058:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7081:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7087:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7077:3:10"},"nodeType":"YulFunctionCall","src":"7077:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7051:6:10"},"nodeType":"YulFunctionCall","src":"7051:47:10"},"nodeType":"YulExpressionStatement","src":"7051:47:10"},{"nodeType":"YulAssignment","src":"7107:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7241:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7115:124:10"},"nodeType":"YulFunctionCall","src":"7115:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7107:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6985:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7000:4:10","type":""}],"src":"6834:419:10"},{"body":{"nodeType":"YulBlock","src":"7322:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7339:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7361:5:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"7344:16:10"},"nodeType":"YulFunctionCall","src":"7344:23:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7332:6:10"},"nodeType":"YulFunctionCall","src":"7332:36:10"},"nodeType":"YulExpressionStatement","src":"7332:36:10"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7310:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7317:3:10","type":""}],"src":"7259:115:10"},{"body":{"nodeType":"YulBlock","src":"7476:122:10","statements":[{"nodeType":"YulAssignment","src":"7486:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7498:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7509:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7494:3:10"},"nodeType":"YulFunctionCall","src":"7494:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7486:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7564:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7588:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:10"},"nodeType":"YulFunctionCall","src":"7573:17:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"7522:41:10"},"nodeType":"YulFunctionCall","src":"7522:69:10"},"nodeType":"YulExpressionStatement","src":"7522:69:10"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7448:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7460:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7471:4:10","type":""}],"src":"7380:218:10"},{"body":{"nodeType":"YulBlock","src":"7710:122:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7732:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7740:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7728:3:10"},"nodeType":"YulFunctionCall","src":"7728:14:10"},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"7744:34:10","type":"","value":"Ownable2Step: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7721:6:10"},"nodeType":"YulFunctionCall","src":"7721:58:10"},"nodeType":"YulExpressionStatement","src":"7721:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7800:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7808:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7796:3:10"},"nodeType":"YulFunctionCall","src":"7796:15:10"},{"hexValue":"6e6577206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7813:11:10","type":"","value":"new owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7789:6:10"},"nodeType":"YulFunctionCall","src":"7789:36:10"},"nodeType":"YulExpressionStatement","src":"7789:36:10"}]},"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7702:6:10","type":""}],"src":"7604:228:10"},{"body":{"nodeType":"YulBlock","src":"7984:220:10","statements":[{"nodeType":"YulAssignment","src":"7994:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8060:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8065:2:10","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8001:58:10"},"nodeType":"YulFunctionCall","src":"8001:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7994:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8166:3:10"}],"functionName":{"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulIdentifier","src":"8077:88:10"},"nodeType":"YulFunctionCall","src":"8077:93:10"},"nodeType":"YulExpressionStatement","src":"8077:93:10"},{"nodeType":"YulAssignment","src":"8179:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8190:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8195:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8186:3:10"},"nodeType":"YulFunctionCall","src":"8186:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8179:3:10"}]}]},"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7972:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7980:3:10","type":""}],"src":"7838:366:10"},{"body":{"nodeType":"YulBlock","src":"8381:248:10","statements":[{"nodeType":"YulAssignment","src":"8391:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8403:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8414:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8399:3:10"},"nodeType":"YulFunctionCall","src":"8399:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8391:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8438:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8449:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8434:3:10"},"nodeType":"YulFunctionCall","src":"8434:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8457:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8463:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8453:3:10"},"nodeType":"YulFunctionCall","src":"8453:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8427:6:10"},"nodeType":"YulFunctionCall","src":"8427:47:10"},"nodeType":"YulExpressionStatement","src":"8427:47:10"},{"nodeType":"YulAssignment","src":"8483:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8617:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8491:124:10"},"nodeType":"YulFunctionCall","src":"8491:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8483:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8361:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8376:4:10","type":""}],"src":"8210:419:10"},{"body":{"nodeType":"YulBlock","src":"8741:67:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8763:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"8771:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8759:3:10"},"nodeType":"YulFunctionCall","src":"8759:14:10"},{"hexValue":"476174657761793a20696e76616c696420737461747573","kind":"string","nodeType":"YulLiteral","src":"8775:25:10","type":"","value":"Gateway: invalid status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8752:6:10"},"nodeType":"YulFunctionCall","src":"8752:49:10"},"nodeType":"YulExpressionStatement","src":"8752:49:10"}]},"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8733:6:10","type":""}],"src":"8635:173:10"},{"body":{"nodeType":"YulBlock","src":"8960:220:10","statements":[{"nodeType":"YulAssignment","src":"8970:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9036:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9041:2:10","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8977:58:10"},"nodeType":"YulFunctionCall","src":"8977:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8970:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9142:3:10"}],"functionName":{"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulIdentifier","src":"9053:88:10"},"nodeType":"YulFunctionCall","src":"9053:93:10"},"nodeType":"YulExpressionStatement","src":"9053:93:10"},{"nodeType":"YulAssignment","src":"9155:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9166:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"9171:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9162:3:10"},"nodeType":"YulFunctionCall","src":"9162:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9155:3:10"}]}]},"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8948:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8956:3:10","type":""}],"src":"8814:366:10"},{"body":{"nodeType":"YulBlock","src":"9357:248:10","statements":[{"nodeType":"YulAssignment","src":"9367:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9379:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9390:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9375:3:10"},"nodeType":"YulFunctionCall","src":"9375:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9367:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9425:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:10"},"nodeType":"YulFunctionCall","src":"9410:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9433:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"9439:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9429:3:10"},"nodeType":"YulFunctionCall","src":"9429:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9403:6:10"},"nodeType":"YulFunctionCall","src":"9403:47:10"},"nodeType":"YulExpressionStatement","src":"9403:47:10"},{"nodeType":"YulAssignment","src":"9459:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9593:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9467:124:10"},"nodeType":"YulFunctionCall","src":"9467:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9459:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9337:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9352:4:10","type":""}],"src":"9186:419:10"},{"body":{"nodeType":"YulBlock","src":"9676:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9693:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9716:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9698:17:10"},"nodeType":"YulFunctionCall","src":"9698:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9686:6:10"},"nodeType":"YulFunctionCall","src":"9686:37:10"},"nodeType":"YulExpressionStatement","src":"9686:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9664:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9671:3:10","type":""}],"src":"9611:118:10"},{"body":{"nodeType":"YulBlock","src":"9833:124:10","statements":[{"nodeType":"YulAssignment","src":"9843:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9855:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9866:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9851:3:10"},"nodeType":"YulFunctionCall","src":"9851:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9843:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9923:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9936:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9947:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9932:3:10"},"nodeType":"YulFunctionCall","src":"9932:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9879:43:10"},"nodeType":"YulFunctionCall","src":"9879:71:10"},"nodeType":"YulExpressionStatement","src":"9879:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9805:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9817:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9828:4:10","type":""}],"src":"9735:222:10"},{"body":{"nodeType":"YulBlock","src":"10069:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10091:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"10099:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10087:3:10"},"nodeType":"YulFunctionCall","src":"10087:14:10"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10103:34:10","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10080:6:10"},"nodeType":"YulFunctionCall","src":"10080:58:10"},"nodeType":"YulExpressionStatement","src":"10080:58:10"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10061:6:10","type":""}],"src":"9963:182:10"},{"body":{"nodeType":"YulBlock","src":"10297:220:10","statements":[{"nodeType":"YulAssignment","src":"10307:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10373:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10378:2:10","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10314:58:10"},"nodeType":"YulFunctionCall","src":"10314:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10307:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10479:3:10"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"10390:88:10"},"nodeType":"YulFunctionCall","src":"10390:93:10"},"nodeType":"YulExpressionStatement","src":"10390:93:10"},{"nodeType":"YulAssignment","src":"10492:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10503:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10508:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10499:3:10"},"nodeType":"YulFunctionCall","src":"10499:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10492:3:10"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10285:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10293:3:10","type":""}],"src":"10151:366:10"},{"body":{"nodeType":"YulBlock","src":"10694:248:10","statements":[{"nodeType":"YulAssignment","src":"10704:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10716:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10727:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10712:3:10"},"nodeType":"YulFunctionCall","src":"10712:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10704:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10751:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10762:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10747:3:10"},"nodeType":"YulFunctionCall","src":"10747:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10770:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"10776:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10766:3:10"},"nodeType":"YulFunctionCall","src":"10766:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10740:6:10"},"nodeType":"YulFunctionCall","src":"10740:47:10"},"nodeType":"YulExpressionStatement","src":"10740:47:10"},{"nodeType":"YulAssignment","src":"10796:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10930:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10804:124:10"},"nodeType":"YulFunctionCall","src":"10804:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10796:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10674:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10689:4:10","type":""}],"src":"10523:419:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: treasury address alread\")\n\n        mstore(add(memPtr, 32), \"y set\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: aggregator address alre\")\n\n        mstore(add(memPtr, 32), \"ady set\")\n\n    }\n\n    function abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: invalid status\")\n\n    }\n\n    function abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d9578063cd992400146100f7578063e30c397814610113578063f2fde38b1461013157610088565b806340ebc6771461008d57806347094e2e146100a9578063715018a6146100c557806379ba5097146100cf575b600080fd5b6100a760048036038101906100a291906109bd565b61014d565b005b6100c360048036038101906100be9190610a3d565b610415565b005b6100cd610480565b005b6100d7610494565b005b6100e1610521565b6040516100ee9190610a79565b60405180910390f35b610111600480360381019061010c9190610aca565b61054b565b005b61011b6106d0565b6040516101289190610a79565b60405180910390f35b61014b60048036038101906101469190610b1d565b6106fa565b005b6101556107a7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb90610ba7565b60405180910390fd5b60007f747265617375727900000000000000000000000000000000000000000000000083036102c7578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027490610c39565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506103c5565b7f61676772656761746f720000000000000000000000000000000000000000000083036103c4578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610ccb565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610410578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b61041d6107a7565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b816040516104759190610cfa565b60405180910390a150565b6104886107a7565b6104926000610825565b565b600061049e610856565b90508073ffffffffffffffffffffffffffffffffffffffff166104bf6106d0565b73ffffffffffffffffffffffffffffffffffffffff1614610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610d87565b60405180910390fd5b61051e81610825565b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105536107a7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610ba7565b60405180910390fd5b60018114806105d15750600281145b610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610df3565b60405180910390fd5b7f746f6b656e00000000000000000000000000000000000000000000000000000083036106cb5780609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c836040516106c29190610e22565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107026107a7565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610762610521565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107af610856565b73ffffffffffffffffffffffffffffffffffffffff166107cd610521565b73ffffffffffffffffffffffffffffffffffffffff1614610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081a90610e89565b60405180910390fd5b565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556108538161085e565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61093c81610929565b811461094757600080fd5b50565b60008135905061095981610933565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098a8261095f565b9050919050565b61099a8161097f565b81146109a557600080fd5b50565b6000813590506109b781610991565b92915050565b600080604083850312156109d4576109d3610924565b5b60006109e28582860161094a565b92505060206109f3858286016109a8565b9150509250929050565b600067ffffffffffffffff82169050919050565b610a1a816109fd565b8114610a2557600080fd5b50565b600081359050610a3781610a11565b92915050565b600060208284031215610a5357610a52610924565b5b6000610a6184828501610a28565b91505092915050565b610a738161097f565b82525050565b6000602082019050610a8e6000830184610a6a565b92915050565b6000819050919050565b610aa781610a94565b8114610ab257600080fd5b50565b600081359050610ac481610a9e565b92915050565b600080600060608486031215610ae357610ae2610924565b5b6000610af18682870161094a565b9350506020610b02868287016109a8565b9250506040610b1386828701610ab5565b9150509250925092565b600060208284031215610b3357610b32610924565b5b6000610b41848285016109a8565b91505092915050565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b6000610b91601583610b4a565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b6000610c23602583610b4a565b9150610c2e82610bc7565b604082019050919050565b60006020820190508181036000830152610c5281610c16565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b6000610cb5602783610b4a565b9150610cc082610c59565b604082019050919050565b60006020820190508181036000830152610ce481610ca8565b9050919050565b610cf4816109fd565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000610d71602983610b4a565b9150610d7c82610d15565b604082019050919050565b60006020820190508181036000830152610da081610d64565b9050919050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b6000610ddd601783610b4a565b9150610de882610da7565b602082019050919050565b60006020820190508181036000830152610e0c81610dd0565b9050919050565b610e1c81610a94565b82525050565b6000602082019050610e376000830184610e13565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e73602083610b4a565b9150610e7e82610e3d565b602082019050919050565b60006020820190508181036000830152610ea281610e66565b905091905056fea264697066735822122081a5d6584d68533dd564cd3881f4d239736bf0f05a86d786e63e89ce2a2d220664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x131 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x2C7 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3C5 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x3C4 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x375 SWAP1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x410 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x41D PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x488 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x492 PUSH1 0x0 PUSH2 0x825 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E PUSH2 0x856 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BF PUSH2 0x6D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E DUP2 PUSH2 0x825 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x5D1 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x6CB JUMPI DUP1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x702 PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x762 PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x856 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CD PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81A SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x853 DUP2 PUSH2 0x85E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93C DUP2 PUSH2 0x929 JUMP JUMPDEST DUP2 EQ PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x959 DUP2 PUSH2 0x933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98A DUP3 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99A DUP2 PUSH2 0x97F JUMP JUMPDEST DUP2 EQ PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B7 DUP2 PUSH2 0x991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9D4 JUMPI PUSH2 0x9D3 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E2 DUP6 DUP3 DUP7 ADD PUSH2 0x94A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9F3 DUP6 DUP3 DUP7 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1A DUP2 PUSH2 0x9FD JUMP JUMPDEST DUP2 EQ PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA37 DUP2 PUSH2 0xA11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA52 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP5 DUP3 DUP6 ADD PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA73 DUP2 PUSH2 0x97F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA94 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC4 DUP2 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF1 DUP7 DUP3 DUP8 ADD PUSH2 0x94A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB02 DUP7 DUP3 DUP8 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB13 DUP7 DUP3 DUP8 ADD PUSH2 0xAB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB41 DUP5 DUP3 DUP6 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB91 PUSH1 0x15 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC0 DUP2 PUSH2 0xB84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC23 PUSH1 0x25 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xC2E DUP3 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC52 DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB5 PUSH1 0x27 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xCC0 DUP3 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE4 DUP2 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0x9FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD71 PUSH1 0x29 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xD7C DUP3 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDA0 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD PUSH1 0x17 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xDE8 DUP3 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0C DUP2 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xA94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE73 PUSH1 0x20 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xE7E DUP3 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEA2 DUP2 PUSH2 0xE66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xA5 0xD6 PC 0x4D PUSH9 0x533DD564CD3881F4D2 CODECOPY PUSH20 0x6BF0F05A86D786E63E89CE2A2D220664736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"276:2570:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1894:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2085:101:1;;;:::i;:::-;;2031:212:0;;;:::i;:::-;;1462:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1426:335:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1144:99:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1436:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:551:8;1355:13:1;:11;:13::i;:::-;2401:1:8::1;2384:19;;:5;:19;;::::0;2376:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2433:12;2453:18;:4;:18:::0;2449:326:::1;;2505:5;2486:24;;:15;;;;;;;;;;;:24;;::::0;2478:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2575:5;2557:15;;:23;;;;;;;;;;;;;;;;;;2595:4;2585:14;;2449:326;;;2614:20;:4;:20:::0;2610:165:::1;;2671:5;2649:27;;:18;;;;;;;;;;;:27;;::::0;2641:79:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2746:5;2725:18;;:26;;;;;;;;;;;;;;;;;;2766:4;2756:14;;2610:165;2449:326;2782:7;2778:63;;;2830:5;2801:35;;2824:4;2801:35;;;;;;;;;;2778:63;2372:472;2293:551:::0;;:::o;1894:170::-;1355:13:1;:11;:13::i;:::-;1993:19:8::1;1972:18;;:40;;;;;;;;;;;;;;;;;;2021:39;2040:19;2021:39;;;;;;:::i;:::-;;;;;;;;1894:170:::0;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;2031:212:0:-;2083:14;2100:12;:10;:12::i;:::-;2083:29;;2148:6;2130:24;;:14;:12;:14::i;:::-;:24;;;2122:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2210:26;2229:6;2210:18;:26::i;:::-;2073:170;2031:212::o;1462:85:1:-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;1426:335:8:-;1355:13:1;:11;:13::i;:::-;1547:1:8::1;1530:19;;:5;:19;;::::0;1522:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:1;1587:6;:11;:26;;;;1612:1;1602:6;:11;1587:26;1579:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:15;:4;:15:::0;1645:113:::1;;1698:6;1671:17;:24;1689:5;1671:24;;;;;;;;;;;;;;;:33;;;;1739:5;1714:39;;1733:4;1714:39;1746:6;1714:39;;;;;;:::i;:::-;;;;;;;;1645:113;1426:335:::0;;;:::o;1144:99:0:-;1197:7;1223:13;;;;;;;;;;;1216:20;;1144:99;:::o;1436:178::-;1355:13:1;:11;:13::i;:::-;1541:8:0::1;1525:13;;:24;;;;;;;;;;;;;;;;;;1598:8;1564:43;;1589:7;:5;:7::i;:::-;1564:43;;;;;;;;;;;;1436:178:::0;:::o;1620:130:1:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;1798:153:0:-;1887:13;;1880:20;;;;;;;;;;;1910:34;1935:8;1910:24;:34::i;:::-;1798:153;:::o;886:96:5:-;939:7;965:10;958:17;;886:96;:::o;2687:187:1:-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:101::-;1713:7;1753:18;1746:5;1742:30;1731:41;;1677:101;;;:::o;1784:120::-;1856:23;1873:5;1856:23;:::i;:::-;1849:5;1846:34;1836:62;;1894:1;1891;1884:12;1836:62;1784:120;:::o;1910:137::-;1955:5;1993:6;1980:20;1971:29;;2009:32;2035:5;2009:32;:::i;:::-;1910:137;;;;:::o;2053:327::-;2111:6;2160:2;2148:9;2139:7;2135:23;2131:32;2128:119;;;2166:79;;:::i;:::-;2128:119;2286:1;2311:52;2355:7;2346:6;2335:9;2331:22;2311:52;:::i;:::-;2301:62;;2257:116;2053:327;;;;:::o;2386:118::-;2473:24;2491:5;2473:24;:::i;:::-;2468:3;2461:37;2386:118;;:::o;2510:222::-;2603:4;2641:2;2630:9;2626:18;2618:26;;2654:71;2722:1;2711:9;2707:17;2698:6;2654:71;:::i;:::-;2510:222;;;;:::o;2738:77::-;2775:7;2804:5;2793:16;;2738:77;;;:::o;2821:122::-;2894:24;2912:5;2894:24;:::i;:::-;2887:5;2884:35;2874:63;;2933:1;2930;2923:12;2874:63;2821:122;:::o;2949:139::-;2995:5;3033:6;3020:20;3011:29;;3049:33;3076:5;3049:33;:::i;:::-;2949:139;;;;:::o;3094:619::-;3171:6;3179;3187;3236:2;3224:9;3215:7;3211:23;3207:32;3204:119;;;3242:79;;:::i;:::-;3204:119;3362:1;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3333:117;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3617:2;3643:53;3688:7;3679:6;3668:9;3664:22;3643:53;:::i;:::-;3633:63;;3588:118;3094:619;;;;;:::o;3719:329::-;3778:6;3827:2;3815:9;3806:7;3802:23;3798:32;3795:119;;;3833:79;;:::i;:::-;3795:119;3953:1;3978:53;4023:7;4014:6;4003:9;3999:22;3978:53;:::i;:::-;3968:63;;3924:117;3719:329;;;;:::o;4054:169::-;4138:11;4172:6;4167:3;4160:19;4212:4;4207:3;4203:14;4188:29;;4054:169;;;;:::o;4229:171::-;4369:23;4365:1;4357:6;4353:14;4346:47;4229:171;:::o;4406:366::-;4548:3;4569:67;4633:2;4628:3;4569:67;:::i;:::-;4562:74;;4645:93;4734:3;4645:93;:::i;:::-;4763:2;4758:3;4754:12;4747:19;;4406:366;;;:::o;4778:419::-;4944:4;4982:2;4971:9;4967:18;4959:26;;5031:9;5025:4;5021:20;5017:1;5006:9;5002:17;4995:47;5059:131;5185:4;5059:131;:::i;:::-;5051:139;;4778:419;;;:::o;5203:224::-;5343:34;5339:1;5331:6;5327:14;5320:58;5412:7;5407:2;5399:6;5395:15;5388:32;5203:224;:::o;5433:366::-;5575:3;5596:67;5660:2;5655:3;5596:67;:::i;:::-;5589:74;;5672:93;5761:3;5672:93;:::i;:::-;5790:2;5785:3;5781:12;5774:19;;5433:366;;;:::o;5805:419::-;5971:4;6009:2;5998:9;5994:18;5986:26;;6058:9;6052:4;6048:20;6044:1;6033:9;6029:17;6022:47;6086:131;6212:4;6086:131;:::i;:::-;6078:139;;5805:419;;;:::o;6230:226::-;6370:34;6366:1;6358:6;6354:14;6347:58;6439:9;6434:2;6426:6;6422:15;6415:34;6230:226;:::o;6462:366::-;6604:3;6625:67;6689:2;6684:3;6625:67;:::i;:::-;6618:74;;6701:93;6790:3;6701:93;:::i;:::-;6819:2;6814:3;6810:12;6803:19;;6462:366;;;:::o;6834:419::-;7000:4;7038:2;7027:9;7023:18;7015:26;;7087:9;7081:4;7077:20;7073:1;7062:9;7058:17;7051:47;7115:131;7241:4;7115:131;:::i;:::-;7107:139;;6834:419;;;:::o;7259:115::-;7344:23;7361:5;7344:23;:::i;:::-;7339:3;7332:36;7259:115;;:::o;7380:218::-;7471:4;7509:2;7498:9;7494:18;7486:26;;7522:69;7588:1;7577:9;7573:17;7564:6;7522:69;:::i;:::-;7380:218;;;;:::o;7604:228::-;7744:34;7740:1;7732:6;7728:14;7721:58;7813:11;7808:2;7800:6;7796:15;7789:36;7604:228;:::o;7838:366::-;7980:3;8001:67;8065:2;8060:3;8001:67;:::i;:::-;7994:74;;8077:93;8166:3;8077:93;:::i;:::-;8195:2;8190:3;8186:12;8179:19;;7838:366;;;:::o;8210:419::-;8376:4;8414:2;8403:9;8399:18;8391:26;;8463:9;8457:4;8453:20;8449:1;8438:9;8434:17;8427:47;8491:131;8617:4;8491:131;:::i;:::-;8483:139;;8210:419;;;:::o;8635:173::-;8775:25;8771:1;8763:6;8759:14;8752:49;8635:173;:::o;8814:366::-;8956:3;8977:67;9041:2;9036:3;8977:67;:::i;:::-;8970:74;;9053:93;9142:3;9053:93;:::i;:::-;9171:2;9166:3;9162:12;9155:19;;8814:366;;;:::o;9186:419::-;9352:4;9390:2;9379:9;9375:18;9367:26;;9439:9;9433:4;9429:20;9425:1;9414:9;9410:17;9403:47;9467:131;9593:4;9467:131;:::i;:::-;9459:139;;9186:419;;;:::o;9611:118::-;9698:24;9716:5;9698:24;:::i;:::-;9693:3;9686:37;9611:118;;:::o;9735:222::-;9828:4;9866:2;9855:9;9851:18;9843:26;;9879:71;9947:1;9936:9;9932:17;9923:6;9879:71;:::i;:::-;9735:222;;;;:::o;9963:182::-;10103:34;10099:1;10091:6;10087:14;10080:58;9963:182;:::o;10151:366::-;10293:3;10314:67;10378:2;10373:3;10314:67;:::i;:::-;10307:74;;10390:93;10479:3;10390:93;:::i;:::-;10508:2;10503:3;10499:12;10492:19;;10151:366;;;:::o;10523:419::-;10689:4;10727:2;10716:9;10712:18;10704:26;;10776:9;10770:4;10766:20;10762:1;10751:9;10747:17;10740:47;10804:131;10930:4;10804:131;:::i;:::-;10796:139;;10523:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"761400","executionCost":"792","totalCost":"762192"},"external":{"acceptOwnership()":"54725","owner()":"2522","pendingOwner()":"2566","renounceOwnership()":"54714","settingManagerBool(bytes32,address,uint256)":"infinite","transferOwnership(address)":"infinite","updateProtocolAddress(bytes32,address)":"31072","updateProtocolFee(uint64)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","settingManagerBool(bytes32,address,uint256)":"cd992400","transferOwnership(address)":"f2fde38b","updateProtocolAddress(bytes32,address)":"40ebc677","updateProtocolFee(uint64)":"47094e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"ProtocolAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"protocolFee\",\"type\":\"uint64\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"SetFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"SettingManagerBool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"settingManagerBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"updateProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_protocolFeePercent\",\"type\":\"uint64\"}],\"name\":\"updateProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"settingManagerBool(bytes32,address,uint256)\":{\"details\":\"Sets the boolean value for a specific setting.\",\"params\":{\"status\":\"The boolean value to be set. Requirements: - The value must not be a zero address.\",\"value\":\"The address or value associated with the setting.\",\"what\":\"The setting to be updated.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"updateProtocolAddress(bytes32,address)\":{\"details\":\"Updates a protocol address.\",\"params\":{\"value\":\"The new address to be set. Requirements: - The value must not be a zero address.\",\"what\":\"The address type to be updated (treasury or aggregator).\"}},\"updateProtocolFee(uint64)\":{\"details\":\"Updates the protocol fee percentage.\",\"params\":{\"_protocolFeePercent\":\"The new protocol fee percentage to be set.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GatewaySettingManager.sol\":\"GatewaySettingManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"contracts/GatewaySettingManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\n/**\\n * @title GatewaySettingManager\\n * @dev This contract manages the settings and configurations for the Gateway protocol.\\n */\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\\n\\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\\n\\tuint256 internal MAX_BPS;\\n\\tuint64 internal protocolFeePercent;\\n\\taddress internal treasuryAddress;\\n\\taddress internal _aggregatorAddress;\\n\\tmapping(address => uint256) internal _isTokenSupported;\\n\\n\\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\\n\\tuint256[50] private __gap;\\n\\n\\n\\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\\n\\tevent ProtocolFeeUpdated(uint64 protocolFee);\\n\\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\\n\\tevent SetFeeRecipient(address indexed treasuryAddress);\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\n\\t/**\\n\\t * @dev Sets the boolean value for a specific setting.\\n\\t * @param what The setting to be updated.\\n\\t * @param value The address or value associated with the setting.\\n\\t * @param status The boolean value to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\trequire(status == 1 || status == 2, 'Gateway: invalid status');\\n\\t\\tif (what == 'token') {\\n\\t\\t\\t_isTokenSupported[value] = status;\\n\\t\\t\\temit SettingManagerBool(what, value, status);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates the protocol fee percentage.\\n\\t * @param _protocolFeePercent The new protocol fee percentage to be set.\\n\\t */\\n\\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\\n\\t\\tprotocolFeePercent = _protocolFeePercent;\\n\\t\\temit ProtocolFeeUpdated(_protocolFeePercent);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates a protocol address.\\n\\t * @param what The address type to be updated (treasury or aggregator).\\n\\t * @param value The new address to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\tbool updated;\\n\\t\\tif (what == 'treasury') {\\n\\t\\t\\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\\n\\t\\t\\ttreasuryAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t} else if (what == 'aggregator') {\\n\\t\\t\\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\\n\\t\\t\\t_aggregatorAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t}\\n\\t\\tif (updated) {\\n\\t\\t\\temit ProtocolAddressUpdated(what, value);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xa6bc7df8377942cbbcd340f9fddad581486e8842ab71e5109b4d71ea1e148059\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":1756,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"MAX_BPS","offset":0,"slot":"151","type":"t_uint256"},{"astId":1758,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"protocolFeePercent","offset":0,"slot":"152","type":"t_uint64"},{"astId":1760,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"treasuryAddress","offset":8,"slot":"152","type":"t_address"},{"astId":1762,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_aggregatorAddress","offset":0,"slot":"153","type":"t_address"},{"astId":1766,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_isTokenSupported","offset":0,"slot":"154","type":"t_mapping(t_address,t_uint256)"},{"astId":1770,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IGateway.sol":{"IGateway":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFee","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"splitOrderId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"settlePercent","type":"uint96"}],"name":"OrderSettled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"senderFee","type":"address"},{"indexed":false,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"rate","type":"uint96"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"ProcessSettlement","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SenderFeeTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"_senderFee","type":"uint256"},{"internalType":"address","name":"_refundAddress","type":"address"},{"internalType":"string","name":"messageHash","type":"string"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFeeDetails","outputs":[{"internalType":"uint64","name":"protocolReward","type":"uint64"},{"internalType":"uint256","name":"max_bps","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"getOrderInfo","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"senderFee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint96","name":"currentBPS","type":"uint96"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IGateway.Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isTokenSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint96","name":"_senderFee","type":"uint96"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"uint96","name":"_protocolFee","type":"uint96"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"string","name":"_messageHash","type":"string"}],"name":"processSettlement","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"refund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_splitOrderId","type":"bytes32"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"uint64","name":"_settlePercent","type":"uint64"}],"name":"settle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"OrderCreated(address,address,uint256,uint256,bytes32,uint256,string)":{"details":"Emitted when a deposit is made.","params":{"amount":"The amount of the deposit.","messageHash":"The hash of the message.","orderId":"The ID of the order.","rate":"The rate at which the deposit is made.","sender":"The address of the sender.","token":"The address of the deposited token."}},"OrderRefunded(uint256,bytes32)":{"details":"Emitted when an aggregator refunds a transaction.","params":{"fee":"The fee deducted from the refund amount.","orderId":"The ID of the order."}},"OrderSettled(bytes32,bytes32,address,uint96)":{"details":"Emitted when an aggregator settles a transaction.","params":{"liquidityProvider":"The address of the liquidity provider.","orderId":"The ID of the order.","settlePercent":"The percentage at which the transaction is settled.","splitOrderId":"The ID of the split order."}},"ProcessSettlement(bytes32,uint256,address,address,address,address,uint96,string)":{"details":"Emitted when an onramp order is successfully processed"},"SenderFeeTransferred(address,uint256)":{"details":"Emitted when the sender's fee is transferred.","params":{"amount":"The amount of the fee transferred.","sender":"The address of the sender."}}},"kind":"dev","methods":{"createOrder(address,uint256,uint96,address,uint256,address,string)":{"details":"Requirements: - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call. - `_token` must be an acceptable token. See {isTokenSupported}. - `amount` must be greater than minimum. - `_refundAddress` refund address must not be zero address.","params":{"_amount":"The amount in the decimal of `_token` to be locked.","_rate":"The rate at which the sender intends to sell `_amount` of `_token`.","_refundAddress":"The address that will receive `_amount` in `_token` when there is a need to refund.","_senderFee":"The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.","_senderFeeRecipient":"The address that will receive `_senderFee` in `_token`.","_token":"The address of the token.","messageHash":"The hash of the message."},"returns":{"_orderId":"The ID of the order."}},"getFeeDetails()":{"returns":{"max_bps":"The maximum basis points.","protocolReward":"The protocol reward amount."}},"getOrderInfo(bytes32)":{"params":{"_orderId":"The ID of the order."},"returns":{"_0":"Order The order details."}},"isTokenSupported(address)":{"params":{"_token":"The address of the token to check."},"returns":{"_0":"bool the token is supported."}},"processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)":{"details":"This function is restricted to be called only by an authorized aggregatorIt processes an onramp orders and transfers tokens to the user","params":{"_amount":"Amount of tokens to be sent to the user","_liquidityProvider":"Address of the liquidity provider","_messageHash":"Hash of the message associated with the order","_orderId":"Unique identifier for the order being processed","_rate":"Rate at which the tokens are being sent","_recipient":"Address of the recipient who will receive the tokens","_senderFee":"Amount of fee to be paid to the sender fee recipient","_senderFeeRecipient":"Address that will receive the sender fee","_token":"Address of the token to be sent to the user"},"returns":{"_0":"success Boolean indicating if the operation was successful"}},"refund(uint256,bytes32)":{"details":"Requirements: - Only aggregators can call this function.","params":{"_fee":"The amount to be deducted from the amount to be refunded.","_orderId":"The ID of the transaction."},"returns":{"_0":"bool the refund is successful."}},"settle(bytes32,bytes32,address,uint64)":{"params":{"_liquidityProvider":"The address of the liquidity provider.","_orderId":"The ID of the transaction.","_settlePercent":"The rate at which the transaction is settled.","_splitOrderId":"The ID of the split order."},"returns":{"_0":"bool the settlement is successful."}}},"title":"IGateway","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createOrder(address,uint256,uint96,address,uint256,address,string)":"809804f7","getFeeDetails()":"b810c636","getOrderInfo(bytes32)":"768c6ec0","isTokenSupported(address)":"75151b63","processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)":"79ec5809","refund(uint256,bytes32)":"71eedb88","settle(bytes32,bytes32,address,uint64)":"f22ee704"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"splitOrderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"settlePercent\",\"type\":\"uint96\"}],\"name\":\"OrderSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"senderFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"rate\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"ProcessSettlement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SenderFeeTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_senderFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDetails\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"protocolReward\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"max_bps\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"currentBPS\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGateway.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_senderFee\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_protocolFee\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"string\",\"name\":\"_messageHash\",\"type\":\"string\"}],\"name\":\"processSettlement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_splitOrderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_settlePercent\",\"type\":\"uint64\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OrderCreated(address,address,uint256,uint256,bytes32,uint256,string)\":{\"details\":\"Emitted when a deposit is made.\",\"params\":{\"amount\":\"The amount of the deposit.\",\"messageHash\":\"The hash of the message.\",\"orderId\":\"The ID of the order.\",\"rate\":\"The rate at which the deposit is made.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"OrderRefunded(uint256,bytes32)\":{\"details\":\"Emitted when an aggregator refunds a transaction.\",\"params\":{\"fee\":\"The fee deducted from the refund amount.\",\"orderId\":\"The ID of the order.\"}},\"OrderSettled(bytes32,bytes32,address,uint96)\":{\"details\":\"Emitted when an aggregator settles a transaction.\",\"params\":{\"liquidityProvider\":\"The address of the liquidity provider.\",\"orderId\":\"The ID of the order.\",\"settlePercent\":\"The percentage at which the transaction is settled.\",\"splitOrderId\":\"The ID of the split order.\"}},\"ProcessSettlement(bytes32,uint256,address,address,address,address,uint96,string)\":{\"details\":\"Emitted when an onramp order is successfully processed\"},\"SenderFeeTransferred(address,uint256)\":{\"details\":\"Emitted when the sender's fee is transferred.\",\"params\":{\"amount\":\"The amount of the fee transferred.\",\"sender\":\"The address of the sender.\"}}},\"kind\":\"dev\",\"methods\":{\"createOrder(address,uint256,uint96,address,uint256,address,string)\":{\"details\":\"Requirements: - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call. - `_token` must be an acceptable token. See {isTokenSupported}. - `amount` must be greater than minimum. - `_refundAddress` refund address must not be zero address.\",\"params\":{\"_amount\":\"The amount in the decimal of `_token` to be locked.\",\"_rate\":\"The rate at which the sender intends to sell `_amount` of `_token`.\",\"_refundAddress\":\"The address that will receive `_amount` in `_token` when there is a need to refund.\",\"_senderFee\":\"The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\",\"_senderFeeRecipient\":\"The address that will receive `_senderFee` in `_token`.\",\"_token\":\"The address of the token.\",\"messageHash\":\"The hash of the message.\"},\"returns\":{\"_orderId\":\"The ID of the order.\"}},\"getFeeDetails()\":{\"returns\":{\"max_bps\":\"The maximum basis points.\",\"protocolReward\":\"The protocol reward amount.\"}},\"getOrderInfo(bytes32)\":{\"params\":{\"_orderId\":\"The ID of the order.\"},\"returns\":{\"_0\":\"Order The order details.\"}},\"isTokenSupported(address)\":{\"params\":{\"_token\":\"The address of the token to check.\"},\"returns\":{\"_0\":\"bool the token is supported.\"}},\"processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)\":{\"details\":\"This function is restricted to be called only by an authorized aggregatorIt processes an onramp orders and transfers tokens to the user\",\"params\":{\"_amount\":\"Amount of tokens to be sent to the user\",\"_liquidityProvider\":\"Address of the liquidity provider\",\"_messageHash\":\"Hash of the message associated with the order\",\"_orderId\":\"Unique identifier for the order being processed\",\"_rate\":\"Rate at which the tokens are being sent\",\"_recipient\":\"Address of the recipient who will receive the tokens\",\"_senderFee\":\"Amount of fee to be paid to the sender fee recipient\",\"_senderFeeRecipient\":\"Address that will receive the sender fee\",\"_token\":\"Address of the token to be sent to the user\"},\"returns\":{\"_0\":\"success Boolean indicating if the operation was successful\"}},\"refund(uint256,bytes32)\":{\"details\":\"Requirements: - Only aggregators can call this function.\",\"params\":{\"_fee\":\"The amount to be deducted from the amount to be refunded.\",\"_orderId\":\"The ID of the transaction.\"},\"returns\":{\"_0\":\"bool the refund is successful.\"}},\"settle(bytes32,bytes32,address,uint64)\":{\"params\":{\"_liquidityProvider\":\"The address of the liquidity provider.\",\"_orderId\":\"The ID of the transaction.\",\"_settlePercent\":\"The rate at which the transaction is settled.\",\"_splitOrderId\":\"The ID of the split order.\"},\"returns\":{\"_0\":\"bool the settlement is successful.\"}}},\"title\":\"IGateway\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createOrder(address,uint256,uint96,address,uint256,address,string)\":{\"notice\":\"Locks the sender's amount of token into Gateway.\"},\"getFeeDetails()\":{\"notice\":\"Gets the fee details of Gateway.\"},\"getOrderInfo(bytes32)\":{\"notice\":\"Gets the details of an order.\"},\"isTokenSupported(address)\":{\"notice\":\"Checks if a token is supported by Gateway.\"},\"processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)\":{\"notice\":\"Process an onramp order for cryptocurrency purchase\"},\"refund(uint256,bytes32)\":{\"notice\":\"Refunds to the specified refundable address.\"},\"settle(bytes32,bytes32,address,uint64)\":{\"notice\":\"Settles a transaction and distributes rewards accordingly.\"}},\"notice\":\"Interface for the Gateway contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGateway.sol\":\"IGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/IGateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title IGateway\\n * @notice Interface for the Gateway contract.\\n */\\ninterface IGateway {\\n    /* ##################################################################\\n                                EVENTS\\n    ################################################################## */\\n    /**\\n     * @dev Emitted when a deposit is made.\\n     * @param sender The address of the sender.\\n     * @param token The address of the deposited token.\\n     * @param amount The amount of the deposit.\\n     * @param orderId The ID of the order.\\n     * @param rate The rate at which the deposit is made.\\n     * @param messageHash The hash of the message.\\n     */\\n    event OrderCreated(\\n        address indexed sender,\\n        address indexed token,\\n        uint256 indexed amount,\\n        uint256 protocolFee,\\n        bytes32 orderId,\\n        uint256 rate,\\n        string messageHash\\n    );\\n\\n    /**\\n     * @dev Emitted when an aggregator settles a transaction.\\n     * @param splitOrderId The ID of the split order.\\n     * @param orderId The ID of the order.\\n     * @param liquidityProvider The address of the liquidity provider.\\n     * @param settlePercent The percentage at which the transaction is settled.\\n     */\\n    event OrderSettled(\\n        bytes32 splitOrderId,\\n        bytes32 indexed orderId,\\n        address indexed liquidityProvider,\\n        uint96 settlePercent\\n    );\\n\\n    /**\\n     * @dev Emitted when an aggregator refunds a transaction.\\n     * @param fee The fee deducted from the refund amount.\\n     * @param orderId The ID of the order.\\n     */\\n    event OrderRefunded(uint256 fee, bytes32 indexed orderId);\\n\\n    /**\\n     * @dev Emitted when an onramp order is successfully processed\\n     */\\n    event ProcessSettlement(\\n        bytes32 indexed orderId,\\n        uint256 indexed amount,\\n        address indexed recipient,\\n        address token,\\n        address senderFee,\\n\\t\\taddress liquidityProvider,\\n\\t\\tuint96 rate,\\n\\t\\tstring messageHash\\n    );\\n\\n    /**\\n     * @dev Emitted when the sender's fee is transferred.\\n     * @param sender The address of the sender.\\n     * @param amount The amount of the fee transferred.\\n     */\\n    event SenderFeeTransferred(address indexed sender, uint256 indexed amount);\\n\\n    /* ##################################################################\\n                                STRUCTS\\n    ################################################################## */\\n    /**\\n     * @dev Struct representing an order.\\n     * @param sender The address of the sender.\\n     * @param token The address of the token.\\n     * @param senderFeeRecipient The address of the sender fee recipient.\\n     * @param senderFee The fee to be paid to the sender fee recipient.\\n     * @param protocolFee The protocol fee to be paid.\\n     * @param isFulfilled Whether the order is fulfilled.\\n     * @param isRefunded Whether the order is refunded.\\n     * @param refundAddress The address to which the refund is made.\\n     * @param currentBPS The current basis points.\\n     * @param amount The amount of the order.\\n     */\\n    struct Order {\\n        address sender;\\n        address token;\\n        address senderFeeRecipient;\\n        uint256 senderFee;\\n        uint256 protocolFee;\\n        bool isFulfilled;\\n        bool isRefunded;\\n        address refundAddress;\\n        uint96 currentBPS;\\n        uint256 amount;\\n    }\\n\\n    /* ##################################################################\\n                                EXTERNAL CALLS\\n    ################################################################## */\\n    /**\\n     * @notice Locks the sender's amount of token into Gateway.\\n     * @dev Requirements:\\n     * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\\n     * - `_token` must be an acceptable token. See {isTokenSupported}.\\n     * - `amount` must be greater than minimum.\\n     * - `_refundAddress` refund address must not be zero address.\\n     * @param _token The address of the token.\\n     * @param _amount The amount in the decimal of `_token` to be locked.\\n     * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\\n     * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\\n     * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\\n     * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\\n     * @param messageHash The hash of the message.\\n     * @return _orderId The ID of the order.\\n     */\\n    function createOrder(\\n        address _token,\\n        uint256 _amount,\\n        uint96 _rate,\\n        address _senderFeeRecipient,\\n        uint256 _senderFee,\\n        address _refundAddress,\\n        string calldata messageHash\\n    ) external returns (bytes32 _orderId);\\n\\n    /**\\n     * @notice Settles a transaction and distributes rewards accordingly.\\n     * @param _splitOrderId The ID of the split order.\\n     * @param _orderId The ID of the transaction.\\n     * @param _liquidityProvider The address of the liquidity provider.\\n     * @param _settlePercent The rate at which the transaction is settled.\\n     * @return bool the settlement is successful.\\n     */\\n    function settle(\\n        bytes32 _splitOrderId,\\n        bytes32 _orderId,\\n        address _liquidityProvider,\\n        uint64 _settlePercent\\n    ) external returns (bool);\\n\\n    /**\\n     * @notice Refunds to the specified refundable address.\\n     * @dev Requirements:\\n     * - Only aggregators can call this function.\\n     * @param _fee The amount to be deducted from the amount to be refunded.\\n     * @param _orderId The ID of the transaction.\\n     * @return bool the refund is successful.\\n     */\\n    function refund(uint256 _fee, bytes32 _orderId) external returns (bool);\\n\\n    /**\\n     * @notice Process an onramp order for cryptocurrency purchase\\n     * @dev This function is restricted to be called only by an authorized aggregator\\n     * @dev It processes an onramp orders and transfers tokens to the user\\n     * @param _orderId Unique identifier for the order being processed\\n     * @param _token Address of the token to be sent to the user\\n     * @param _amount Amount of tokens to be sent to the user\\n     * @param _senderFeeRecipient Address that will receive the sender fee\\n     * @param _senderFee Amount of fee to be paid to the sender fee recipient\\n     * @param _liquidityProvider Address of the liquidity provider\\n     * @param _recipient Address of the recipient who will receive the tokens\\n     * @param _rate Rate at which the tokens are being sent\\n     * @param _messageHash Hash of the message associated with the order\\n     * @return success Boolean indicating if the operation was successful\\n     */\\n    function processSettlement(\\n        bytes32 _orderId,\\n        address _token,\\n        uint256 _amount,\\n        address _senderFeeRecipient,\\n        uint96 _senderFee,\\n        address _liquidityProvider,\\n        uint96 _protocolFee,\\n        address _recipient,\\n        uint96 _rate,\\n        string calldata _messageHash\\n    ) external returns (bool);\\n\\n    /**\\n     * @notice Checks if a token is supported by Gateway.\\n     * @param _token The address of the token to check.\\n     * @return bool the token is supported.\\n     */\\n    function isTokenSupported(address _token) external view returns (bool);\\n\\n    /**\\n     * @notice Gets the details of an order.\\n     * @param _orderId The ID of the order.\\n     * @return Order The order details.\\n     */\\n    function getOrderInfo(\\n        bytes32 _orderId\\n    ) external view returns (Order memory);\\n\\n    /**\\n     * @notice Gets the fee details of Gateway.\\n     * @return protocolReward The protocol reward amount.\\n     * @return max_bps The maximum basis points.\\n     */\\n    function getFeeDetails()\\n        external\\n        view\\n        returns (uint64 protocolReward, uint256 max_bps);\\n}\\n\",\"keccak256\":\"0x15d5707529c9577ca82446a4f5034f1cf382fbbed2ae368af4711165e33d42b6\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"createOrder(address,uint256,uint96,address,uint256,address,string)":{"notice":"Locks the sender's amount of token into Gateway."},"getFeeDetails()":{"notice":"Gets the fee details of Gateway."},"getOrderInfo(bytes32)":{"notice":"Gets the details of an order."},"isTokenSupported(address)":{"notice":"Checks if a token is supported by Gateway."},"processSettlement(bytes32,address,uint256,address,uint96,address,uint96,address,uint96,string)":{"notice":"Process an onramp order for cryptocurrency purchase"},"refund(uint256,bytes32)":{"notice":"Refunds to the specified refundable address."},"settle(bytes32,bytes32,address,uint64)":{"notice":"Settles a transaction and distributes rewards accordingly."}},"notice":"Interface for the Gateway contract.","version":1}}}}}}