{"id":"90aedd230d60025156747c451c543d0c","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./OwnableUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    function __Ownable2Step_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\n        _transferOwnership(sender);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/Gateway.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\n\nimport {GatewaySettingManager} from './GatewaySettingManager.sol';\nimport {IGateway, IERC20} from './interfaces/IGateway.sol';\n\n/**\n * @title Gateway\n * @notice This contract serves as a gateway for creating orders and managing settlements.\n */\ncontract Gateway is IGateway, GatewaySettingManager, PausableUpgradeable {\n\tstruct fee {\n\t\tuint256 protocolFee;\n\t\tuint256 liquidityProviderAmount;\n\t}\n\n\tmapping(bytes32 => Order) private order;\n\tmapping(address => uint256) private _nonce;\n\tuint256[50] private __gap;\n\n\t/// @custom:oz-upgrades-unsafe-allow constructor\n\tconstructor() {\n\t\t_disableInitializers();\n\t}\n\n\t/**\n\t * @dev Initialize function.\n\t */\n\tfunction initialize() external initializer {\n\t\tMAX_BPS = 100_000;\n\t\t__Ownable2Step_init();\n\t\t__Pausable_init();\n\t}\n\n\t/**\n\t * @dev Modifier that allows only the aggregator to call a function.\n\t */\n\tmodifier onlyAggregator() {\n\t\trequire(msg.sender == _aggregatorAddress, 'OnlyAggregator');\n\t\t_;\n\t}\n\n\t/* ##################################################################\n                                OWNER FUNCTIONS\n    ################################################################## */\n\t/**\n\t * @dev Pause the contract.\n\t */\n\tfunction pause() external onlyOwner {\n\t\t_pause();\n\t}\n\n\t/**\n\t * @dev Unpause the contract.\n\t */\n\tfunction unpause() external onlyOwner {\n\t\t_unpause();\n\t}\n\n\t/* ##################################################################\n                                USER CALLS\n    ################################################################## */\n\t/** @dev See {createOrder-IGateway}. */\n\tfunction createOrder(\n\t\taddress _token,\n\t\tuint256 _amount,\n\t\tuint96 _rate,\n\t\taddress _senderFeeRecipient,\n\t\tuint256 _senderFee,\n\t\taddress _refundAddress,\n\t\tstring calldata messageHash\n\t) external whenNotPaused returns (bytes32 orderId) {\n\t\t// checks that are required\n\t\t_handler(_token, _amount, _refundAddress, _senderFeeRecipient, _senderFee);\n\n\t\t// validate messageHash\n\t\trequire(bytes(messageHash).length != 0, 'InvalidMessageHash');\n\n\t\t// transfer token from msg.sender to contract\n\t\tIERC20(_token).transferFrom(msg.sender, address(this), _amount + _senderFee);\n\n\t\t// increase users nonce to avoid replay attacks\n\t\t_nonce[msg.sender]++;\n\n\t\t// generate transaction id for the transaction\n\t\torderId = keccak256(abi.encode(msg.sender, _nonce[msg.sender]));\n\n\t\t// update transaction\n\t\tuint256 _protocolFee = (_amount * protocolFeePercent) / MAX_BPS;\n\t\torder[orderId] = Order({\n\t\t\tsender: msg.sender,\n\t\t\ttoken: _token,\n\t\t\tsenderFeeRecipient: _senderFeeRecipient,\n\t\t\tsenderFee: _senderFee,\n\t\t\tprotocolFee: _protocolFee,\n\t\t\tisFulfilled: false,\n\t\t\tisRefunded: false,\n\t\t\trefundAddress: _refundAddress,\n\t\t\tcurrentBPS: uint64(MAX_BPS),\n\t\t\tamount: _amount\n\t\t});\n\n\t\t// emit order created event\n\t\temit OrderCreated(\n\t\t\t_refundAddress,\n\t\t\t_token,\n\t\t\torder[orderId].amount,\n\t\t\t_protocolFee,\n\t\t\torderId,\n\t\t\t_rate,\n\t\t\tmessageHash\n\t\t);\n\t}\n\n\t/**\n\t * @dev Internal function to handle order creation.\n\t * @param _token The address of the token being traded.\n\t * @param _amount The amount of tokens being traded.\n\t * @param _refundAddress The address to refund the tokens in case of cancellation.\n\t * @param _senderFeeRecipient The address of the recipient for the sender fee.\n\t * @param _senderFee The amount of the sender fee.\n\t */\n\tfunction _handler(\n\t\taddress _token,\n\t\tuint256 _amount,\n\t\taddress _refundAddress,\n\t\taddress _senderFeeRecipient,\n\t\tuint256 _senderFee\n\t) internal view {\n\t\trequire(_isTokenSupported[_token] == 1, 'TokenNotSupported');\n\t\trequire(_amount != 0, 'AmountIsZero');\n\t\trequire(_refundAddress != address(0), 'ThrowZeroAddress');\n\n\t\tif (_senderFee != 0) {\n\t\t\trequire(_senderFeeRecipient != address(0), 'InvalidSenderFeeRecipient');\n\t\t}\n\t}\n\n\t/* ##################################################################\n                                AGGREGATOR FUNCTIONS\n    ################################################################## */\n\t/** @dev See {settle-IGateway}. */\n\tfunction settle(\n\t\tbytes32 _splitOrderId,\n\t\tbytes32 _orderId,\n\t\taddress _liquidityProvider,\n\t\tuint64 _settlePercent\n\t) external onlyAggregator returns (bool) {\n\t\t// ensure the transaction has not been fulfilled\n\t\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\n\t\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\n\n\t\t// load the token into memory\n\t\taddress token = order[_orderId].token;\n\n\t\t// subtract sum of amount based on the input _settlePercent\n\t\torder[_orderId].currentBPS -= _settlePercent;\n\n\t\tif (order[_orderId].currentBPS == 0) {\n\t\t\t// update the transaction to be fulfilled\n\t\t\torder[_orderId].isFulfilled = true;\n\n\t\t\tif (order[_orderId].senderFee != 0) {\n\t\t\t\t// transfer sender fee\n\t\t\t\tIERC20(order[_orderId].token).transfer(\n\t\t\t\t\torder[_orderId].senderFeeRecipient,\n\t\t\t\t\torder[_orderId].senderFee\n\t\t\t\t);\n\n\t\t\t\t// emit event\n\t\t\t\temit SenderFeeTransferred(\n\t\t\t\t\torder[_orderId].senderFeeRecipient,\n\t\t\t\t\torder[_orderId].senderFee\n\t\t\t\t);\n\t\t\t}\n\n\t\t}\n\n\t\t// transfer to liquidity provider\n\t\tuint256 liquidityProviderAmount = (order[_orderId].amount * _settlePercent) / MAX_BPS;\n\t\torder[_orderId].amount -= liquidityProviderAmount;\n\n\t\tuint256 protocolFee = (liquidityProviderAmount * protocolFeePercent) / MAX_BPS;\n\t\tliquidityProviderAmount -= protocolFee;\n\n\t\t// transfer protocol fee\n\t\tif (protocolFee > 0) IERC20(token).transfer(treasuryAddress, protocolFee);\n\n\t\tIERC20(token).transfer(_liquidityProvider, liquidityProviderAmount);\n\n\t\t// emit settled event\n\t\temit OrderSettled(_splitOrderId, _orderId, _liquidityProvider, _settlePercent);\n\n\t\treturn true;\n\t}\n\n\t/** @dev See {refund-IGateway}. */\n\tfunction refund(uint256 _fee, bytes32 _orderId) external onlyAggregator returns (bool) {\n\t\t// ensure the transaction has not been fulfilled\n\t\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\n\t\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\n\t\trequire(order[_orderId].protocolFee >= _fee, 'FeeExceedsProtocolFee');\n\n\t\tif (_fee > 0) {\n\t\t\t// transfer refund fee to the treasury\n\t\t\tIERC20(order[_orderId].token).transfer(treasuryAddress, _fee);\n\t\t}\n\n\t\t// reset state values\n\t\torder[_orderId].isRefunded = true;\n\t\torder[_orderId].currentBPS = 0;\n\n\t\t// deduct fee from order amount\n\t\tuint256 refundAmount = order[_orderId].amount - _fee;\n\n\t\t// transfer refund amount and sender fee to the refund address\n\t\tIERC20(order[_orderId].token).transfer(\n\t\t\torder[_orderId].refundAddress,\n\t\t\trefundAmount + order[_orderId].senderFee\n\t\t);\n\n\t\t// emit refunded event\n\t\temit OrderRefunded(_fee, _orderId);\n\n\t\treturn true;\n\t}\n\n\t/** @dev See {processSettlement-IGateway}. */\n\tfunction processSettlement(\n        bytes32 _orderId,\n        address _token,\n        uint256 _amount,\n        address _senderFeeRecipient,\n        uint256 _senderFee,\n        address _liquidityProvider,\n        address _recipient,\n        uint96 _rate,\n        string calldata _messageHash\n    ) external onlyAggregator returns (bool) {\n\t\trequire(!order[_orderId].isFulfilled, 'OrderNotFulfilled');\n\t\trequire(_amount > 0, 'AmountIsZero');\n\t\trequire(_recipient != address(0), 'RecipientIsZeroAddress');\n\n\t\tif(_senderFee != 0) {\n\t\t\trequire(_senderFeeRecipient != address(0), \"SenderFeeRecipientIsZeroAddress\");\n\n\t\t\tIERC20(_token).transfer(\n\t\t\t\t_senderFeeRecipient,\n\t\t\t\t_senderFee\n\t\t\t);\n\n\t\t\temit SenderFeeTransferred(\n\t\t\t\t_senderFeeRecipient,\n\t\t\t\t_senderFee\n\t\t\t);\n\t\t}\n\n\t\tuint256 protocolFee = (_amount * protocolFeePercent) / MAX_BPS;\n\t\tuint256 liquidityProviderAmount = _amount - protocolFee;\n\n\t\tif (protocolFee > 0) IERC20(_token).transfer(treasuryAddress, protocolFee);\n\n\t\tIERC20(_token).transfer(_recipient, liquidityProviderAmount);\n\n\t\t// update the order state\n\t\torder[_orderId].sender = _recipient;\n\t\torder[_orderId].token = _token;\n\t\torder[_orderId].senderFeeRecipient = _senderFeeRecipient;\n\t\torder[_orderId].senderFee = _senderFee;\n\t\torder[_orderId].protocolFee = protocolFee;\n\t\torder[_orderId].isFulfilled = true;\n\t\torder[_orderId].amount -= _amount;\n\n\t\t// emit settlement event\n\t\temit ProcessSettlement(\n\t\t\t_orderId,\n\t\t\t_amount,\n\t\t\t_recipient,\n\t\t\t_token,\n\t\t\t_senderFeeRecipient,\n\t\t\t_liquidityProvider,\n\t\t\t_rate,\n\t\t\t_messageHash\n\t\t);\n\n\t\treturn true;\n\t}\n\n\t/* ##################################################################\n                                VIEW CALLS\n    ################################################################## */\n\t/** @dev See {getOrderInfo-IGateway}. */\n\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory) {\n\t\treturn order[_orderId];\n\t}\n\n\t/** @dev See {isTokenSupported-IGateway}. */\n\tfunction isTokenSupported(address _token) external view returns (bool) {\n\t\tif (_isTokenSupported[_token] == 1) return true;\n\t\treturn false;\n\t}\n\n\t/** @dev See {getFeeDetails-IGateway}. */\n\tfunction getFeeDetails() external view returns (uint64, uint256) {\n\t\treturn (protocolFeePercent, MAX_BPS);\n\t}\n}\n"},"contracts/GatewaySettingManager.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\n\n/**\n * @title GatewaySettingManager\n * @dev This contract manages the settings and configurations for the Gateway protocol.\n */\npragma solidity ^0.8.18;\n\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\n\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\n\tuint256 internal MAX_BPS;\n\tuint64 internal protocolFeePercent;\n\taddress internal treasuryAddress;\n\taddress internal _aggregatorAddress;\n\tmapping(address => uint256) internal _isTokenSupported;\n\n\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\n\tuint256[50] private __gap;\n\n\n\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\n\tevent ProtocolFeeUpdated(uint64 protocolFee);\n\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\n\tevent SetFeeRecipient(address indexed treasuryAddress);\n\n\t/* ##################################################################\n                                OWNER FUNCTIONS\n    ################################################################## */\n\n\t/**\n\t * @dev Sets the boolean value for a specific setting.\n\t * @param what The setting to be updated.\n\t * @param value The address or value associated with the setting.\n\t * @param status The boolean value to be set.\n\t * Requirements:\n\t * - The value must not be a zero address.\n\t */\n\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\n\t\trequire(value != address(0), 'Gateway: zero address');\n\t\trequire(status == 1 || status == 2, 'Gateway: invalid status');\n\t\tif (what == 'token') {\n\t\t\t_isTokenSupported[value] = status;\n\t\t\temit SettingManagerBool(what, value, status);\n\t\t}\n\t}\n\n\t/**\n\t * @dev Updates the protocol fee percentage.\n\t * @param _protocolFeePercent The new protocol fee percentage to be set.\n\t */\n\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\n\t\tprotocolFeePercent = _protocolFeePercent;\n\t\temit ProtocolFeeUpdated(_protocolFeePercent);\n\t}\n\n\t/**\n\t * @dev Updates a protocol address.\n\t * @param what The address type to be updated (treasury or aggregator).\n\t * @param value The new address to be set.\n\t * Requirements:\n\t * - The value must not be a zero address.\n\t */\n\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\n\t\trequire(value != address(0), 'Gateway: zero address');\n\t\tbool updated;\n\t\tif (what == 'treasury') {\n\t\t\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\n\t\t\ttreasuryAddress = value;\n\t\t\tupdated = true;\n\t\t} else if (what == 'aggregator') {\n\t\t\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\n\t\t\t_aggregatorAddress = value;\n\t\t\tupdated = true;\n\t\t}\n\t\tif (updated) {\n\t\t\temit ProtocolAddressUpdated(what, value);\n\t\t}\n\t}\n}\n"},"contracts/interfaces/IGateway.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title IGateway\n * @notice Interface for the Gateway contract.\n */\ninterface IGateway {\n    /* ##################################################################\n                                EVENTS\n    ################################################################## */\n    /**\n     * @dev Emitted when a deposit is made.\n     * @param sender The address of the sender.\n     * @param token The address of the deposited token.\n     * @param amount The amount of the deposit.\n     * @param orderId The ID of the order.\n     * @param rate The rate at which the deposit is made.\n     * @param messageHash The hash of the message.\n     */\n    event OrderCreated(\n        address indexed sender,\n        address indexed token,\n        uint256 indexed amount,\n        uint256 protocolFee,\n        bytes32 orderId,\n        uint256 rate,\n        string messageHash\n    );\n\n    /**\n     * @dev Emitted when an aggregator settles a transaction.\n     * @param splitOrderId The ID of the split order.\n     * @param orderId The ID of the order.\n     * @param liquidityProvider The address of the liquidity provider.\n     * @param settlePercent The percentage at which the transaction is settled.\n     */\n    event OrderSettled(\n        bytes32 splitOrderId,\n        bytes32 indexed orderId,\n        address indexed liquidityProvider,\n        uint96 settlePercent\n    );\n\n    /**\n     * @dev Emitted when an aggregator refunds a transaction.\n     * @param fee The fee deducted from the refund amount.\n     * @param orderId The ID of the order.\n     */\n    event OrderRefunded(uint256 fee, bytes32 indexed orderId);\n\n    /**\n     * @dev Emitted when an onramp order is successfully processed\n     */\n    event ProcessSettlement(\n        bytes32 indexed orderId,\n        uint256 indexed amount,\n        address indexed recipient,\n        address token,\n        address senderFee,\n\t\taddress liquidityProvider,\n\t\tuint96 rate,\n\t\tstring messageHash\n    );\n\n    /**\n     * @dev Emitted when the sender's fee is transferred.\n     * @param sender The address of the sender.\n     * @param amount The amount of the fee transferred.\n     */\n    event SenderFeeTransferred(address indexed sender, uint256 indexed amount);\n\n    /* ##################################################################\n                                STRUCTS\n    ################################################################## */\n    /**\n     * @dev Struct representing an order.\n     * @param sender The address of the sender.\n     * @param token The address of the token.\n     * @param senderFeeRecipient The address of the sender fee recipient.\n     * @param senderFee The fee to be paid to the sender fee recipient.\n     * @param protocolFee The protocol fee to be paid.\n     * @param isFulfilled Whether the order is fulfilled.\n     * @param isRefunded Whether the order is refunded.\n     * @param refundAddress The address to which the refund is made.\n     * @param currentBPS The current basis points.\n     * @param amount The amount of the order.\n     */\n    struct Order {\n        address sender;\n        address token;\n        address senderFeeRecipient;\n        uint256 senderFee;\n        uint256 protocolFee;\n        bool isFulfilled;\n        bool isRefunded;\n        address refundAddress;\n        uint96 currentBPS;\n        uint256 amount;\n    }\n\n    /* ##################################################################\n                                EXTERNAL CALLS\n    ################################################################## */\n    /**\n     * @notice Locks the sender's amount of token into Gateway.\n     * @dev Requirements:\n     * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\n     * - `_token` must be an acceptable token. See {isTokenSupported}.\n     * - `amount` must be greater than minimum.\n     * - `_refundAddress` refund address must not be zero address.\n     * @param _token The address of the token.\n     * @param _amount The amount in the decimal of `_token` to be locked.\n     * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\n     * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\n     * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\n     * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\n     * @param messageHash The hash of the message.\n     * @return _orderId The ID of the order.\n     */\n    function createOrder(\n        address _token,\n        uint256 _amount,\n        uint96 _rate,\n        address _senderFeeRecipient,\n        uint256 _senderFee,\n        address _refundAddress,\n        string calldata messageHash\n    ) external returns (bytes32 _orderId);\n\n    /**\n     * @notice Settles a transaction and distributes rewards accordingly.\n     * @param _splitOrderId The ID of the split order.\n     * @param _orderId The ID of the transaction.\n     * @param _liquidityProvider The address of the liquidity provider.\n     * @param _settlePercent The rate at which the transaction is settled.\n     * @return bool the settlement is successful.\n     */\n    function settle(\n        bytes32 _splitOrderId,\n        bytes32 _orderId,\n        address _liquidityProvider,\n        uint64 _settlePercent\n    ) external returns (bool);\n\n    /**\n     * @notice Refunds to the specified refundable address.\n     * @dev Requirements:\n     * - Only aggregators can call this function.\n     * @param _fee The amount to be deducted from the amount to be refunded.\n     * @param _orderId The ID of the transaction.\n     * @return bool the refund is successful.\n     */\n    function refund(uint256 _fee, bytes32 _orderId) external returns (bool);\n\n    /**\n     * @notice Process an onramp order for cryptocurrency purchase\n     * @dev This function is restricted to be called only by an authorized aggregator\n     * @dev It processes an onramp orders and transfers tokens to the user\n     * @param _orderId Unique identifier for the order being processed\n     * @param _token Address of the token to be sent to the user\n     * @param _amount Amount of tokens to be sent to the user\n     * @param _senderFeeRecipient Address that will receive the sender fee\n     * @param _senderFee Amount of fee to be paid to the sender fee recipient\n     * @param _liquidityProvider Address of the liquidity provider\n     * @param _recipient Address of the recipient who will receive the tokens\n     * @param _rate Rate at which the tokens are being sent\n     * @param _messageHash Hash of the message associated with the order\n     * @return success Boolean indicating if the operation was successful\n     */\n    function processSettlement(\n        bytes32 _orderId,\n        address _token,\n        uint256 _amount,\n        address _senderFeeRecipient,\n        uint256 _senderFee,\n        address _liquidityProvider,\n        address _recipient,\n        uint96 _rate,\n        string calldata _messageHash\n    ) external returns (bool);\n\n    /**\n     * @notice Checks if a token is supported by Gateway.\n     * @param _token The address of the token to check.\n     * @return bool the token is supported.\n     */\n    function isTokenSupported(address _token) external view returns (bool);\n\n    /**\n     * @notice Gets the details of an order.\n     * @param _orderId The ID of the order.\n     * @return Order The order details.\n     */\n    function getOrderInfo(\n        bytes32 _orderId\n    ) external view returns (Order memory);\n\n    /**\n     * @notice Gets the fee details of Gateway.\n     * @return protocolReward The protocol reward amount.\n     * @return max_bps The maximum basis points.\n     */\n    function getFeeDetails()\n        external\n        view\n        returns (uint64 protocolReward, uint256 max_bps);\n}\n"},"contracts/mocks/MockUSDC.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/// @dev Mock mintable USDC\ncontract MockUSDT is ERC20 {\n    constructor() ERC20(\"MockUDSC\", \"MUSDC\") {\n        _mint(msg.sender, 1_000_000E18);\n    }\n\n    function mint(uint256 _amount) external {\n        _mint(msg.sender, _amount);\n    }\n\n    function burn(uint256 _amount) external {\n        _burn(msg.sender, _amount);\n    }\n\n    function burnAll() external {\n        uint256 _balanceOf = balanceOf(msg.sender);\n        require(_balanceOf > 0, \"MockUSDT: Nothing to burn\");\n        _burn(msg.sender, _balanceOf);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"Ownable2StepUpgradeable":[106],"OwnableUpgradeable":[239]},"id":107,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"./OwnableUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":107,"sourceUnit":240,"src":"132:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":107,"sourceUnit":409,"src":"167:63:0","symbolAliases":[{"foreign":{"id":3,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"175:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"Initializable","nameLocations":["719:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"719:13:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"719:13:0"},{"baseName":{"id":8,"name":"OwnableUpgradeable","nameLocations":["734:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":239,"src":"734:18:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"734:18:0"}],"canonicalName":"Ownable2StepUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"232:441:0","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":106,"linearizedBaseContracts":[106,239,917,408],"name":"Ownable2StepUpgradeable","nameLocation":"692:23:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11,"mutability":"mutable","name":"_pendingOwner","nameLocation":"775:13:0","nodeType":"VariableDeclaration","scope":106,"src":"759:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"759:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":17,"name":"OwnershipTransferStarted","nameLocation":"801:24:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"842:13:0","nodeType":"VariableDeclaration","scope":17,"src":"826:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"873:8:0","nodeType":"VariableDeclaration","scope":17,"src":"857:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"825:57:0"},"src":"795:88:0"},{"body":{"id":25,"nodeType":"Block","src":"946:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"956:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"956:26:0"}]},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nameLocations":["929:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"929:16:0"},"nodeType":"ModifierInvocation","src":"929:16:0"}],"name":"__Ownable2Step_init","nameLocation":"898:19:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"917:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"946:0:0"},"scope":106,"src":"889:100:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"1062:7:0","statements":[]},"id":32,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nameLocations":["1045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1045:16:0"},"nodeType":"ModifierInvocation","src":"1045:16:0"}],"name":"__Ownable2Step_init_unchained","nameLocation":"1004:29:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1033:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1062:0:0"},"scope":106,"src":"995:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":40,"nodeType":"Block","src":"1206:37:0","statements":[{"expression":{"id":38,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1223:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":37,"id":39,"nodeType":"Return","src":"1216:20:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1074:65:0","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":41,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"1153:12:0","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"1165:2:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41,"src":"1197:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1196:9:0"},"scope":106,"src":"1144:99:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":60,"nodeType":"Block","src":"1515:99:0","statements":[{"expression":{"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":50,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1525:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":51,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1541:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1525:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":53,"nodeType":"ExpressionStatement","src":"1525:24:0"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":55,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1589:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1589:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":57,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1598:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":54,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1564:24:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59,"nodeType":"EmitStatement","src":"1559:48:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1249:182:0","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":61,"implemented":true,"kind":"function","modifiers":[{"id":48,"kind":"modifierInvocation","modifierName":{"id":47,"name":"onlyOwner","nameLocations":["1505:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1505:9:0"},"nodeType":"ModifierInvocation","src":"1505:9:0"}],"name":"transferOwnership","nameLocation":"1445:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"1496:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"newOwner","nameLocation":"1471:8:0","nodeType":"VariableDeclaration","scope":61,"src":"1463:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:18:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[],"src":"1515:0:0"},"scope":106,"src":"1436:178:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[233],"body":{"id":77,"nodeType":"Block","src":"1870:81:0","statements":[{"expression":{"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1880:20:0","subExpression":{"id":68,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1887:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":70,"nodeType":"ExpressionStatement","src":"1880:20:0"},{"expression":{"arguments":[{"id":74,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"1935:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":71,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1910:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2StepUpgradeable_$106_$","typeString":"type(contract super Ownable2StepUpgradeable)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1916:18:0","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":233,"src":"1910:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":76,"nodeType":"ExpressionStatement","src":"1910:34:0"}]},"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"1620:173:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":78,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1807:18:0","nodeType":"FunctionDefinition","overrides":{"id":66,"nodeType":"OverrideSpecifier","overrides":[],"src":"1861:8:0"},"parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"newOwner","nameLocation":"1834:8:0","nodeType":"VariableDeclaration","scope":78,"src":"1826:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1825:18:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"1870:0:0"},"scope":106,"src":"1798:153:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":99,"nodeType":"Block","src":"2073:170:0","statements":[{"assignments":[83],"declarations":[{"constant":false,"id":83,"mutability":"mutable","name":"sender","nameLocation":"2091:6:0","nodeType":"VariableDeclaration","scope":99,"src":"2083:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":86,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2100:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2100:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2083:29:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2130:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":90,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2148:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2130:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2156:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""},"value":"Ownable2Step: caller is not the new owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""}],"id":87,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2122:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":94,"nodeType":"ExpressionStatement","src":"2122:78:0"},{"expression":{"arguments":[{"id":96,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2229:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":95,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[78],"referencedDeclaration":78,"src":"2210:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2210:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"2210:26:0"}]},"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1957:69:0","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":100,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"2040:15:0","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"2055:2:0"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[],"src":"2073:0:0"},"scope":106,"src":"2031:212:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"2249:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":105,"mutability":"mutable","name":"__gap","nameLocation":"2528:5:0","nodeType":"VariableDeclaration","scope":106,"src":"2508:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":104,"length":{"hexValue":"3439","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2516:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2508:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":107,"src":"674:1862:0","usedErrors":[]}],"src":"107:2430:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"OwnableUpgradeable":[239]},"id":240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":108,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":240,"sourceUnit":918,"src":"127:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":240,"sourceUnit":409,"src":"169:63:1","symbolAliases":[{"foreign":{"id":110,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"177:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":113,"name":"Initializable","nameLocations":["769:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"769:13:1"},"id":114,"nodeType":"InheritanceSpecifier","src":"769:13:1"},{"baseName":{"id":115,"name":"ContextUpgradeable","nameLocations":["784:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":917,"src":"784:18:1"},"id":116,"nodeType":"InheritanceSpecifier","src":"784:18:1"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"234:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":239,"linearizedBaseContracts":[239,917,408],"name":"OwnableUpgradeable","nameLocation":"747:18:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":118,"mutability":"mutable","name":"_owner","nameLocation":"825:6:1","nodeType":"VariableDeclaration","scope":239,"src":"809:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":124,"name":"OwnershipTransferred","nameLocation":"844:20:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"881:13:1","nodeType":"VariableDeclaration","scope":124,"src":"865:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"912:8:1","nodeType":"VariableDeclaration","scope":124,"src":"896:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:57:1"},"src":"838:84:1"},{"body":{"id":133,"nodeType":"Block","src":"1076:43:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":130,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1086:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"1086:26:1"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"928:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":134,"implemented":true,"kind":"function","modifiers":[{"id":128,"kind":"modifierInvocation","modifierName":{"id":127,"name":"onlyInitializing","nameLocations":["1059:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1059:16:1"},"nodeType":"ModifierInvocation","src":"1059:16:1"}],"name":"__Ownable_init","nameLocation":"1033:14:1","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"1047:2:1"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"1076:0:1"},"scope":239,"src":"1024:95:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":144,"nodeType":"Block","src":"1187:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":140,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1216:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1197:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"1197:32:1"}]},"id":145,"implemented":true,"kind":"function","modifiers":[{"id":137,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyInitializing","nameLocations":["1170:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1170:16:1"},"nodeType":"ModifierInvocation","src":"1170:16:1"}],"name":"__Ownable_init_unchained","nameLocation":"1134:24:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"1158:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"1187:0:1"},"scope":239,"src":"1125:111:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"1345:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":148,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1355:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"1355:13:1"},{"id":151,"nodeType":"PlaceholderStatement","src":"1378:1:1"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"1242:77:1","text":" @dev Throws if called by any account other than the owner."},"id":153,"name":"onlyOwner","nameLocation":"1333:9:1","nodeType":"ModifierDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"1342:2:1"},"src":"1324:62:1","virtual":false,"visibility":"internal"},{"body":{"id":161,"nodeType":"Block","src":"1517:30:1","statements":[{"expression":{"id":159,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1534:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":158,"id":160,"nodeType":"Return","src":"1527:13:1"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1392:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":162,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1471:5:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"1476:2:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":162,"src":"1508:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:9:1"},"scope":239,"src":"1462:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1665:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1683:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1694:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1675:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1675:68:1"}]},"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"1553:62:1","text":" @dev Throws if the sender is not the owner."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1629:11:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"1640:2:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"1665:0:1"},"scope":239,"src":"1620:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"2139:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:1","typeDescriptions":{}}},"id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":182,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2149:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"2149:30:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1756:324:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":190,"implemented":true,"kind":"function","modifiers":[{"id":180,"kind":"modifierInvocation","modifierName":{"id":179,"name":"onlyOwner","nameLocations":["2129:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2129:9:1"},"nodeType":"ModifierInvocation","src":"2129:9:1"}],"name":"renounceOwnership","nameLocation":"2094:17:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"2111:2:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"2139:0:1"},"scope":239,"src":"2085:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":212,"nodeType":"Block","src":"2405:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":199,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2423:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:1","typeDescriptions":{}}},"id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2435:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2423:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2415:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"2415:73:1"},{"expression":{"arguments":[{"id":209,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2517:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":208,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2498:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"2498:28:1"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2192:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":213,"implemented":true,"kind":"function","modifiers":[{"id":196,"kind":"modifierInvocation","modifierName":{"id":195,"name":"onlyOwner","nameLocations":["2395:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2395:9:1"},"nodeType":"ModifierInvocation","src":"2395:9:1"}],"name":"transferOwnership","nameLocation":"2344:17:1","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"newOwner","nameLocation":"2370:8:1","nodeType":"VariableDeclaration","scope":213,"src":"2362:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2361:18:1"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"2405:0:1"},"scope":239,"src":"2335:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":232,"nodeType":"Block","src":"2750:124:1","statements":[{"assignments":[220],"declarations":[{"constant":false,"id":220,"mutability":"mutable","name":"oldOwner","nameLocation":"2768:8:1","nodeType":"VariableDeclaration","scope":232,"src":"2760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"2760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":222,"initialValue":{"id":221,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2779:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2760:25:1"},{"expression":{"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":223,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2795:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":224,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2804:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2795:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":226,"nodeType":"ExpressionStatement","src":"2795:17:1"},{"eventCall":{"arguments":[{"id":228,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2848:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2858:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2827:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"EmitStatement","src":"2822:45:1"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2539:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":233,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2696:18:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"newOwner","nameLocation":"2723:8:1","nodeType":"VariableDeclaration","scope":233,"src":"2715:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:18:1"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"2750:0:1"},"scope":239,"src":"2687:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"2880:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":238,"mutability":"mutable","name":"__gap","nameLocation":"3159:5:1","nodeType":"VariableDeclaration","scope":239,"src":"3139:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":237,"length":{"hexValue":"3439","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3139:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":240,"src":"729:2438:1","usedErrors":[]}],"src":"102:3066:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[866],"Initializable":[408]},"id":409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":241,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":409,"sourceUnit":867,"src":"138:44:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"184:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":408,"linearizedBaseContracts":[408],"name":"Initializable","nameLocation":"2412:13:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"2432:109:2","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":246,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:2","nodeType":"VariableDeclaration","scope":408,"src":"2546:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":245,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2579:91:2","text":" @dev Indicates that the contract is in the process of being initialized."},"id":249,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:2","nodeType":"VariableDeclaration","scope":408,"src":"2675:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":248,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"2708:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":254,"name":"Initialized","nameLocation":"2809:11:2","nodeType":"EventDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:2","nodeType":"VariableDeclaration","scope":254,"src":"2821:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":251,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:2"},"src":"2803:33:2"},{"body":{"id":309,"nodeType":"Block","src":"3269:483:2","statements":[{"assignments":[258],"declarations":[{"constant":false,"id":258,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:2","nodeType":"VariableDeclaration","scope":309,"src":"3279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":257,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:2","subExpression":{"id":259,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3302:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3347:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":264,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3365:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:2","subExpression":{"arguments":[{"arguments":[{"id":273,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$408","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$408","typeString":"contract Initializable"}],"id":272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:2","typeDescriptions":{}}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":269,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3388:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$866_$","typeString":"type(library AddressUpgradeable)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":554,"src":"3388:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3436:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"ExpressionStatement","src":"3325:201:2"},{"expression":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":286,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3536:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":289,"nodeType":"ExpressionStatement","src":"3536:16:2"},{"condition":{"id":290,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3566:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":296,"nodeType":"IfStatement","src":"3562:65:2","trueBody":{"id":295,"nodeType":"Block","src":"3582:45:2","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":291,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3596:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"3596:20:2"}]}},{"id":297,"nodeType":"PlaceholderStatement","src":"3636:1:2"},{"condition":{"id":298,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3651:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":308,"nodeType":"IfStatement","src":"3647:99:2","trueBody":{"id":307,"nodeType":"Block","src":"3667:79:2","statements":[{"expression":{"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":299,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3681:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":302,"nodeType":"ExpressionStatement","src":"3681:21:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":303,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3721:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"3716:19:2"}]}}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"2842:399:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":310,"name":"initializer","nameLocation":"3255:11:2","nodeType":"ModifierDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"3266:2:2"},"src":"3246:506:2","virtual":false,"visibility":"internal"},{"body":{"id":342,"nodeType":"Block","src":"4863:255:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:2","subExpression":{"id":316,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"4882:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"4899:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":319,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4914:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4873:99:2"},{"expression":{"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":325,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"4982:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":326,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4997:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":328,"nodeType":"ExpressionStatement","src":"4982:22:2"},{"expression":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":329,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5014:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":332,"nodeType":"ExpressionStatement","src":"5014:20:2"},{"id":333,"nodeType":"PlaceholderStatement","src":"5044:1:2"},{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":334,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5055:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":337,"nodeType":"ExpressionStatement","src":"5055:21:2"},{"eventCall":{"arguments":[{"id":339,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"5103:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":338,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5091:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"EmitStatement","src":"5086:25:2"}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"3758:1062:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":343,"name":"reinitializer","nameLocation":"4834:13:2","nodeType":"ModifierDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"version","nameLocation":"4854:7:2","nodeType":"VariableDeclaration","scope":343,"src":"4848:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":312,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:2"},"src":"4825:293:2","virtual":false,"visibility":"internal"},{"body":{"id":352,"nodeType":"Block","src":"5356:97:2","statements":[{"expression":{"arguments":[{"id":347,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5374:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":350,"nodeType":"ExpressionStatement","src":"5366:69:2"},{"id":351,"nodeType":"PlaceholderStatement","src":"5445:1:2"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"5124:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":353,"name":"onlyInitializing","nameLocation":"5337:16:2","nodeType":"ModifierDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"5353:2:2"},"src":"5328:125:2","virtual":false,"visibility":"internal"},{"body":{"id":388,"nodeType":"Block","src":"5988:231:2","statements":[{"expression":{"arguments":[{"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:2","subExpression":{"id":358,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6007:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"5998:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6078:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":365,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:2","memberName":"max","nodeType":"MemberAccess","src":"6094:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":387,"nodeType":"IfStatement","src":"6074:139:2","trueBody":{"id":386,"nodeType":"Block","src":"6111:102:2","statements":[{"expression":{"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6125:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":372,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:2","memberName":"max","nodeType":"MemberAccess","src":"6140:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":377,"nodeType":"ExpressionStatement","src":"6125:30:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":380,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:2","memberName":"max","nodeType":"MemberAccess","src":"6186:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":378,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6174:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"EmitStatement","src":"6169:33:2"}]}}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"5459:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:2","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"5968:2:2"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"5988:0:2"},"scope":408,"src":"5939:280:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":397,"nodeType":"Block","src":"6393:36:2","statements":[{"expression":{"id":395,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6410:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":394,"id":396,"nodeType":"Return","src":"6403:19:2"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"6225:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":398,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"6360:2:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":398,"src":"6386:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":392,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:2"},"scope":408,"src":"6329:100:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"6601:37:2","statements":[{"expression":{"id":404,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6618:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":403,"id":405,"nodeType":"Return","src":"6611:20:2"}]},"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"6435:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:2","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"6569:2:2"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"6595:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:2"},"scope":408,"src":"6545:93:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":409,"src":"2394:4246:2","usedErrors":[]}],"src":"113:6528:2"},"id":2},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"PausableUpgradeable":[536]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":410,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":918,"src":"130:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":409,"src":"172:63:3","symbolAliases":[{"foreign":{"id":412,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"180:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":415,"name":"Initializable","nameLocations":["718:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"718:13:3"},"id":416,"nodeType":"InheritanceSpecifier","src":"718:13:3"},{"baseName":{"id":417,"name":"ContextUpgradeable","nameLocations":["733:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":917,"src":"733:18:3"},"id":418,"nodeType":"InheritanceSpecifier","src":"733:18:3"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"237:439:3","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":536,"linearizedBaseContracts":[536,917,408],"name":"PausableUpgradeable","nameLocation":"695:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"758:73:3","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":423,"name":"Paused","nameLocation":"842:6:3","nodeType":"EventDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"857:7:3","nodeType":"VariableDeclaration","scope":423,"src":"849:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"848:17:3"},"src":"836:30:3"},{"anonymous":false,"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"872:70:3","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":428,"name":"Unpaused","nameLocation":"953:8:3","nodeType":"EventDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"970:7:3","nodeType":"VariableDeclaration","scope":428,"src":"962:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"961:17:3"},"src":"947:32:3"},{"constant":false,"id":430,"mutability":"mutable","name":"_paused","nameLocation":"998:7:3","nodeType":"VariableDeclaration","scope":536,"src":"985:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":429,"name":"bool","nodeType":"ElementaryTypeName","src":"985:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":439,"nodeType":"Block","src":"1137:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1147:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"1147:27:3"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1012:67:3","text":" @dev Initializes the contract in unpaused state."},"id":440,"implemented":true,"kind":"function","modifiers":[{"id":434,"kind":"modifierInvocation","modifierName":{"id":433,"name":"onlyInitializing","nameLocations":["1120:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1120:16:3"},"nodeType":"ModifierInvocation","src":"1120:16:3"}],"name":"__Pausable_init","nameLocation":"1093:15:3","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1108:2:3"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"1137:0:3"},"scope":536,"src":"1084:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":449,"nodeType":"Block","src":"1250:32:3","statements":[{"expression":{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":445,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"1260:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1270:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1260:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":448,"nodeType":"ExpressionStatement","src":"1260:15:3"}]},"id":450,"implemented":true,"kind":"function","modifiers":[{"id":443,"kind":"modifierInvocation","modifierName":{"id":442,"name":"onlyInitializing","nameLocations":["1233:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1233:16:3"},"nodeType":"ModifierInvocation","src":"1233:16:3"}],"name":"__Pausable_init_unchained","nameLocation":"1196:25:3","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1221:2:3"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"1250:0:3"},"scope":536,"src":"1187:95:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"1493:47:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"1503:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1503:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1503:19:3"},{"id":456,"nodeType":"PlaceholderStatement","src":"1532:1:3"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"1288:175:3","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":458,"name":"whenNotPaused","nameLocation":"1477:13:3","nodeType":"ModifierDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"1490:2:3"},"src":"1468:72:3","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"1740:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":461,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"1750:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"1750:16:3"},{"id":464,"nodeType":"PlaceholderStatement","src":"1776:1:3"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"1546:167:3","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":466,"name":"whenPaused","nameLocation":"1727:10:3","nodeType":"ModifierDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"1737:2:3"},"src":"1718:66:3","virtual":false,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"1932:31:3","statements":[{"expression":{"id":472,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"1949:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":471,"id":473,"nodeType":"Return","src":"1942:14:3"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"1790:84:3","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1888:6:3","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"1894:2:3"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"1926:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":469,"name":"bool","nodeType":"ElementaryTypeName","src":"1926:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1925:6:3"},"scope":536,"src":"1879:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":486,"nodeType":"Block","src":"2082:55:3","statements":[{"expression":{"arguments":[{"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2100:9:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2101:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2111:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2092:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2092:38:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1969:57:3","text":" @dev Throws if the contract is paused."},"id":487,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2040:17:3","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"2057:2:3"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[],"src":"2082:0:3"},"scope":536,"src":"2031:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"2257:58:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":492,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2275:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2275:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2285:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2267:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"2267:41:3"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"2143:61:3","text":" @dev Throws if the contract is not paused."},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2218:14:3","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"2232:2:3"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2257:0:3"},"scope":536,"src":"2209:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":513,"nodeType":"Block","src":"2499:66:3","statements":[{"expression":{"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":504,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2509:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2519:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2509:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":507,"nodeType":"ExpressionStatement","src":"2509:14:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":509,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2545:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2538:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"EmitStatement","src":"2533:25:3"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"2321:124:3","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":514,"implemented":true,"kind":"function","modifiers":[{"id":502,"kind":"modifierInvocation","modifierName":{"id":501,"name":"whenNotPaused","nameLocations":["2485:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"2485:13:3"},"nodeType":"ModifierInvocation","src":"2485:13:3"}],"name":"_pause","nameLocation":"2459:6:3","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"2465:2:3"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2499:0:3"},"scope":536,"src":"2450:115:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":529,"nodeType":"Block","src":"2745:69:3","statements":[{"expression":{"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":520,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2755:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2765:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2755:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":523,"nodeType":"ExpressionStatement","src":"2755:15:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":525,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2794:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":524,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2785:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"EmitStatement","src":"2780:27:3"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2571:121:3","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":530,"implemented":true,"kind":"function","modifiers":[{"id":518,"kind":"modifierInvocation","modifierName":{"id":517,"name":"whenPaused","nameLocations":["2734:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":466,"src":"2734:10:3"},"nodeType":"ModifierInvocation","src":"2734:10:3"}],"name":"_unpause","nameLocation":"2706:8:3","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"2714:2:3"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"2745:0:3"},"scope":536,"src":"2697:117:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2820:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":535,"mutability":"mutable","name":"__gap","nameLocation":"3099:5:3","nodeType":"VariableDeclaration","scope":536,"src":"3079:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"3079:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":534,"length":{"hexValue":"3439","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3087:2:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3079:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":537,"src":"677:2430:3","usedErrors":[]}],"src":"105:3003:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[866]},"id":867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":866,"linearizedBaseContracts":[866],"name":"AddressUpgradeable","nameLocation":"202:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":553,"nodeType":"Block","src":"1489:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":547,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"1713:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:4","memberName":"code","nodeType":"MemberAccess","src":"1713:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:4","memberName":"length","nodeType":"MemberAccess","src":"1713:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":546,"id":552,"nodeType":"Return","src":"1706:30:4"}]},"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"227:1191:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:4","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"account","nameLocation":"1451:7:4","nodeType":"VariableDeclaration","scope":554,"src":"1443:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:4"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"1483:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:4"},"scope":866,"src":"1423:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"2729:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":565,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:4","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:4","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2772:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"ExpressionStatement","src":"2739:73:4"},{"assignments":[574,null],"declarations":[{"constant":false,"id":574,"mutability":"mutable","name":"success","nameLocation":"2829:7:4","nodeType":"VariableDeclaration","scope":587,"src":"2824:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":573,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":581,"initialValue":{"arguments":[{"hexValue":"","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":575,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"2842:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:4","memberName":"call","nodeType":"MemberAccess","src":"2842:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2864:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:4"},{"expression":{"arguments":[{"id":583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"2893:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"2885:78:4"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"1749:904:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:4","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:4","nodeType":"VariableDeclaration","scope":588,"src":"2677:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"amount","nameLocation":"2712:6:4","nodeType":"VariableDeclaration","scope":588,"src":"2704:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"2729:0:4"},"scope":866,"src":"2658:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"3801:96:4","statements":[{"expression":{"arguments":[{"id":599,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3840:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3848:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":598,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"3818:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":597,"id":604,"nodeType":"Return","src":"3811:79:4"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"2976:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:4","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"target","nameLocation":"3742:6:4","nodeType":"VariableDeclaration","scope":606,"src":"3734:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"data","nameLocation":"3763:4:4","nodeType":"VariableDeclaration","scope":606,"src":"3750:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":592,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:4"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"3787:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":595,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:4"},"scope":866,"src":"3712:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"4266:76:4","statements":[{"expression":{"arguments":[{"id":619,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4305:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4313:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":622,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4322:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":618,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"4283:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":617,"id":624,"nodeType":"Return","src":"4276:59:4"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3903:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":626,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:4","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"target","nameLocation":"4158:6:4","nodeType":"VariableDeclaration","scope":626,"src":"4150:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"data","nameLocation":"4187:4:4","nodeType":"VariableDeclaration","scope":626,"src":"4174:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:4","nodeType":"VariableDeclaration","scope":626,"src":"4201:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":612,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:4"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":626,"src":"4252:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:4"},"scope":866,"src":"4119:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":645,"nodeType":"Block","src":"4817:111:4","statements":[{"expression":{"arguments":[{"id":639,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4856:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4864:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4870:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":638,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"4834:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":637,"id":644,"nodeType":"Return","src":"4827:94:4"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"4348:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:4","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"target","nameLocation":"4743:6:4","nodeType":"VariableDeclaration","scope":646,"src":"4735:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"data","nameLocation":"4764:4:4","nodeType":"VariableDeclaration","scope":646,"src":"4751:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":630,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"value","nameLocation":"4778:5:4","nodeType":"VariableDeclaration","scope":646,"src":"4770:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:4"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":646,"src":"4803:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":635,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:4"},"scope":866,"src":"4704:224:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"5355:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}],"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:4","typeDescriptions":{}}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:4","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"5398:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"5365:81:4"},{"assignments":[672,674],"declarations":[{"constant":false,"id":672,"mutability":"mutable","name":"success","nameLocation":"5462:7:4","nodeType":"VariableDeclaration","scope":689,"src":"5457:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":671,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:4","nodeType":"VariableDeclaration","scope":689,"src":"5471:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":673,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":681,"initialValue":{"arguments":[{"id":679,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5524:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":675,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5498:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:4","memberName":"call","nodeType":"MemberAccess","src":"5498:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"5517:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:4"},{"expression":{"arguments":[{"id":683,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5573:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5581:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":685,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5590:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":686,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5602:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":682,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5546:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":659,"id":688,"nodeType":"Return","src":"5539:76:4"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"4934:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:4","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"target","nameLocation":"5224:6:4","nodeType":"VariableDeclaration","scope":690,"src":"5216:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"data","nameLocation":"5253:4:4","nodeType":"VariableDeclaration","scope":690,"src":"5240:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"value","nameLocation":"5275:5:4","nodeType":"VariableDeclaration","scope":690,"src":"5267:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:4","nodeType":"VariableDeclaration","scope":690,"src":"5290:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:4"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"5341:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":657,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:4"},"scope":866,"src":"5176:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"5899:97:4","statements":[{"expression":{"arguments":[{"id":701,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"5935:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":702,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5943:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":700,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[707,736],"referencedDeclaration":736,"src":"5916:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":699,"id":705,"nodeType":"Return","src":"5909:80:4"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"5628:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:4","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"target","nameLocation":"5835:6:4","nodeType":"VariableDeclaration","scope":707,"src":"5827:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"data","nameLocation":"5856:4:4","nodeType":"VariableDeclaration","scope":707,"src":"5843:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":694,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:4"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"5885:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:4"},"scope":866,"src":"5799:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"6338:168:4","statements":[{"assignments":[720,722],"declarations":[{"constant":false,"id":720,"mutability":"mutable","name":"success","nameLocation":"6354:7:4","nodeType":"VariableDeclaration","scope":735,"src":"6349:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":719,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:4","nodeType":"VariableDeclaration","scope":735,"src":"6363:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":721,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":727,"initialValue":{"arguments":[{"id":725,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6408:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":723,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6390:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:4","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:4"},{"expression":{"arguments":[{"id":729,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6457:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6465:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":731,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6474:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":732,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6486:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":728,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6430:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":718,"id":734,"nodeType":"Return","src":"6423:76:4"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6002:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:4","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"target","nameLocation":"6225:6:4","nodeType":"VariableDeclaration","scope":736,"src":"6217:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"data","nameLocation":"6254:4:4","nodeType":"VariableDeclaration","scope":736,"src":"6241:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:4","nodeType":"VariableDeclaration","scope":736,"src":"6268:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":713,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:4"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"6324:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":716,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:4"},"scope":866,"src":"6180:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"6782:101:4","statements":[{"expression":{"arguments":[{"id":747,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6820:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6828:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":746,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[753,782],"referencedDeclaration":782,"src":"6799:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":745,"id":751,"nodeType":"Return","src":"6792:84:4"}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"6512:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:4","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"target","nameLocation":"6723:6:4","nodeType":"VariableDeclaration","scope":753,"src":"6715:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"data","nameLocation":"6744:4:4","nodeType":"VariableDeclaration","scope":753,"src":"6731:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":740,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:4"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"6768:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:4"},"scope":866,"src":"6685:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":781,"nodeType":"Block","src":"7224:170:4","statements":[{"assignments":[766,768],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"success","nameLocation":"7240:7:4","nodeType":"VariableDeclaration","scope":781,"src":"7235:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":765,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:4","nodeType":"VariableDeclaration","scope":781,"src":"7249:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":767,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":773,"initialValue":{"arguments":[{"id":771,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7296:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":769,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7276:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:4","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:4"},{"expression":{"arguments":[{"id":775,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7345:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"7353:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":777,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7362:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":778,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"7374:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":774,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"7318:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":764,"id":780,"nodeType":"Return","src":"7311:76:4"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"6889:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:4","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"target","nameLocation":"7116:6:4","nodeType":"VariableDeclaration","scope":782,"src":"7108:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"data","nameLocation":"7145:4:4","nodeType":"VariableDeclaration","scope":782,"src":"7132:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:4","nodeType":"VariableDeclaration","scope":782,"src":"7159:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":759,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:4"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":782,"src":"7210:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:4"},"scope":866,"src":"7069:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":820,"nodeType":"Block","src":"7876:434:4","statements":[{"condition":{"id":796,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7890:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":818,"nodeType":"Block","src":"8246:58:4","statements":[{"expression":{"arguments":[{"id":814,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8268:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":815,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"8280:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":813,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8260:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"8260:33:4"}]},"id":819,"nodeType":"IfStatement","src":"7886:418:4","trueBody":{"id":812,"nodeType":"Block","src":"7899:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":797,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7917:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:4","memberName":"length","nodeType":"MemberAccess","src":"7917:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"7913:286:4","trueBody":{"id":808,"nodeType":"Block","src":"7941:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":803,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"8143:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":802,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"8132:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"8124:60:4"}]}},{"expression":{"id":810,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8219:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":795,"id":811,"nodeType":"Return","src":"8212:17:4"}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"7400:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":821,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:4","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"target","nameLocation":"7735:6:4","nodeType":"VariableDeclaration","scope":821,"src":"7727:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"success","nameLocation":"7756:7:4","nodeType":"VariableDeclaration","scope":821,"src":"7751:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":786,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:4","nodeType":"VariableDeclaration","scope":821,"src":"7773:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:4","nodeType":"VariableDeclaration","scope":821,"src":"7806:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":790,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:4"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"7862:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:4"},"scope":866,"src":"7682:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"8691:135:4","statements":[{"condition":{"id":833,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"8705:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":842,"nodeType":"Block","src":"8762:58:4","statements":[{"expression":{"arguments":[{"id":838,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8784:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":839,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8796:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":837,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8776:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"8776:33:4"}]},"id":843,"nodeType":"IfStatement","src":"8701:119:4","trueBody":{"id":836,"nodeType":"Block","src":"8714:42:4","statements":[{"expression":{"id":834,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8735:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":832,"id":835,"nodeType":"Return","src":"8728:17:4"}]}}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"8316:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:4","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"success","nameLocation":"8571:7:4","nodeType":"VariableDeclaration","scope":845,"src":"8566:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":823,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:4","nodeType":"VariableDeclaration","scope":845,"src":"8588:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:4","nodeType":"VariableDeclaration","scope":845,"src":"8621:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":827,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:4"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":845,"src":"8677:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:4"},"scope":866,"src":"8531:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"8915:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":852,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"8991:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:4","memberName":"length","nodeType":"MemberAccess","src":"8991:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":862,"nodeType":"Block","src":"9321:45:4","statements":[{"expression":{"arguments":[{"id":859,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"9342:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":858,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"9335:20:4"}]},"id":863,"nodeType":"IfStatement","src":"8987:379:4","trueBody":{"id":857,"nodeType":"Block","src":"9014:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:4"},"nodeType":"YulFunctionCall","src":"9213:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:4"},"nodeType":"YulFunctionCall","src":"9254:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:4"},"nodeType":"YulFunctionCall","src":"9247:44:4"},"nodeType":"YulExpressionStatement","src":"9247:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":847,"isOffset":false,"isSlot":false,"src":"9219:10:4","valueSize":1},{"declaration":847,"isOffset":false,"isSlot":false,"src":"9262:10:4","valueSize":1}],"id":856,"nodeType":"InlineAssembly","src":"9163:142:4"}]}}]},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:4","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:4","nodeType":"VariableDeclaration","scope":865,"src":"8849:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":846,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:4","nodeType":"VariableDeclaration","scope":865,"src":"8874:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":848,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:4"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"8915:0:4"},"scope":866,"src":"8832:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":867,"src":"194:9180:4","usedErrors":[]}],"src":"101:9274:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408]},"id":918,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":868,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":918,"sourceUnit":409,"src":"125:63:5","symbolAliases":[{"foreign":{"id":869,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"133:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":872,"name":"Initializable","nameLocations":["727:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"727:13:5"},"id":873,"nodeType":"InheritanceSpecifier","src":"727:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"190:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":917,"linearizedBaseContracts":[917,408],"name":"ContextUpgradeable","nameLocation":"705:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":878,"nodeType":"Block","src":"799:7:5","statements":[]},"id":879,"implemented":true,"kind":"function","modifiers":[{"id":876,"kind":"modifierInvocation","modifierName":{"id":875,"name":"onlyInitializing","nameLocations":["782:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"782:16:5"},"nodeType":"ModifierInvocation","src":"782:16:5"}],"name":"__Context_init","nameLocation":"756:14:5","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"770:2:5"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"799:0:5"},"scope":917,"src":"747:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"874:7:5","statements":[]},"id":885,"implemented":true,"kind":"function","modifiers":[{"id":882,"kind":"modifierInvocation","modifierName":{"id":881,"name":"onlyInitializing","nameLocations":["857:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"857:16:5"},"nodeType":"ModifierInvocation","src":"857:16:5"}],"name":"__Context_init_unchained","nameLocation":"821:24:5","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"845:2:5"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"874:0:5"},"scope":917,"src":"812:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"948:34:5","statements":[{"expression":{"expression":{"id":890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:5","memberName":"sender","nodeType":"MemberAccess","src":"965:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":889,"id":892,"nodeType":"Return","src":"958:17:5"}]},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:5","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"905:2:5"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"939:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:5"},"scope":917,"src":"886:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"1055:32:5","statements":[{"expression":{"expression":{"id":899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:5","memberName":"data","nodeType":"MemberAccess","src":"1072:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":898,"id":901,"nodeType":"Return","src":"1065:15:5"}]},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:5","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"1005:2:5"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":903,"src":"1039:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:5"},"scope":917,"src":"988:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"1165:25:5","statements":[{"expression":{"hexValue":"30","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":907,"id":909,"nodeType":"Return","src":"1175:8:5"}]},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:5","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"1122:2:5"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"1156:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:5"},"scope":917,"src":"1093:97:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"1196:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":916,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:5","nodeType":"VariableDeclaration","scope":917,"src":"1455:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"length":{"hexValue":"3530","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":918,"src":"687:796:5","usedErrors":[]}],"src":"101:1383:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1637],"ERC20":[1504],"IERC20":[1582],"IERC20Metadata":[1607]},"id":1505,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":919,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1505,"sourceUnit":1583,"src":"130:22:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1505,"sourceUnit":1608,"src":"153:41:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1505,"sourceUnit":1638,"src":"195:33:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":924,"name":"Context","nameLocations":["1550:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1637,"src":"1550:7:6"},"id":925,"nodeType":"InheritanceSpecifier","src":"1550:7:6"},{"baseName":{"id":926,"name":"IERC20","nameLocations":["1559:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"1559:6:6"},"id":927,"nodeType":"InheritanceSpecifier","src":"1559:6:6"},{"baseName":{"id":928,"name":"IERC20Metadata","nameLocations":["1567:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1607,"src":"1567:14:6"},"id":929,"nodeType":"InheritanceSpecifier","src":"1567:14:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"230:1301:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1504,"linearizedBaseContracts":[1504,1607,1582,1637],"name":"ERC20","nameLocation":"1541:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":933,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:6","nodeType":"VariableDeclaration","scope":1504,"src":"1588:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":932,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":939,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:6","nodeType":"VariableDeclaration","scope":1504,"src":"1640:67:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":938,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":937,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":941,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:6","nodeType":"VariableDeclaration","scope":1504,"src":"1714:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":943,"mutability":"mutable","name":"_name","nameLocation":"1764:5:6","nodeType":"VariableDeclaration","scope":1504,"src":"1749:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":945,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:6","nodeType":"VariableDeclaration","scope":1504,"src":"1775:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":944,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":961,"nodeType":"Block","src":"2036:57:6","statements":[{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":953,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2046:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":954,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2054:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":956,"nodeType":"ExpressionStatement","src":"2046:13:6"},{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"2069:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":958,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2079:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":960,"nodeType":"ExpressionStatement","src":"2069:17:6"}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"1804:171:6","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":962,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"name_","nameLocation":"2006:5:6","nodeType":"VariableDeclaration","scope":962,"src":"1992:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":947,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:6","nodeType":"VariableDeclaration","scope":962,"src":"2013:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":949,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:6"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"2036:0:6"},"scope":1504,"src":"1980:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1594],"body":{"id":971,"nodeType":"Block","src":"2227:29:6","statements":[{"expression":{"id":969,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2244:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":968,"id":970,"nodeType":"Return","src":"2237:12:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"2099:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":972,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:6","nodeType":"FunctionDefinition","overrides":{"id":965,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:6"},"parameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"2171:2:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":972,"src":"2212:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":966,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:6"},"scope":1504,"src":"2158:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1600],"body":{"id":981,"nodeType":"Block","src":"2440:31:6","statements":[{"expression":{"id":979,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"2457:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":978,"id":980,"nodeType":"Return","src":"2450:14:6"}]},"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"2262:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":982,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:6","nodeType":"FunctionDefinition","overrides":{"id":975,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:6"},"parameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"2384:2:6"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"2425:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":976,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:6"},"scope":1504,"src":"2369:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1606],"body":{"id":991,"nodeType":"Block","src":"3169:26:6","statements":[{"expression":{"hexValue":"3138","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":988,"id":990,"nodeType":"Return","src":"3179:9:6"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"2477:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":992,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:6","nodeType":"FunctionDefinition","overrides":{"id":985,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:6"},"parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"3121:2:6"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"3162:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":986,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:6"},"scope":1504,"src":"3104:91:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1531],"body":{"id":1001,"nodeType":"Block","src":"3325:36:6","statements":[{"expression":{"id":999,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"3342:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":998,"id":1000,"nodeType":"Return","src":"3335:19:6"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"3201:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:6","nodeType":"FunctionDefinition","overrides":{"id":995,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:6"},"parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"3275:2:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"3316:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:6"},"scope":1504,"src":"3255:106:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1539],"body":{"id":1015,"nodeType":"Block","src":"3502:42:6","statements":[{"expression":{"baseExpression":{"id":1011,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"3519:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1013,"indexExpression":{"id":1012,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"3529:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1010,"id":1014,"nodeType":"Return","src":"3512:25:6"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"3367:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:6","nodeType":"FunctionDefinition","overrides":{"id":1007,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:6"},"parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"account","nameLocation":"3446:7:6","nodeType":"VariableDeclaration","scope":1016,"src":"3438:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:6"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1016,"src":"3493:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:6"},"scope":1504,"src":"3419:125:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1549],"body":{"id":1040,"nodeType":"Block","src":"3825:104:6","statements":[{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"owner","nameLocation":"3843:5:6","nodeType":"VariableDeclaration","scope":1040,"src":"3835:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1031,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1029,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"3851:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:6"},{"expression":{"arguments":[{"id":1033,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3883:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3890:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1035,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3894:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1032,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3873:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"3873:28:6"},{"expression":{"hexValue":"74727565","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1026,"id":1039,"nodeType":"Return","src":"3911:11:6"}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"3550:185:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1041,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:6","nodeType":"FunctionDefinition","overrides":{"id":1023,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:6"},"parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"to","nameLocation":"3766:2:6","nodeType":"VariableDeclaration","scope":1041,"src":"3758:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"amount","nameLocation":"3778:6:6","nodeType":"VariableDeclaration","scope":1041,"src":"3770:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:6"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1041,"src":"3819:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1024,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:6"},"scope":1504,"src":"3740:189:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1559],"body":{"id":1058,"nodeType":"Block","src":"4085:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1052,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"4102:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1054,"indexExpression":{"id":1053,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"4114:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1056,"indexExpression":{"id":1055,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4121:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1051,"id":1057,"nodeType":"Return","src":"4095:34:6"}]},"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"3935:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:6","nodeType":"FunctionDefinition","overrides":{"id":1048,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:6"},"parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"owner","nameLocation":"4014:5:6","nodeType":"VariableDeclaration","scope":1059,"src":"4006:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"spender","nameLocation":"4029:7:6","nodeType":"VariableDeclaration","scope":1059,"src":"4021:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:6"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"4076:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:6"},"scope":1504,"src":"3987:149:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1569],"body":{"id":1083,"nodeType":"Block","src":"4533:108:6","statements":[{"assignments":[1071],"declarations":[{"constant":false,"id":1071,"mutability":"mutable","name":"owner","nameLocation":"4551:5:6","nodeType":"VariableDeclaration","scope":1083,"src":"4543:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1074,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1072,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4559:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:6"},{"expression":{"arguments":[{"id":1076,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4590:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1077,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"4597:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1078,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"4606:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1075,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"4581:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1080,"nodeType":"ExpressionStatement","src":"4581:32:6"},{"expression":{"hexValue":"74727565","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1069,"id":1082,"nodeType":"Return","src":"4623:11:6"}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"4142:297:6","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1084,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:6","nodeType":"FunctionDefinition","overrides":{"id":1066,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:6"},"parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"spender","nameLocation":"4469:7:6","nodeType":"VariableDeclaration","scope":1084,"src":"4461:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"amount","nameLocation":"4486:6:6","nodeType":"VariableDeclaration","scope":1084,"src":"4478:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:6"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1084,"src":"4527:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1067,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:6"},"scope":1504,"src":"4444:197:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1581],"body":{"id":1116,"nodeType":"Block","src":"5306:153:6","statements":[{"assignments":[1098],"declarations":[{"constant":false,"id":1098,"mutability":"mutable","name":"spender","nameLocation":"5324:7:6","nodeType":"VariableDeclaration","scope":1116,"src":"5316:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1101,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1099,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"5334:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:6"},{"expression":{"arguments":[{"id":1103,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5372:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1104,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"5378:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1105,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5387:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5356:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"5356:38:6"},{"expression":{"arguments":[{"id":1109,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5414:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"5420:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5424:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1108,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"5404:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1113,"nodeType":"ExpressionStatement","src":"5404:27:6"},{"expression":{"hexValue":"74727565","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1096,"id":1115,"nodeType":"Return","src":"5441:11:6"}]},"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"4647:551:6","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:6","nodeType":"FunctionDefinition","overrides":{"id":1093,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:6"},"parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"from","nameLocation":"5233:4:6","nodeType":"VariableDeclaration","scope":1117,"src":"5225:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"to","nameLocation":"5247:2:6","nodeType":"VariableDeclaration","scope":1117,"src":"5239:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"amount","nameLocation":"5259:6:6","nodeType":"VariableDeclaration","scope":1117,"src":"5251:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:6"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"5300:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1094,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:6"},"scope":1504,"src":"5203:256:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1145,"nodeType":"Block","src":"5948:140:6","statements":[{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"owner","nameLocation":"5966:5:6","nodeType":"VariableDeclaration","scope":1145,"src":"5958:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1131,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1129,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"5974:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:6"},{"expression":{"arguments":[{"id":1133,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6005:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6012:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1136,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6031:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6038:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1135,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"6021:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1139,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"6049:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1132,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"5996:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"5996:64:6"},{"expression":{"hexValue":"74727565","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1126,"id":1144,"nodeType":"Return","src":"6070:11:6"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"5465:384:6","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:6","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"spender","nameLocation":"5889:7:6","nodeType":"VariableDeclaration","scope":1146,"src":"5881:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:6","nodeType":"VariableDeclaration","scope":1146,"src":"5898:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:6"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1146,"src":"5942:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1124,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:6"},"scope":1504,"src":"5854:234:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1186,"nodeType":"Block","src":"6674:328:6","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"owner","nameLocation":"6692:5:6","nodeType":"VariableDeclaration","scope":1186,"src":"6684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1160,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1158,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"6700:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:6"},{"assignments":[1162],"declarations":[{"constant":false,"id":1162,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:6","nodeType":"VariableDeclaration","scope":1186,"src":"6722:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1167,"initialValue":{"arguments":[{"id":1164,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6759:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1165,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6766:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1163,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"6749:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1169,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"6792:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1170,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"6812:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"ExpressionStatement","src":"6784:85:6"},{"id":1183,"nodeType":"UncheckedBlock","src":"6879:95:6","statements":[{"expression":{"arguments":[{"id":1176,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6912:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6919:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"6928:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1179,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"6947:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1175,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"6903:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"6903:60:6"}]},{"expression":{"hexValue":"74727565","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1155,"id":1185,"nodeType":"Return","src":"6984:11:6"}]},"documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"6094:476:6","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:6","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"spender","nameLocation":"6610:7:6","nodeType":"VariableDeclaration","scope":1187,"src":"6602:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:6","nodeType":"VariableDeclaration","scope":1187,"src":"6619:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:6"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"6668:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1153,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:6"},"scope":1504,"src":"6575:427:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1263,"nodeType":"Block","src":"7534:710:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7552:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:6","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"7544:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"7630:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:6","typeDescriptions":{}}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"7622:64:6"},{"expression":{"arguments":[{"id":1218,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7718:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"7724:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"7728:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1217,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7697:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"ExpressionStatement","src":"7697:38:6"},{"assignments":[1224],"declarations":[{"constant":false,"id":1224,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:6","nodeType":"VariableDeclaration","scope":1263,"src":"7746:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1228,"initialValue":{"baseExpression":{"id":1225,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"7768:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1227,"indexExpression":{"id":1226,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7778:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1230,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7801:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1231,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"7816:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1235,"nodeType":"ExpressionStatement","src":"7793:72:6"},{"id":1250,"nodeType":"UncheckedBlock","src":"7875:273:6","statements":[{"expression":{"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1236,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"7899:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1238,"indexExpression":{"id":1237,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7909:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7917:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1240,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"7931:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1243,"nodeType":"ExpressionStatement","src":"7899:38:6"},{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1244,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"8114:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1246,"indexExpression":{"id":1245,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"8124:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1247,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"8131:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ExpressionStatement","src":"8114:23:6"}]},{"eventCall":{"arguments":[{"id":1252,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8172:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1253,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"8178:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"8182:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"8163:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1256,"nodeType":"EmitStatement","src":"8158:31:6"},{"expression":{"arguments":[{"id":1258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8220:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"8226:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"8230:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1257,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"8200:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"8200:37:6"}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"7008:443:6","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:6","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"from","nameLocation":"7483:4:6","nodeType":"VariableDeclaration","scope":1264,"src":"7475:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"to","nameLocation":"7497:2:6","nodeType":"VariableDeclaration","scope":1264,"src":"7489:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"amount","nameLocation":"7509:6:6","nodeType":"VariableDeclaration","scope":1264,"src":"7501:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:6"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"7534:0:6"},"scope":1504,"src":"7456:788:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1320,"nodeType":"Block","src":"8585:470:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1273,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8603:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:6","typeDescriptions":{}}},"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"ExpressionStatement","src":"8595:65:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1283,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:6","typeDescriptions":{}}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1287,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8704:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1288,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"8713:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1282,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"8671:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"8671:49:6"},{"expression":{"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1291,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"8731:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1292,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"8747:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1294,"nodeType":"ExpressionStatement","src":"8731:22:6"},{"id":1301,"nodeType":"UncheckedBlock","src":"8763:175:6","statements":[{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1295,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"8899:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1297,"indexExpression":{"id":1296,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8909:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1298,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"8921:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ExpressionStatement","src":"8899:28:6"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:6","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8973:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"8982:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1302,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"8952:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"EmitStatement","src":"8947:42:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:6","typeDescriptions":{}}},"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"9032:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1317,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"9041:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1311,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"9000:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"ExpressionStatement","src":"9000:48:6"}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"8250:265:6","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:6","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"account","nameLocation":"8543:7:6","nodeType":"VariableDeclaration","scope":1321,"src":"8535:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"amount","nameLocation":"8560:6:6","nodeType":"VariableDeclaration","scope":1321,"src":"8552:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:6"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[],"src":"8585:0:6"},"scope":1504,"src":"8520:535:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1392,"nodeType":"Block","src":"9440:594:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9458:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:6","typeDescriptions":{}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"9450:67:6"},{"expression":{"arguments":[{"id":1340,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9549:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:6","typeDescriptions":{}}},"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"9570:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1339,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9528:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1347,"nodeType":"ExpressionStatement","src":"9528:49:6"},{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:6","nodeType":"VariableDeclaration","scope":1392,"src":"9588:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1353,"initialValue":{"baseExpression":{"id":1350,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9613:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1352,"indexExpression":{"id":1351,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9623:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"9649:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1356,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"9667:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"ExpressionStatement","src":"9641:71:6"},{"id":1373,"nodeType":"UncheckedBlock","src":"9722:194:6","statements":[{"expression":{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1361,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9746:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1363,"indexExpression":{"id":1362,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9756:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1364,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"9767:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1365,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"9784:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1368,"nodeType":"ExpressionStatement","src":"9746:44:6"},{"expression":{"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"9883:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"9899:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1372,"nodeType":"ExpressionStatement","src":"9883:22:6"}]},{"eventCall":{"arguments":[{"id":1375,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9940:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:6","typeDescriptions":{}}},"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"9961:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"9931:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1382,"nodeType":"EmitStatement","src":"9926:42:6"},{"expression":{"arguments":[{"id":1384,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9999:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:6","typeDescriptions":{}}},"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1389,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"10020:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1383,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"9979:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"9979:48:6"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"9061:309:6","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:6","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"account","nameLocation":"9398:7:6","nodeType":"VariableDeclaration","scope":1393,"src":"9390:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"amount","nameLocation":"9415:6:6","nodeType":"VariableDeclaration","scope":1393,"src":"9407:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:6"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"9440:0:6"},"scope":1504,"src":"9375:659:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1437,"nodeType":"Block","src":"10540:257:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"10558:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:6","typeDescriptions":{}}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1412,"nodeType":"ExpressionStatement","src":"10550:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1414,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"10636:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:6","typeDescriptions":{}}},"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"ExpressionStatement","src":"10628:68:6"},{"expression":{"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1423,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"10707:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1426,"indexExpression":{"id":1424,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"10719:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1427,"indexExpression":{"id":1425,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"10726:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1428,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"10737:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1430,"nodeType":"ExpressionStatement","src":"10707:36:6"},{"eventCall":{"arguments":[{"id":1432,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"10767:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1433,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"10774:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1434,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"10783:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1431,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10758:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1436,"nodeType":"EmitStatement","src":"10753:37:6"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"10040:412:6","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1438,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:6","nodeType":"FunctionDefinition","parameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"owner","nameLocation":"10483:5:6","nodeType":"VariableDeclaration","scope":1438,"src":"10475:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"spender","nameLocation":"10498:7:6","nodeType":"VariableDeclaration","scope":1438,"src":"10490:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"amount","nameLocation":"10515:6:6","nodeType":"VariableDeclaration","scope":1438,"src":"10507:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:6"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[],"src":"10540:0:6"},"scope":1504,"src":"10457:340:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1480,"nodeType":"Block","src":"11168:321:6","statements":[{"assignments":[1449],"declarations":[{"constant":false,"id":1449,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:6","nodeType":"VariableDeclaration","scope":1480,"src":"11178:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1454,"initialValue":{"arguments":[{"id":1451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"11215:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1452,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"11222:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1450,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11205:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1455,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"11244:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1456,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:6","memberName":"max","nodeType":"MemberAccess","src":"11264:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"IfStatement","src":"11240:243:6","trueBody":{"id":1478,"nodeType":"Block","src":"11283:200:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"11305:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1464,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"11325:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1468,"nodeType":"ExpressionStatement","src":"11297:68:6"},{"id":1477,"nodeType":"UncheckedBlock","src":"11379:94:6","statements":[{"expression":{"arguments":[{"id":1470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"11416:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1471,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"11423:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1472,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"11432:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1473,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"11451:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1469,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"11407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1476,"nodeType":"ExpressionStatement","src":"11407:51:6"}]}]}}]},"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"10803:270:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:6","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"owner","nameLocation":"11111:5:6","nodeType":"VariableDeclaration","scope":1481,"src":"11103:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"spender","nameLocation":"11126:7:6","nodeType":"VariableDeclaration","scope":1481,"src":"11118:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"amount","nameLocation":"11143:6:6","nodeType":"VariableDeclaration","scope":1481,"src":"11135:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:6"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"11168:0:6"},"scope":1504,"src":"11078:411:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1491,"nodeType":"Block","src":"12162:2:6","statements":[]},"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"11495:573:6","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1492,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:6","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"from","nameLocation":"12111:4:6","nodeType":"VariableDeclaration","scope":1492,"src":"12103:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"to","nameLocation":"12125:2:6","nodeType":"VariableDeclaration","scope":1492,"src":"12117:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"amount","nameLocation":"12137:6:6","nodeType":"VariableDeclaration","scope":1492,"src":"12129:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:6"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[],"src":"12162:0:6"},"scope":1504,"src":"12073:91:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"12840:2:6","statements":[]},"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"12170:577:6","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:6","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"from","nameLocation":"12789:4:6","nodeType":"VariableDeclaration","scope":1503,"src":"12781:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"to","nameLocation":"12803:2:6","nodeType":"VariableDeclaration","scope":1503,"src":"12795:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"amount","nameLocation":"12815:6:6","nodeType":"VariableDeclaration","scope":1503,"src":"12807:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:6"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"12840:0:6"},"scope":1504,"src":"12752:90:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1505,"src":"1532:11312:6","usedErrors":[]}],"src":"105:12740:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1582]},"id":1583,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1506,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1582,"linearizedBaseContracts":[1582],"name":"IERC20","nameLocation":"212:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"225:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1516,"name":"Transfer","nameLocation":"394:8:7","nodeType":"EventDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:7","nodeType":"VariableDeclaration","scope":1516,"src":"403:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1512,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:7","nodeType":"VariableDeclaration","scope":1516,"src":"425:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1514,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:7","nodeType":"VariableDeclaration","scope":1516,"src":"445:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:7"},"src":"388:72:7"},{"anonymous":false,"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"466:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1525,"name":"Approval","nameLocation":"625:8:7","nodeType":"EventDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:7","nodeType":"VariableDeclaration","scope":1525,"src":"634:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:7","nodeType":"VariableDeclaration","scope":1525,"src":"657:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:7","nodeType":"VariableDeclaration","scope":1525,"src":"682:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:7"},"src":"619:78:7"},{"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"703:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1531,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":1582,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"835:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1539,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":1539,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1539,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":1582,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"986:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1549,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:7","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"to","nameLocation":"1219:2:7","nodeType":"VariableDeclaration","scope":1549,"src":"1211:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"amount","nameLocation":"1231:6:7","nodeType":"VariableDeclaration","scope":1549,"src":"1223:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:7"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"1257:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1546,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:7"},"scope":1582,"src":"1193:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"1269:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1559,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:7","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"owner","nameLocation":"1565:5:7","nodeType":"VariableDeclaration","scope":1559,"src":"1557:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"spender","nameLocation":"1580:7:7","nodeType":"VariableDeclaration","scope":1559,"src":"1572:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:7"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1559,"src":"1612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:7"},"scope":1582,"src":"1538:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"1627:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1569,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:7","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"spender","nameLocation":"2299:7:7","nodeType":"VariableDeclaration","scope":1569,"src":"2291:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"amount","nameLocation":"2316:6:7","nodeType":"VariableDeclaration","scope":1569,"src":"2308:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:7"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"2342:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1566,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:7"},"scope":1582,"src":"2274:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"2354:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1581,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:7","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"from","nameLocation":"2676:4:7","nodeType":"VariableDeclaration","scope":1581,"src":"2668:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"to","nameLocation":"2690:2:7","nodeType":"VariableDeclaration","scope":1581,"src":"2682:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"amount","nameLocation":"2702:6:7","nodeType":"VariableDeclaration","scope":1581,"src":"2694:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:7"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"2728:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1578,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:7"},"scope":1582,"src":"2646:88:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1583,"src":"202:2534:7","usedErrors":[]}],"src":"106:2631:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1582],"IERC20Metadata":[1607]},"id":1608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1584,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1608,"sourceUnit":1583,"src":"135:23:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1587,"name":"IERC20","nameLocations":["305:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"305:6:8"},"id":1588,"nodeType":"InheritanceSpecifier","src":"305:6:8"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"160:116:8","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1607,"linearizedBaseContracts":[1607,1582],"name":"IERC20Metadata","nameLocation":"287:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"318:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1594,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:8","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"390:2:8"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"416:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1591,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:8"},"scope":1607,"src":"377:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"437:56:8","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1600,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:8","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[],"src":"513:2:8"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1600,"src":"539:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1597,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:8"},"scope":1607,"src":"498:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"560:65:8","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1606,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:8","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"647:2:8"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"673:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1603,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:8"},"scope":1607,"src":"630:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1608,"src":"277:405:8","usedErrors":[]}],"src":"110:573:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1637]},"id":1638,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1609,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"126:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1637,"linearizedBaseContracts":[1637],"name":"Context","nameLocation":"641:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1618,"nodeType":"Block","src":"717:34:9","statements":[{"expression":{"expression":{"id":1615,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:9","memberName":"sender","nodeType":"MemberAccess","src":"734:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1614,"id":1617,"nodeType":"Return","src":"727:17:9"}]},"id":1619,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:9","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"674:2:9"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1619,"src":"708:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:9"},"scope":1637,"src":"655:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1627,"nodeType":"Block","src":"824:32:9","statements":[{"expression":{"expression":{"id":1624,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:9","memberName":"data","nodeType":"MemberAccess","src":"841:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1623,"id":1626,"nodeType":"Return","src":"834:15:9"}]},"id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:9","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"774:2:9"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1628,"src":"808:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:9"},"scope":1637,"src":"757:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1635,"nodeType":"Block","src":"934:25:9","statements":[{"expression":{"hexValue":"30","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1632,"id":1634,"nodeType":"Return","src":"944:8:9"}]},"id":1636,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:9","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"891:2:9"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1636,"src":"925:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:9"},"scope":1637,"src":"862:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1638,"src":"623:338:9","usedErrors":[]}],"src":"101:861:9"},"id":9},"contracts/Gateway.sol":{"ast":{"absolutePath":"contracts/Gateway.sol","exportedSymbols":{"ContextUpgradeable":[917],"Gateway":[2396],"GatewaySettingManager":[2580],"IERC20":[1582],"IGateway":[2761],"Initializable":[408],"PausableUpgradeable":[536]},"id":2397,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1639,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"39:24:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":1640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":537,"src":"65:78:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/GatewaySettingManager.sol","file":"./GatewaySettingManager.sol","id":1642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":2581,"src":"145:66:10","symbolAliases":[{"foreign":{"id":1641,"name":"GatewaySettingManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"153:21:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGateway.sol","file":"./interfaces/IGateway.sol","id":1645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2397,"sourceUnit":2762,"src":"212:59:10","symbolAliases":[{"foreign":{"id":1643,"name":"IGateway","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"220:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1644,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"230:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1647,"name":"IGateway","nameLocations":["410:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2761,"src":"410:8:10"},"id":1648,"nodeType":"InheritanceSpecifier","src":"410:8:10"},{"baseName":{"id":1649,"name":"GatewaySettingManager","nameLocations":["420:21:10"],"nodeType":"IdentifierPath","referencedDeclaration":2580,"src":"420:21:10"},"id":1650,"nodeType":"InheritanceSpecifier","src":"420:21:10"},{"baseName":{"id":1651,"name":"PausableUpgradeable","nameLocations":["443:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"443:19:10"},"id":1652,"nodeType":"InheritanceSpecifier","src":"443:19:10"}],"canonicalName":"Gateway","contractDependencies":[],"contractKind":"contract","documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"273:116:10","text":" @title Gateway\n @notice This contract serves as a gateway for creating orders and managing settlements."},"fullyImplemented":true,"id":2396,"linearizedBaseContracts":[2396,536,2580,106,239,917,408,2761],"name":"Gateway","nameLocation":"399:7:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Gateway.fee","id":1657,"members":[{"constant":false,"id":1654,"mutability":"mutable","name":"protocolFee","nameLocation":"489:11:10","nodeType":"VariableDeclaration","scope":1657,"src":"481:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"481:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"liquidityProviderAmount","nameLocation":"512:23:10","nodeType":"VariableDeclaration","scope":1657,"src":"504:31:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"fee","nameLocation":"473:3:10","nodeType":"StructDefinition","scope":2396,"src":"466:73:10","visibility":"public"},{"constant":false,"id":1662,"mutability":"mutable","name":"order","nameLocation":"576:5:10","nodeType":"VariableDeclaration","scope":2396,"src":"542:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order)"},"typeName":{"id":1661,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"550:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"542:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1660,"nodeType":"UserDefinedTypeName","pathNode":{"id":1659,"name":"Order","nameLocations":["561:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"561:5:10"},"referencedDeclaration":2667,"src":"561:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage_ptr","typeString":"struct IGateway.Order"}}},"visibility":"private"},{"constant":false,"id":1666,"mutability":"mutable","name":"_nonce","nameLocation":"620:6:10","nodeType":"VariableDeclaration","scope":2396,"src":"584:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1665,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"584:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1670,"mutability":"mutable","name":"__gap","nameLocation":"649:5:10","nodeType":"VariableDeclaration","scope":2396,"src":"629:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1669,"length":{"hexValue":"3530","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"637:2:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"629:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"body":{"id":1677,"nodeType":"Block","src":"722:30:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1674,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"726:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"726:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"726:22:10"}]},"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"658:48:10","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":1678,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"719:2:10"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"722:0:10"},"scope":2396,"src":"708:44:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1694,"nodeType":"Block","src":"838:71:10","statements":[{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1684,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"842:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130305f303030","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"852:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"src":"842:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1687,"nodeType":"ExpressionStatement","src":"842:17:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1688,"name":"__Ownable2Step_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"863:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"863:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"ExpressionStatement","src":"863:21:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1691,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"888:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"888:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"888:17:10"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"755:38:10","text":" @dev Initialize function."},"functionSelector":"8129fc1c","id":1695,"implemented":true,"kind":"function","modifiers":[{"id":1682,"kind":"modifierInvocation","modifierName":{"id":1681,"name":"initializer","nameLocations":["826:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":310,"src":"826:11:10"},"nodeType":"ModifierInvocation","src":"826:11:10"}],"name":"initialize","nameLocation":"804:10:10","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[],"src":"814:2:10"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[],"src":"838:0:10"},"scope":2396,"src":"795:114:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1707,"nodeType":"Block","src":"1018:72:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1699,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1030:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1034:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1030:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1701,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1044:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1030:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7941676772656761746f72","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1064:16:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","typeString":"literal_string \"OnlyAggregator\""},"value":"OnlyAggregator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","typeString":"literal_string \"OnlyAggregator\""}],"id":1698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1022:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"ExpressionStatement","src":"1022:59:10"},{"id":1706,"nodeType":"PlaceholderStatement","src":"1085:1:10"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"912:78:10","text":" @dev Modifier that allows only the aggregator to call a function."},"id":1708,"name":"onlyAggregator","nameLocation":"1001:14:10","nodeType":"ModifierDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[],"src":"1015:2:10"},"src":"992:98:10","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"1361:16:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1714,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1365:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1365:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"ExpressionStatement","src":"1365:8:10"}]},"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"1286:37:10","text":" @dev Pause the contract."},"functionSelector":"8456cb59","id":1718,"implemented":true,"kind":"function","modifiers":[{"id":1712,"kind":"modifierInvocation","modifierName":{"id":1711,"name":"onlyOwner","nameLocations":["1351:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1351:9:10"},"nodeType":"ModifierInvocation","src":"1351:9:10"}],"name":"pause","nameLocation":"1334:5:10","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[],"src":"1339:2:10"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"1361:0:10"},"scope":2396,"src":"1325:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1727,"nodeType":"Block","src":"1459:18:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1724,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1463:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1463:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"ExpressionStatement","src":"1463:10:10"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"1380:39:10","text":" @dev Unpause the contract."},"functionSelector":"3f4ba83a","id":1728,"implemented":true,"kind":"function","modifiers":[{"id":1722,"kind":"modifierInvocation","modifierName":{"id":1721,"name":"onlyOwner","nameLocations":["1449:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1449:9:10"},"nodeType":"ModifierInvocation","src":"1449:9:10"}],"name":"unpause","nameLocation":"1430:7:10","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"1437:2:10"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[],"src":"1459:0:10"},"scope":2396,"src":"1421:56:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2687],"body":{"id":1847,"nodeType":"Block","src":"1945:1088:10","statements":[{"expression":{"arguments":[{"id":1751,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"1988:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1752,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1996:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1753,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2005:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1754,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"2021:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1755,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2042:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1750,"name":"_handler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1979:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,address,uint256) view"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:74:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1757,"nodeType":"ExpressionStatement","src":"1979:74:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1761,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2098:11:10","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1759,"name":"bytes","nodeType":"ElementaryTypeName","src":"2092:5:10","typeDescriptions":{}}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2111:6:10","memberName":"length","nodeType":"MemberAccess","src":"2092:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2092:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69644d65737361676548617368","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2124:20:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","typeString":"literal_string \"InvalidMessageHash\""},"value":"InvalidMessageHash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","typeString":"literal_string \"InvalidMessageHash\""}],"id":1758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2084:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1768,"nodeType":"ExpressionStatement","src":"2084:61:10"},{"expression":{"arguments":[{"expression":{"id":1773,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2226:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2230:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2226:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1777,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2246:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Gateway_$2396","typeString":"contract Gateway"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Gateway_$2396","typeString":"contract Gateway"}],"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2238:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"2238:7:10","typeDescriptions":{}}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2253:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1780,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2263:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2253:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1770,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2205:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1769,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"2198:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2198:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2213:12:10","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"2198:27:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2198:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1783,"nodeType":"ExpressionStatement","src":"2198:76:10"},{"expression":{"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2329:20:10","subExpression":{"baseExpression":{"id":1784,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2329:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1787,"indexExpression":{"expression":{"id":1785,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2336:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2340:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2336:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2329:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1789,"nodeType":"ExpressionStatement","src":"2329:20:10"},{"expression":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1790,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2403:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":1794,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2434:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2438:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2434:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1796,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2446:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1799,"indexExpression":{"expression":{"id":1797,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2453:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2457:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2453:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2446:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1792,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2423:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2427:6:10","memberName":"encode","nodeType":"MemberAccess","src":"2423:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2423:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1791,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2413:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2413:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2403:63:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1803,"nodeType":"ExpressionStatement","src":"2403:63:10"},{"assignments":[1805],"declarations":[{"constant":false,"id":1805,"mutability":"mutable","name":"_protocolFee","nameLocation":"2503:12:10","nodeType":"VariableDeclaration","scope":1847,"src":"2495:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"2495:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1812,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1807,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2529:18:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2519:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2518:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1810,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2551:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2518:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2495:63:10"},{"expression":{"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1813,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2562:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1815,"indexExpression":{"id":1814,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2568:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2562:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1817,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2598:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2602:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2598:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1819,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2620:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1820,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"2651:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1821,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2686:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1822,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2714:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2766:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":1825,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2791:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1828,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2829:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2822:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1826,"name":"uint64","nodeType":"ElementaryTypeName","src":"2822:6:10","typeDescriptions":{}}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1830,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"2850:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1816,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2579:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Order_$2667_storage_ptr_$","typeString":"type(struct IGateway.Order storage pointer)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2590:6:10","2613:5:10","2631:18:10","2675:9:10","2701:11:10","2731:11:10","2754:10:10","2776:13:10","2810:10:10","2842:6:10"],"names":["sender","token","senderFeeRecipient","senderFee","protocolFee","isFulfilled","isRefunded","refundAddress","currentBPS","amount"],"nodeType":"FunctionCall","src":"2579:283:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_memory_ptr","typeString":"struct IGateway.Order memory"}},"src":"2562:300:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1833,"nodeType":"ExpressionStatement","src":"2562:300:10"},{"eventCall":{"arguments":[{"id":1835,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2919:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1836,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2938:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1837,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2949:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1839,"indexExpression":{"id":1838,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2955:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2949:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2964:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"2949:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1841,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2975:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1842,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2992:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1843,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3004:5:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":1844,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3014:11:10","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1834,"name":"OrderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2902:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes32,uint256,string memory)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2902:127:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"EmitStatement","src":"2897:132:10"}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"1668:39:10","text":"@dev See {createOrder-IGateway}. "},"functionSelector":"809804f7","id":1848,"implemented":true,"kind":"function","modifiers":[{"id":1746,"kind":"modifierInvocation","modifierName":{"id":1745,"name":"whenNotPaused","nameLocations":["1905:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"1905:13:10"},"nodeType":"ModifierInvocation","src":"1905:13:10"}],"name":"createOrder","nameLocation":"1718:11:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"_token","nameLocation":"1741:6:10","nodeType":"VariableDeclaration","scope":1848,"src":"1733:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"1733:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"_amount","nameLocation":"1759:7:10","nodeType":"VariableDeclaration","scope":1848,"src":"1751:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"_rate","nameLocation":"1777:5:10","nodeType":"VariableDeclaration","scope":1848,"src":"1770:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1734,"name":"uint96","nodeType":"ElementaryTypeName","src":"1770:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"1794:19:10","nodeType":"VariableDeclaration","scope":1848,"src":"1786:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"_senderFee","nameLocation":"1825:10:10","nodeType":"VariableDeclaration","scope":1848,"src":"1817:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"_refundAddress","nameLocation":"1847:14:10","nodeType":"VariableDeclaration","scope":1848,"src":"1839:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"1839:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"messageHash","nameLocation":"1881:11:10","nodeType":"VariableDeclaration","scope":1848,"src":"1865:27:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1742,"name":"string","nodeType":"ElementaryTypeName","src":"1865:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1729:166:10"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"orderId","nameLocation":"1936:7:10","nodeType":"VariableDeclaration","scope":1848,"src":"1928:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1747,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1928:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1927:17:10"},"scope":2396,"src":"1709:1324:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1903,"nodeType":"Block","src":"3577:276:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1863,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"3589:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1865,"indexExpression":{"id":1864,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"3607:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3589:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3618:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3589:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4e6f74537570706f72746564","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3621:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","typeString":"literal_string \"TokenNotSupported\""},"value":"TokenNotSupported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","typeString":"literal_string \"TokenNotSupported\""}],"id":1862,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"3581:60:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"3653:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3653:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7449735a65726f","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3667:14:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""},"value":"AmountIsZero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""}],"id":1871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3645:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"ExpressionStatement","src":"3645:37:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3694:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3720:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3712:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:10","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3712:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3694:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468726f775a65726f41646472657373","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3724:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","typeString":"literal_string \"ThrowZeroAddress\""},"value":"ThrowZeroAddress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","typeString":"literal_string \"ThrowZeroAddress\""}],"id":1878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3686:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1887,"nodeType":"ExpressionStatement","src":"3686:57:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"3752:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3766:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3752:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"IfStatement","src":"3748:102:10","trueBody":{"id":1901,"nodeType":"Block","src":"3769:81:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"3782:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3813:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3805:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:10","typeDescriptions":{}}},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3805:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3782:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696453656e646572466565526563697069656e74","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3817:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","typeString":"literal_string \"InvalidSenderFeeRecipient\""},"value":"InvalidSenderFeeRecipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","typeString":"literal_string \"InvalidSenderFeeRecipient\""}],"id":1891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3774:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"ExpressionStatement","src":"3774:71:10"}]}}]},"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"3036:388:10","text":" @dev Internal function to handle order creation.\n @param _token The address of the token being traded.\n @param _amount The amount of tokens being traded.\n @param _refundAddress The address to refund the tokens in case of cancellation.\n @param _senderFeeRecipient The address of the recipient for the sender fee.\n @param _senderFee The amount of the sender fee."},"id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"_handler","nameLocation":"3435:8:10","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"_token","nameLocation":"3455:6:10","nodeType":"VariableDeclaration","scope":1904,"src":"3447:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"_amount","nameLocation":"3473:7:10","nodeType":"VariableDeclaration","scope":1904,"src":"3465:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"3465:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"_refundAddress","nameLocation":"3492:14:10","nodeType":"VariableDeclaration","scope":1904,"src":"3484:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"3518:19:10","nodeType":"VariableDeclaration","scope":1904,"src":"3510:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"3510:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"_senderFee","nameLocation":"3549:10:10","nodeType":"VariableDeclaration","scope":1904,"src":"3541:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3443:119:10"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[],"src":"3577:0:10"},"scope":2396,"src":"3426:427:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2701],"body":{"id":2064,"nodeType":"Block","src":"4248:1417:10","statements":[{"expression":{"arguments":[{"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4311:28:10","subExpression":{"expression":{"baseExpression":{"id":1921,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4312:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1923,"indexExpression":{"id":1922,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4318:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4312:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4328:11:10","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"4312:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657246756c66696c6c6564","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4341:16:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""},"value":"OrderFulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""}],"id":1920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4303:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4303:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"4303:55:10"},{"expression":{"arguments":[{"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4370:27:10","subExpression":{"expression":{"baseExpression":{"id":1930,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4371:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1932,"indexExpression":{"id":1931,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4377:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4371:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4387:10:10","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2660,"src":"4371:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572526566756e646564","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4399:15:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""},"value":"OrderRefunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""}],"id":1929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4362:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4362:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1937,"nodeType":"ExpressionStatement","src":"4362:53:10"},{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"token","nameLocation":"4460:5:10","nodeType":"VariableDeclaration","scope":2064,"src":"4452:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1944,"initialValue":{"expression":{"baseExpression":{"id":1940,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4468:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1942,"indexExpression":{"id":1941,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4474:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4468:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4484:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"4468:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4452:37:10"},{"expression":{"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1945,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4556:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1947,"indexExpression":{"id":1946,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4562:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4556:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4572:10:10","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":2664,"src":"4556:26:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1949,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"4586:14:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4556:44:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1951,"nodeType":"ExpressionStatement","src":"4556:44:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1952,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4609:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1954,"indexExpression":{"id":1953,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4615:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4609:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4625:10:10","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":2664,"src":"4609:26:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4639:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4609:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2002,"nodeType":"IfStatement","src":"4605:453:10","trueBody":{"id":2001,"nodeType":"Block","src":"4642:416:10","statements":[{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1958,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4692:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1960,"indexExpression":{"id":1959,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4698:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4692:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4708:11:10","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"4692:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4722:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4692:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1964,"nodeType":"ExpressionStatement","src":"4692:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1965,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4736:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1967,"indexExpression":{"id":1966,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4742:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4736:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4752:9:10","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"4736:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4765:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4736:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2000,"nodeType":"IfStatement","src":"4732:321:10","trueBody":{"id":1999,"nodeType":"Block","src":"4768:285:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1978,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4846:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1980,"indexExpression":{"id":1979,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4852:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4846:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4862:18:10","memberName":"senderFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"4846:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1982,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4887:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1984,"indexExpression":{"id":1983,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4893:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4887:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4903:9:10","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"4887:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1972,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4808:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1974,"indexExpression":{"id":1973,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4814:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4808:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4824:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"4808:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1971,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4801:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4831:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"4801:38:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:117:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1987,"nodeType":"ExpressionStatement","src":"4801:117:10"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1989,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4975:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1991,"indexExpression":{"id":1990,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4981:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4975:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4991:18:10","memberName":"senderFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"4975:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1993,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5016:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1995,"indexExpression":{"id":1994,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"5022:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":1996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5032:9:10","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"5016:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1988,"name":"SenderFeeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"4948:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4948:99:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"EmitStatement","src":"4943:104:10"}]}}]}},{"assignments":[2004],"declarations":[{"constant":false,"id":2004,"mutability":"mutable","name":"liquidityProviderAmount","nameLocation":"5106:23:10","nodeType":"VariableDeclaration","scope":2064,"src":"5098:31:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"5098:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2014,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2005,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5133:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2007,"indexExpression":{"id":2006,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"5139:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5133:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5149:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"5133:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2009,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"5158:14:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5133:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5132:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2012,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"5176:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5132:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5098:85:10"},{"expression":{"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2015,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5187:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2017,"indexExpression":{"id":2016,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"5193:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5187:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5203:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"5187:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2019,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"5213:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5187:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2021,"nodeType":"ExpressionStatement","src":"5187:49:10"},{"assignments":[2023],"declarations":[{"constant":false,"id":2023,"mutability":"mutable","name":"protocolFee","nameLocation":"5249:11:10","nodeType":"VariableDeclaration","scope":2064,"src":"5241:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2030,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2024,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"5264:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2025,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"5290:18:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5264:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5263:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2028,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"5312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5241:78:10"},{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2031,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"5323:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2032,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"5350:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5323:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2034,"nodeType":"ExpressionStatement","src":"5323:38:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"5397:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5411:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5397:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"5393:73:10","trueBody":{"expression":{"arguments":[{"id":2042,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5437:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"5454:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2039,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5421:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2038,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5414:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5428:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"5414:22:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"ExpressionStatement","src":"5414:52:10"}},{"expression":{"arguments":[{"id":2051,"name":"_liquidityProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"5494:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2052,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"5514:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2048,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5478:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2047,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5471:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5471:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5485:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"5471:22:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5471:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"nodeType":"ExpressionStatement","src":"5471:67:10"},{"eventCall":{"arguments":[{"id":2056,"name":"_splitOrderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5585:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2057,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"5600:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2058,"name":"_liquidityProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"5610:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2059,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"5630:14:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2055,"name":"OrderSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"5572:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint96_$returns$__$","typeString":"function (bytes32,bytes32,address,uint96)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5572:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"EmitStatement","src":"5567:78:10"},{"expression":{"hexValue":"74727565","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5657:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1919,"id":2063,"nodeType":"Return","src":"5650:11:10"}]},"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"4054:34:10","text":"@dev See {settle-IGateway}. "},"functionSelector":"f22ee704","id":2065,"implemented":true,"kind":"function","modifiers":[{"id":1916,"kind":"modifierInvocation","modifierName":{"id":1915,"name":"onlyAggregator","nameLocations":["4218:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"4218:14:10"},"nodeType":"ModifierInvocation","src":"4218:14:10"}],"name":"settle","nameLocation":"4099:6:10","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"_splitOrderId","nameLocation":"4117:13:10","nodeType":"VariableDeclaration","scope":2065,"src":"4109:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4109:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"_orderId","nameLocation":"4142:8:10","nodeType":"VariableDeclaration","scope":2065,"src":"4134:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4134:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"4162:18:10","nodeType":"VariableDeclaration","scope":2065,"src":"4154:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"4154:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"_settlePercent","nameLocation":"4191:14:10","nodeType":"VariableDeclaration","scope":2065,"src":"4184:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1912,"name":"uint64","nodeType":"ElementaryTypeName","src":"4184:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4105:103:10"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"4242:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1917,"name":"bool","nodeType":"ElementaryTypeName","src":"4242:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4241:6:10"},"scope":2396,"src":"4090:1575:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2711],"body":{"id":2170,"nodeType":"Block","src":"5791:833:10","statements":[{"expression":{"arguments":[{"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5854:28:10","subExpression":{"expression":{"baseExpression":{"id":2078,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5855:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2080,"indexExpression":{"id":2079,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"5861:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5855:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5871:11:10","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"5855:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657246756c66696c6c6564","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5884:16:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""},"value":"OrderFulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""}],"id":2077,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5846:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2085,"nodeType":"ExpressionStatement","src":"5846:55:10"},{"expression":{"arguments":[{"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5913:27:10","subExpression":{"expression":{"baseExpression":{"id":2087,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5914:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2089,"indexExpression":{"id":2088,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"5920:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5914:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5930:10:10","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2660,"src":"5914:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572526566756e646564","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5942:15:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""},"value":"OrderRefunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""}],"id":2086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5905:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2094,"nodeType":"ExpressionStatement","src":"5905:53:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2096,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5970:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2098,"indexExpression":{"id":2097,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"5976:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5970:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5986:11:10","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":2656,"src":"5970:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2100,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6001:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5970:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665654578636565647350726f746f636f6c466565","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6007:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","typeString":"literal_string \"FeeExceedsProtocolFee\""},"value":"FeeExceedsProtocolFee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","typeString":"literal_string \"FeeExceedsProtocolFee\""}],"id":2095,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5962:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5962:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2104,"nodeType":"ExpressionStatement","src":"5962:69:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6040:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6040:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"6036:127:10","trueBody":{"id":2119,"nodeType":"Block","src":"6050:113:10","statements":[{"expression":{"arguments":[{"id":2115,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"6136:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2116,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6153:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":2109,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6104:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2111,"indexExpression":{"id":2110,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6110:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6104:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6120:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"6104:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2108,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"6097:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6127:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"6097:38:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2118,"nodeType":"ExpressionStatement","src":"6097:61:10"}]}},{"expression":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2121,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6191:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2123,"indexExpression":{"id":2122,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6197:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6191:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6207:10:10","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2660,"src":"6191:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6220:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6191:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2127,"nodeType":"ExpressionStatement","src":"6191:33:10"},{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2128,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6228:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2130,"indexExpression":{"id":2129,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6234:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6228:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6244:10:10","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":2664,"src":"6228:26:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6257:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6228:30:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2134,"nodeType":"ExpressionStatement","src":"6228:30:10"},{"assignments":[2136],"declarations":[{"constant":false,"id":2136,"mutability":"mutable","name":"refundAmount","nameLocation":"6305:12:10","nodeType":"VariableDeclaration","scope":2170,"src":"6297:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"6297:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2143,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2137,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6320:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2139,"indexExpression":{"id":2138,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6326:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6336:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"6320:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2141,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6345:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6320:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6297:52:10"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2151,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6462:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2153,"indexExpression":{"id":2152,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6468:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6462:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6478:13:10","memberName":"refundAddress","nodeType":"MemberAccess","referencedDeclaration":2662,"src":"6462:29:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2155,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6496:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":2156,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6511:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2158,"indexExpression":{"id":2157,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6517:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6511:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6527:9:10","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"6511:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":2145,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6426:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2147,"indexExpression":{"id":2146,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6432:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6426:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6442:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"6426:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2144,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"6419:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6449:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"6419:38:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:121:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"nodeType":"ExpressionStatement","src":"6419:121:10"},{"eventCall":{"arguments":[{"id":2164,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6589:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2165,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6595:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2163,"name":"OrderRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"6575:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6575:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2167,"nodeType":"EmitStatement","src":"6570:34:10"},{"expression":{"hexValue":"74727565","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6616:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2076,"id":2169,"nodeType":"Return","src":"6609:11:10"}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"5668:34:10","text":"@dev See {refund-IGateway}. "},"functionSelector":"71eedb88","id":2171,"implemented":true,"kind":"function","modifiers":[{"id":2073,"kind":"modifierInvocation","modifierName":{"id":2072,"name":"onlyAggregator","nameLocations":["5761:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"5761:14:10"},"nodeType":"ModifierInvocation","src":"5761:14:10"}],"name":"refund","nameLocation":"5713:6:10","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"_fee","nameLocation":"5728:4:10","nodeType":"VariableDeclaration","scope":2171,"src":"5720:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"_orderId","nameLocation":"5742:8:10","nodeType":"VariableDeclaration","scope":2171,"src":"5734:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5734:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5719:32:10"},"returnParameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"5785:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2074,"name":"bool","nodeType":"ElementaryTypeName","src":"5785:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5784:6:10"},"scope":2396,"src":"5704:920:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2735],"body":{"id":2348,"nodeType":"Block","src":"7010:1225:10","statements":[{"expression":{"arguments":[{"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7022:28:10","subExpression":{"expression":{"baseExpression":{"id":2198,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7023:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2200,"indexExpression":{"id":2199,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7029:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7023:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:11:10","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"7023:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465724e6f7446756c66696c6c6564","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7052:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86","typeString":"literal_string \"OrderNotFulfilled\""},"value":"OrderNotFulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86","typeString":"literal_string \"OrderNotFulfilled\""}],"id":2197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7014:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7014:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2205,"nodeType":"ExpressionStatement","src":"7014:58:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2207,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"7084:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7094:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7084:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7449735a65726f","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7097:14:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""},"value":"AmountIsZero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""}],"id":2206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7076:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7076:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2212,"nodeType":"ExpressionStatement","src":"7076:36:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"7124:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7146:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7138:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"7138:7:10","typeDescriptions":{}}},"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7138:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7124:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526563697069656e7449735a65726f41646472657373","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7150:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07","typeString":"literal_string \"RecipientIsZeroAddress\""},"value":"RecipientIsZeroAddress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07","typeString":"literal_string \"RecipientIsZeroAddress\""}],"id":2213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7116:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7116:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"7116:59:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2223,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"7183:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7197:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7183:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2250,"nodeType":"IfStatement","src":"7180:259:10","trueBody":{"id":2249,"nodeType":"Block","src":"7200:239:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"7213:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7244:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7236:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"7236:7:10","typeDescriptions":{}}},"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7236:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7213:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572466565526563697069656e7449735a65726f41646472657373","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7248:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61","typeString":"literal_string \"SenderFeeRecipientIsZeroAddress\""},"value":"SenderFeeRecipientIsZeroAddress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61","typeString":"literal_string \"SenderFeeRecipientIsZeroAddress\""}],"id":2226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7205:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7205:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"ExpressionStatement","src":"7205:77:10"},{"expression":{"arguments":[{"id":2240,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"7317:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2241,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"7342:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2237,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"7295:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"7288:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7288:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7303:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"7288:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7288:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2243,"nodeType":"ExpressionStatement","src":"7288:69:10"},{"eventCall":{"arguments":[{"id":2245,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"7394:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2246,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"7419:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2244,"name":"SenderFeeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"7368:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7368:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2248,"nodeType":"EmitStatement","src":"7363:71:10"}]}},{"assignments":[2252],"declarations":[{"constant":false,"id":2252,"mutability":"mutable","name":"protocolFee","nameLocation":"7451:11:10","nodeType":"VariableDeclaration","scope":2348,"src":"7443:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"7443:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2259,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"7466:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2254,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"7476:18:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7466:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7465:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2257,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"7498:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7465:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7443:62:10"},{"assignments":[2261],"declarations":[{"constant":false,"id":2261,"mutability":"mutable","name":"liquidityProviderAmount","nameLocation":"7517:23:10","nodeType":"VariableDeclaration","scope":2348,"src":"7509:31:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"7509:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2265,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"7543:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2263,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"7553:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7543:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7509:55:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2266,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"7573:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7587:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7573:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"nodeType":"IfStatement","src":"7569:74:10","trueBody":{"expression":{"arguments":[{"id":2273,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"7614:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2274,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"7631:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2270,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"7597:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2269,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"7590:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"7590:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2276,"nodeType":"ExpressionStatement","src":"7590:53:10"}},{"expression":{"arguments":[{"id":2282,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"7672:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2283,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"7684:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2279,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"7655:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2278,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"7648:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1582_$","typeString":"type(contract IERC20)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7648:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1582","typeString":"contract IERC20"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7663:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1549,"src":"7648:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7648:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2285,"nodeType":"ExpressionStatement","src":"7648:60:10"},{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2286,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7741:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2288,"indexExpression":{"id":2287,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7747:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7741:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7757:6:10","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"7741:22:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2290,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"7766:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7741:35:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2292,"nodeType":"ExpressionStatement","src":"7741:35:10"},{"expression":{"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2293,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7780:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2295,"indexExpression":{"id":2294,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7786:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7780:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7796:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"7780:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2297,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"7804:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7780:30:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2299,"nodeType":"ExpressionStatement","src":"7780:30:10"},{"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2300,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7814:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2302,"indexExpression":{"id":2301,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7820:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7814:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7830:18:10","memberName":"senderFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"7814:34:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2304,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"7851:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7814:56:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2306,"nodeType":"ExpressionStatement","src":"7814:56:10"},{"expression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2307,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7874:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2309,"indexExpression":{"id":2308,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7880:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7874:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7890:9:10","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"7874:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2311,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"7902:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7874:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2313,"nodeType":"ExpressionStatement","src":"7874:38:10"},{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2314,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7916:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2316,"indexExpression":{"id":2315,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7922:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7916:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7932:11:10","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":2656,"src":"7916:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2318,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"7946:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7916:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2320,"nodeType":"ExpressionStatement","src":"7916:41:10"},{"expression":{"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2321,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7961:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2323,"indexExpression":{"id":2322,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7967:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7961:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7977:11:10","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"7961:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7991:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7961:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2327,"nodeType":"ExpressionStatement","src":"7961:34:10"},{"expression":{"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2328,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"7999:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2330,"indexExpression":{"id":2329,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"8005:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7999:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"id":2331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8015:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"7999:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2332,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"8025:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2334,"nodeType":"ExpressionStatement","src":"7999:33:10"},{"eventCall":{"arguments":[{"id":2336,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"8091:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2337,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"8104:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2338,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"8116:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2339,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8131:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2340,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"8142:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2341,"name":"_liquidityProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"8166:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2342,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"8189:5:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2343,"name":"_messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"8199:12:10","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":2335,"name":"ProcessSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"8069:17:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint96_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,uint256,address,address,address,address,uint96,string memory)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:146:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"EmitStatement","src":"8064:151:10"},{"expression":{"hexValue":"74727565","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8227:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2196,"id":2347,"nodeType":"Return","src":"8220:11:10"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"6627:45:10","text":"@dev See {processSettlement-IGateway}. "},"functionSelector":"3d3f14f4","id":2349,"implemented":true,"kind":"function","modifiers":[{"id":2193,"kind":"modifierInvocation","modifierName":{"id":2192,"name":"onlyAggregator","nameLocations":["6980:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"6980:14:10"},"nodeType":"ModifierInvocation","src":"6980:14:10"}],"name":"processSettlement","nameLocation":"6683:17:10","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"_orderId","nameLocation":"6718:8:10","nodeType":"VariableDeclaration","scope":2349,"src":"6710:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6710:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"_token","nameLocation":"6744:6:10","nodeType":"VariableDeclaration","scope":2349,"src":"6736:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"6736:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"_amount","nameLocation":"6768:7:10","nodeType":"VariableDeclaration","scope":2349,"src":"6760:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"6760:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"6793:19:10","nodeType":"VariableDeclaration","scope":2349,"src":"6785:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"6785:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"_senderFee","nameLocation":"6830:10:10","nodeType":"VariableDeclaration","scope":2349,"src":"6822:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"6822:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"6858:18:10","nodeType":"VariableDeclaration","scope":2349,"src":"6850:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"6850:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"_recipient","nameLocation":"6894:10:10","nodeType":"VariableDeclaration","scope":2349,"src":"6886:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"6886:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"_rate","nameLocation":"6921:5:10","nodeType":"VariableDeclaration","scope":2349,"src":"6914:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2187,"name":"uint96","nodeType":"ElementaryTypeName","src":"6914:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"_messageHash","nameLocation":"6952:12:10","nodeType":"VariableDeclaration","scope":2349,"src":"6936:28:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2189,"name":"string","nodeType":"ElementaryTypeName","src":"6936:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6700:270:10"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"7004:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2194,"name":"bool","nodeType":"ElementaryTypeName","src":"7004:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7003:6:10"},"scope":2396,"src":"6674:1561:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2752],"body":{"id":2362,"nodeType":"Block","src":"8545:30:10","statements":[{"expression":{"baseExpression":{"id":2358,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"8556:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$2667_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":2360,"indexExpression":{"id":2359,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"8562:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8556:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage","typeString":"struct IGateway.Order storage ref"}},"functionReturnParameters":2357,"id":2361,"nodeType":"Return","src":"8549:22:10"}]},"documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"8426:40:10","text":"@dev See {getOrderInfo-IGateway}. "},"functionSelector":"768c6ec0","id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderInfo","nameLocation":"8477:12:10","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"_orderId","nameLocation":"8498:8:10","nodeType":"VariableDeclaration","scope":2363,"src":"8490:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8490:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8489:18:10"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"8531:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_memory_ptr","typeString":"struct IGateway.Order"},"typeName":{"id":2355,"nodeType":"UserDefinedTypeName","pathNode":{"id":2354,"name":"Order","nameLocations":["8531:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"8531:5:10"},"referencedDeclaration":2667,"src":"8531:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage_ptr","typeString":"struct IGateway.Order"}},"visibility":"internal"}],"src":"8530:14:10"},"scope":2396,"src":"8468:107:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2743],"body":{"id":2381,"nodeType":"Block","src":"8695:71:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2371,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"8703:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2373,"indexExpression":{"id":2372,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"8721:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8703:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8703:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2378,"nodeType":"IfStatement","src":"8699:47:10","trueBody":{"expression":{"hexValue":"74727565","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8742:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2370,"id":2377,"nodeType":"Return","src":"8735:11:10"}},{"expression":{"hexValue":"66616c7365","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8757:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2370,"id":2380,"nodeType":"Return","src":"8750:12:10"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"8578:44:10","text":"@dev See {isTokenSupported-IGateway}. "},"functionSelector":"75151b63","id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"isTokenSupported","nameLocation":"8633:16:10","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"_token","nameLocation":"8658:6:10","nodeType":"VariableDeclaration","scope":2382,"src":"8650:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"8650:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:16:10"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2382,"src":"8689:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"8689:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8688:6:10"},"scope":2396,"src":"8624:142:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2760],"body":{"id":2394,"nodeType":"Block","src":"8877:44:10","statements":[{"expression":{"components":[{"id":2390,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"8889:18:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2391,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"8909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8888:29:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint64_$_t_uint256_$","typeString":"tuple(uint64,uint256)"}},"functionReturnParameters":2389,"id":2393,"nodeType":"Return","src":"8881:36:10"}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"8769:41:10","text":"@dev See {getFeeDetails-IGateway}. "},"functionSelector":"b810c636","id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeDetails","nameLocation":"8821:13:10","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[],"src":"8834:2:10"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"8860:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2385,"name":"uint64","nodeType":"ElementaryTypeName","src":"8860:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"8868:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8859:17:10"},"scope":2396,"src":"8812:109:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2397,"src":"390:8533:10","usedErrors":[]}],"src":"39:8885:10"},"id":10},"contracts/GatewaySettingManager.sol":{"ast":{"absolutePath":"contracts/GatewaySettingManager.sol","exportedSymbols":{"ContextUpgradeable":[917],"GatewaySettingManager":[2580],"Initializable":[408],"Ownable2StepUpgradeable":[106],"OwnableUpgradeable":[239]},"id":2581,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2398,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"168:24:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","id":2399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2581,"sourceUnit":107,"src":"194:80:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2400,"name":"Ownable2StepUpgradeable","nameLocations":["310:23:11"],"nodeType":"IdentifierPath","referencedDeclaration":106,"src":"310:23:11"},"id":2401,"nodeType":"InheritanceSpecifier","src":"310:23:11"}],"canonicalName":"GatewaySettingManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2580,"linearizedBaseContracts":[2580,106,239,917,408],"name":"GatewaySettingManager","nameLocation":"285:21:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2403,"mutability":"mutable","name":"MAX_BPS","nameLocation":"354:7:11","nodeType":"VariableDeclaration","scope":2580,"src":"337:24:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"337:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"protocolFeePercent","nameLocation":"380:18:11","nodeType":"VariableDeclaration","scope":2580,"src":"364:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2404,"name":"uint64","nodeType":"ElementaryTypeName","src":"364:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"treasuryAddress","nameLocation":"418:15:11","nodeType":"VariableDeclaration","scope":2580,"src":"401:32:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"401:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"_aggregatorAddress","nameLocation":"453:18:11","nodeType":"VariableDeclaration","scope":2580,"src":"436:35:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"_isTokenSupported","nameLocation":"511:17:11","nodeType":"VariableDeclaration","scope":2580,"src":"474:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2412,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"474:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"__gap","nameLocation":"658:5:11","nodeType":"VariableDeclaration","scope":2580,"src":"638:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2416,"length":{"hexValue":"3530","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"646:2:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"638:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"anonymous":false,"eventSelector":"cfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c","id":2425,"name":"SettingManagerBool","nameLocation":"674:18:11","nodeType":"EventDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"indexed":true,"mutability":"mutable","name":"what","nameLocation":"709:4:11","nodeType":"VariableDeclaration","scope":2425,"src":"693:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"693:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2421,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"731:5:11","nodeType":"VariableDeclaration","scope":2425,"src":"715:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2423,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"746:6:11","nodeType":"VariableDeclaration","scope":2425,"src":"738:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"692:61:11"},"src":"668:86:11"},{"anonymous":false,"eventSelector":"1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b","id":2429,"name":"ProtocolFeeUpdated","nameLocation":"762:18:11","nodeType":"EventDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"indexed":false,"mutability":"mutable","name":"protocolFee","nameLocation":"788:11:11","nodeType":"VariableDeclaration","scope":2429,"src":"781:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2426,"name":"uint64","nodeType":"ElementaryTypeName","src":"781:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"780:20:11"},"src":"756:45:11"},{"anonymous":false,"eventSelector":"bbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a4","id":2435,"name":"ProtocolAddressUpdated","nameLocation":"809:22:11","nodeType":"EventDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"indexed":true,"mutability":"mutable","name":"what","nameLocation":"848:4:11","nodeType":"VariableDeclaration","scope":2435,"src":"832:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"832:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2433,"indexed":true,"mutability":"mutable","name":"treasuryAddress","nameLocation":"870:15:11","nodeType":"VariableDeclaration","scope":2435,"src":"854:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"831:55:11"},"src":"803:84:11"},{"anonymous":false,"eventSelector":"2e979f80fe4d43055c584cf4a8467c55875ea36728fc37176c05acd784eb7a73","id":2439,"name":"SetFeeRecipient","nameLocation":"895:15:11","nodeType":"EventDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"indexed":true,"mutability":"mutable","name":"treasuryAddress","nameLocation":"927:15:11","nodeType":"VariableDeclaration","scope":2439,"src":"911:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"911:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"910:33:11"},"src":"889:55:11"},{"body":{"id":2489,"nodeType":"Block","src":"1518:243:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"1530:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1547:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1539:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2453,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:11","typeDescriptions":{}}},"id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1539:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1530:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207a65726f2061646472657373","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1551:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""},"value":"Gateway: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""}],"id":2451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1522:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1522:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2460,"nodeType":"ExpressionStatement","src":"1522:53:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"1587:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1597:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1587:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"1602:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1612:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1602:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1587:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a20696e76616c696420737461747573","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1615:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","typeString":"literal_string \"Gateway: invalid status\""},"value":"Gateway: invalid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","typeString":"literal_string \"Gateway: invalid status\""}],"id":2461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1579:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1579:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2471,"nodeType":"ExpressionStatement","src":"1579:62:11"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"1649:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"746f6b656e","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1657:7:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d","typeString":"literal_string \"token\""},"value":"token"},"src":"1649:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2488,"nodeType":"IfStatement","src":"1645:113:11","trueBody":{"id":2487,"nodeType":"Block","src":"1666:92:11","statements":[{"expression":{"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2475,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"1671:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2477,"indexExpression":{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"1689:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1671:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2478,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"1698:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1671:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2480,"nodeType":"ExpressionStatement","src":"1671:33:11"},{"eventCall":{"arguments":[{"id":2482,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"1733:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"1739:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2484,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"1746:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2481,"name":"SettingManagerBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"1714:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1714:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2486,"nodeType":"EmitStatement","src":"1709:44:11"}]}}]},"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"1141:283:11","text":" @dev Sets the boolean value for a specific setting.\n @param what The setting to be updated.\n @param value The address or value associated with the setting.\n @param status The boolean value to be set.\n Requirements:\n - The value must not be a zero address."},"functionSelector":"cd992400","id":2490,"implemented":true,"kind":"function","modifiers":[{"id":2449,"kind":"modifierInvocation","modifierName":{"id":2448,"name":"onlyOwner","nameLocations":["1508:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1508:9:11"},"nodeType":"ModifierInvocation","src":"1508:9:11"}],"name":"settingManagerBool","nameLocation":"1435:18:11","nodeType":"FunctionDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"what","nameLocation":"1462:4:11","nodeType":"VariableDeclaration","scope":2490,"src":"1454:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"value","nameLocation":"1476:5:11","nodeType":"VariableDeclaration","scope":2490,"src":"1468:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"status","nameLocation":"1491:6:11","nodeType":"VariableDeclaration","scope":2490,"src":"1483:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:45:11"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[],"src":"1518:0:11"},"scope":2580,"src":"1426:335:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2506,"nodeType":"Block","src":"1968:96:11","statements":[{"expression":{"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2498,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"1972:18:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2499,"name":"_protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1993:19:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1972:40:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2501,"nodeType":"ExpressionStatement","src":"1972:40:11"},{"eventCall":{"arguments":[{"id":2503,"name":"_protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"2040:19:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2502,"name":"ProtocolFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"2021:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2505,"nodeType":"EmitStatement","src":"2016:44:11"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"1764:128:11","text":" @dev Updates the protocol fee percentage.\n @param _protocolFeePercent The new protocol fee percentage to be set."},"functionSelector":"47094e2e","id":2507,"implemented":true,"kind":"function","modifiers":[{"id":2496,"kind":"modifierInvocation","modifierName":{"id":2495,"name":"onlyOwner","nameLocations":["1958:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1958:9:11"},"nodeType":"ModifierInvocation","src":"1958:9:11"}],"name":"updateProtocolFee","nameLocation":"1903:17:11","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"_protocolFeePercent","nameLocation":"1928:19:11","nodeType":"VariableDeclaration","scope":2507,"src":"1921:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2492,"name":"uint64","nodeType":"ElementaryTypeName","src":"1921:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1920:28:11"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[],"src":"1968:0:11"},"scope":2580,"src":"1894:170:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2578,"nodeType":"Block","src":"2372:472:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2384:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2401:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2393:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:11","typeDescriptions":{}}},"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2384:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207a65726f2061646472657373","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2405:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""},"value":"Gateway: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""}],"id":2517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2376:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2526,"nodeType":"ExpressionStatement","src":"2376:53:11"},{"assignments":[2528],"declarations":[{"constant":false,"id":2528,"mutability":"mutable","name":"updated","nameLocation":"2438:7:11","nodeType":"VariableDeclaration","scope":2578,"src":"2433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"2433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2529,"nodeType":"VariableDeclarationStatement","src":"2433:12:11"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2453:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"7472656173757279","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2461:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbd818ad4dd6f1ff9338c2bb62480241424dd9a65f9f3284101a01cd099ad8ac","typeString":"literal_string \"treasury\""},"value":"treasury"},"src":"2453:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2614:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"61676772656761746f72","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2622:12:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e124d7cc79a19705865fa21b784ba187cd393559e960c0c071132cb60354d1a3","typeString":"literal_string \"aggregator\""},"value":"aggregator"},"src":"2614:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2568,"nodeType":"IfStatement","src":"2610:165:11","trueBody":{"id":2567,"nodeType":"Block","src":"2636:139:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2649:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2671:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2649:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c726561647920736574","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2678:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","typeString":"literal_string \"Gateway: aggregator address already set\""},"value":"Gateway: aggregator address already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","typeString":"literal_string \"Gateway: aggregator address already set\""}],"id":2552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2641:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"ExpressionStatement","src":"2641:79:11"},{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2559,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2725:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2746:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2725:26:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2562,"nodeType":"ExpressionStatement","src":"2725:26:11"},{"expression":{"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2563,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2756:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2766:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2756:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2566,"nodeType":"ExpressionStatement","src":"2756:14:11"}]}},"id":2569,"nodeType":"IfStatement","src":"2449:326:11","trueBody":{"id":2548,"nodeType":"Block","src":"2473:131:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"2486:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2505:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2486:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207472656173757279206164647265737320616c726561647920736574","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2512:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","typeString":"literal_string \"Gateway: treasury address already set\""},"value":"Gateway: treasury address already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","typeString":"literal_string \"Gateway: treasury address already set\""}],"id":2533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2478:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2478:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2539,"nodeType":"ExpressionStatement","src":"2478:74:11"},{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2540,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"2557:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2575:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2557:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2543,"nodeType":"ExpressionStatement","src":"2557:23:11"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2544,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2585:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2595:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2585:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2547,"nodeType":"ExpressionStatement","src":"2585:14:11"}]}},{"condition":{"id":2570,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2782:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2577,"nodeType":"IfStatement","src":"2778:63:11","trueBody":{"id":2576,"nodeType":"Block","src":"2791:50:11","statements":[{"eventCall":{"arguments":[{"id":2572,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2824:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2830:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2571,"name":"ProtocolAddressUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"2801:22:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2801:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2575,"nodeType":"EmitStatement","src":"2796:40:11"}]}}]},"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"2067:224:11","text":" @dev Updates a protocol address.\n @param what The address type to be updated (treasury or aggregator).\n @param value The new address to be set.\n Requirements:\n - The value must not be a zero address."},"functionSelector":"40ebc677","id":2579,"implemented":true,"kind":"function","modifiers":[{"id":2515,"kind":"modifierInvocation","modifierName":{"id":2514,"name":"onlyOwner","nameLocations":["2362:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2362:9:11"},"nodeType":"ModifierInvocation","src":"2362:9:11"}],"name":"updateProtocolAddress","nameLocation":"2302:21:11","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"what","nameLocation":"2332:4:11","nodeType":"VariableDeclaration","scope":2579,"src":"2324:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"value","nameLocation":"2346:5:11","nodeType":"VariableDeclaration","scope":2579,"src":"2338:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:29:11"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[],"src":"2372:0:11"},"scope":2580,"src":"2293:551:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2581,"src":"276:2570:11","usedErrors":[]}],"src":"168:2679:11"},"id":11},"contracts/interfaces/IGateway.sol":{"ast":{"absolutePath":"contracts/interfaces/IGateway.sol","exportedSymbols":{"IERC20":[1582],"IGateway":[2761]},"id":2762,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2582,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"39:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2762,"sourceUnit":1583,"src":"65:70:12","symbolAliases":[{"foreign":{"id":2583,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"73:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IGateway","contractDependencies":[],"contractKind":"interface","documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"137:73:12","text":" @title IGateway\n @notice Interface for the Gateway contract."},"fullyImplemented":false,"id":2761,"linearizedBaseContracts":[2761],"name":"IGateway","nameLocation":"221:8:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"423:359:12","text":" @dev Emitted when a deposit is made.\n @param sender The address of the sender.\n @param token The address of the deposited token.\n @param amount The amount of the deposit.\n @param orderId The ID of the order.\n @param rate The rate at which the deposit is made.\n @param messageHash The hash of the message."},"eventSelector":"40ccd1ceb111a3c186ef9911e1b876dc1f789ed331b86097b3b8851055b6a137","id":2602,"name":"OrderCreated","nameLocation":"793:12:12","nodeType":"EventDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"831:6:12","nodeType":"VariableDeclaration","scope":2602,"src":"815:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2590,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"863:5:12","nodeType":"VariableDeclaration","scope":2602,"src":"847:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"847:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2592,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"894:6:12","nodeType":"VariableDeclaration","scope":2602,"src":"878:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2594,"indexed":false,"mutability":"mutable","name":"protocolFee","nameLocation":"918:11:12","nodeType":"VariableDeclaration","scope":2602,"src":"910:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"910:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2596,"indexed":false,"mutability":"mutable","name":"orderId","nameLocation":"947:7:12","nodeType":"VariableDeclaration","scope":2602,"src":"939:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"939:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2598,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"972:4:12","nodeType":"VariableDeclaration","scope":2602,"src":"964:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2600,"indexed":false,"mutability":"mutable","name":"messageHash","nameLocation":"993:11:12","nodeType":"VariableDeclaration","scope":2602,"src":"986:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2599,"name":"string","nodeType":"ElementaryTypeName","src":"986:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"805:205:12"},"src":"787:224:12"},{"anonymous":false,"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"1017:321:12","text":" @dev Emitted when an aggregator settles a transaction.\n @param splitOrderId The ID of the split order.\n @param orderId The ID of the order.\n @param liquidityProvider The address of the liquidity provider.\n @param settlePercent The percentage at which the transaction is settled."},"eventSelector":"98ece21e01a01cbe1d1c0dad3b053c8fbd368f99be78be958fcf1d1d13fd249a","id":2613,"name":"OrderSettled","nameLocation":"1349:12:12","nodeType":"EventDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"indexed":false,"mutability":"mutable","name":"splitOrderId","nameLocation":"1379:12:12","nodeType":"VariableDeclaration","scope":2613,"src":"1371:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1371:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2607,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"1417:7:12","nodeType":"VariableDeclaration","scope":2613,"src":"1401:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1401:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2609,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"1450:17:12","nodeType":"VariableDeclaration","scope":2613,"src":"1434:33:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"1434:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2611,"indexed":false,"mutability":"mutable","name":"settlePercent","nameLocation":"1484:13:12","nodeType":"VariableDeclaration","scope":2613,"src":"1477:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2610,"name":"uint96","nodeType":"ElementaryTypeName","src":"1477:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1361:142:12"},"src":"1343:161:12"},{"anonymous":false,"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"1510:175:12","text":" @dev Emitted when an aggregator refunds a transaction.\n @param fee The fee deducted from the refund amount.\n @param orderId The ID of the order."},"eventSelector":"0736fe428e1747ca8d387c2e6fa1a31a0cde62d3a167c40a46ade59a3cdc828e","id":2620,"name":"OrderRefunded","nameLocation":"1696:13:12","nodeType":"EventDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1718:3:12","nodeType":"VariableDeclaration","scope":2620,"src":"1710:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1710:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2618,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"1739:7:12","nodeType":"VariableDeclaration","scope":2620,"src":"1723:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1723:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1709:38:12"},"src":"1690:58:12"},{"anonymous":false,"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"1754:78:12","text":" @dev Emitted when an onramp order is successfully processed"},"eventSelector":"8658aa8a4a6ef641d1fd3b5bb33205d173a5404ab1f7cd1a81d2828f94b8bf02","id":2639,"name":"ProcessSettlement","nameLocation":"1843:17:12","nodeType":"EventDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"1886:7:12","nodeType":"VariableDeclaration","scope":2639,"src":"1870:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1870:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2625,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"1919:6:12","nodeType":"VariableDeclaration","scope":2639,"src":"1903:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1951:9:12","nodeType":"VariableDeclaration","scope":2639,"src":"1935:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"1935:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2629,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1978:5:12","nodeType":"VariableDeclaration","scope":2639,"src":"1970:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2631,"indexed":false,"mutability":"mutable","name":"senderFee","nameLocation":"2001:9:12","nodeType":"VariableDeclaration","scope":2639,"src":"1993:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"1993:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2633,"indexed":false,"mutability":"mutable","name":"liquidityProvider","nameLocation":"2022:17:12","nodeType":"VariableDeclaration","scope":2639,"src":"2014:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2635,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2050:4:12","nodeType":"VariableDeclaration","scope":2639,"src":"2043:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2634,"name":"uint96","nodeType":"ElementaryTypeName","src":"2043:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2637,"indexed":false,"mutability":"mutable","name":"messageHash","nameLocation":"2065:11:12","nodeType":"VariableDeclaration","scope":2639,"src":"2058:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"2058:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1860:222:12"},"src":"1837:246:12"},{"anonymous":false,"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"2089:173:12","text":" @dev Emitted when the sender's fee is transferred.\n @param sender The address of the sender.\n @param amount The amount of the fee transferred."},"eventSelector":"44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c2501","id":2646,"name":"SenderFeeTransferred","nameLocation":"2273:20:12","nodeType":"EventDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2310:6:12","nodeType":"VariableDeclaration","scope":2646,"src":"2294:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"2294:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2644,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"2334:6:12","nodeType":"VariableDeclaration","scope":2646,"src":"2318:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"2318:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2293:48:12"},"src":"2267:75:12"},{"canonicalName":"IGateway.Order","id":2667,"members":[{"constant":false,"id":2648,"mutability":"mutable","name":"sender","nameLocation":"3200:6:12","nodeType":"VariableDeclaration","scope":2667,"src":"3192:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"token","nameLocation":"3224:5:12","nodeType":"VariableDeclaration","scope":2667,"src":"3216:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"3216:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"senderFeeRecipient","nameLocation":"3247:18:12","nodeType":"VariableDeclaration","scope":2667,"src":"3239:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"3239:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"senderFee","nameLocation":"3283:9:12","nodeType":"VariableDeclaration","scope":2667,"src":"3275:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"protocolFee","nameLocation":"3310:11:12","nodeType":"VariableDeclaration","scope":2667,"src":"3302:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2658,"mutability":"mutable","name":"isFulfilled","nameLocation":"3336:11:12","nodeType":"VariableDeclaration","scope":2667,"src":"3331:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2657,"name":"bool","nodeType":"ElementaryTypeName","src":"3331:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"isRefunded","nameLocation":"3362:10:12","nodeType":"VariableDeclaration","scope":2667,"src":"3357:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2659,"name":"bool","nodeType":"ElementaryTypeName","src":"3357:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"refundAddress","nameLocation":"3390:13:12","nodeType":"VariableDeclaration","scope":2667,"src":"3382:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2661,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"currentBPS","nameLocation":"3420:10:12","nodeType":"VariableDeclaration","scope":2667,"src":"3413:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2663,"name":"uint96","nodeType":"ElementaryTypeName","src":"3413:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"amount","nameLocation":"3448:6:12","nodeType":"VariableDeclaration","scope":2667,"src":"3440:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Order","nameLocation":"3176:5:12","nodeType":"StructDefinition","scope":2761,"src":"3169:292:12","visibility":"public"},{"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"3662:1009:12","text":" @notice Locks the sender's amount of token into Gateway.\n @dev Requirements:\n - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\n - `_token` must be an acceptable token. See {isTokenSupported}.\n - `amount` must be greater than minimum.\n - `_refundAddress` refund address must not be zero address.\n @param _token The address of the token.\n @param _amount The amount in the decimal of `_token` to be locked.\n @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\n @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\n @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\n @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\n @param messageHash The hash of the message.\n @return _orderId The ID of the order."},"functionSelector":"809804f7","id":2687,"implemented":false,"kind":"function","modifiers":[],"name":"createOrder","nameLocation":"4685:11:12","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"_token","nameLocation":"4714:6:12","nodeType":"VariableDeclaration","scope":2687,"src":"4706:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"4706:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"_amount","nameLocation":"4738:7:12","nodeType":"VariableDeclaration","scope":2687,"src":"4730:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"_rate","nameLocation":"4762:5:12","nodeType":"VariableDeclaration","scope":2687,"src":"4755:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2673,"name":"uint96","nodeType":"ElementaryTypeName","src":"4755:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"4785:19:12","nodeType":"VariableDeclaration","scope":2687,"src":"4777:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"4777:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"_senderFee","nameLocation":"4822:10:12","nodeType":"VariableDeclaration","scope":2687,"src":"4814:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"4814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"_refundAddress","nameLocation":"4850:14:12","nodeType":"VariableDeclaration","scope":2687,"src":"4842:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"messageHash","nameLocation":"4890:11:12","nodeType":"VariableDeclaration","scope":2687,"src":"4874:27:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2681,"name":"string","nodeType":"ElementaryTypeName","src":"4874:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4696:211:12"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"_orderId","nameLocation":"4934:8:12","nodeType":"VariableDeclaration","scope":2687,"src":"4926:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4926:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4925:18:12"},"scope":2761,"src":"4676:268:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"4950:387:12","text":" @notice Settles a transaction and distributes rewards accordingly.\n @param _splitOrderId The ID of the split order.\n @param _orderId The ID of the transaction.\n @param _liquidityProvider The address of the liquidity provider.\n @param _settlePercent The rate at which the transaction is settled.\n @return bool the settlement is successful."},"functionSelector":"f22ee704","id":2701,"implemented":false,"kind":"function","modifiers":[],"name":"settle","nameLocation":"5351:6:12","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"_splitOrderId","nameLocation":"5375:13:12","nodeType":"VariableDeclaration","scope":2701,"src":"5367:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5367:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"_orderId","nameLocation":"5406:8:12","nodeType":"VariableDeclaration","scope":2701,"src":"5398:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5398:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"5432:18:12","nodeType":"VariableDeclaration","scope":2701,"src":"5424:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"5424:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"_settlePercent","nameLocation":"5467:14:12","nodeType":"VariableDeclaration","scope":2701,"src":"5460:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2695,"name":"uint64","nodeType":"ElementaryTypeName","src":"5460:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5357:130:12"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2701,"src":"5506:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2698,"name":"bool","nodeType":"ElementaryTypeName","src":"5506:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5505:6:12"},"scope":2761,"src":"5342:170:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2702,"nodeType":"StructuredDocumentation","src":"5518:320:12","text":" @notice Refunds to the specified refundable address.\n @dev Requirements:\n - Only aggregators can call this function.\n @param _fee The amount to be deducted from the amount to be refunded.\n @param _orderId The ID of the transaction.\n @return bool the refund is successful."},"functionSelector":"71eedb88","id":2711,"implemented":false,"kind":"function","modifiers":[],"name":"refund","nameLocation":"5852:6:12","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"_fee","nameLocation":"5867:4:12","nodeType":"VariableDeclaration","scope":2711,"src":"5859:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"5859:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"_orderId","nameLocation":"5881:8:12","nodeType":"VariableDeclaration","scope":2711,"src":"5873:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5873:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5858:32:12"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2711,"src":"5909:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2708,"name":"bool","nodeType":"ElementaryTypeName","src":"5909:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5908:6:12"},"scope":2761,"src":"5843:72:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"5921:942:12","text":" @notice Process an onramp order for cryptocurrency purchase\n @dev This function is restricted to be called only by an authorized aggregator\n @dev It processes an onramp orders and transfers tokens to the user\n @param _orderId Unique identifier for the order being processed\n @param _token Address of the token to be sent to the user\n @param _amount Amount of tokens to be sent to the user\n @param _senderFeeRecipient Address that will receive the sender fee\n @param _senderFee Amount of fee to be paid to the sender fee recipient\n @param _liquidityProvider Address of the liquidity provider\n @param _recipient Address of the recipient who will receive the tokens\n @param _rate Rate at which the tokens are being sent\n @param _messageHash Hash of the message associated with the order\n @return success Boolean indicating if the operation was successful"},"functionSelector":"3d3f14f4","id":2735,"implemented":false,"kind":"function","modifiers":[],"name":"processSettlement","nameLocation":"6877:17:12","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"_orderId","nameLocation":"6912:8:12","nodeType":"VariableDeclaration","scope":2735,"src":"6904:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"_token","nameLocation":"6938:6:12","nodeType":"VariableDeclaration","scope":2735,"src":"6930:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"_amount","nameLocation":"6962:7:12","nodeType":"VariableDeclaration","scope":2735,"src":"6954:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"6987:19:12","nodeType":"VariableDeclaration","scope":2735,"src":"6979:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"6979:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2722,"mutability":"mutable","name":"_senderFee","nameLocation":"7024:10:12","nodeType":"VariableDeclaration","scope":2735,"src":"7016:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"7016:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"7052:18:12","nodeType":"VariableDeclaration","scope":2735,"src":"7044:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"7044:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"_recipient","nameLocation":"7088:10:12","nodeType":"VariableDeclaration","scope":2735,"src":"7080:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"7080:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"_rate","nameLocation":"7115:5:12","nodeType":"VariableDeclaration","scope":2735,"src":"7108:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2727,"name":"uint96","nodeType":"ElementaryTypeName","src":"7108:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"_messageHash","nameLocation":"7146:12:12","nodeType":"VariableDeclaration","scope":2735,"src":"7130:28:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2729,"name":"string","nodeType":"ElementaryTypeName","src":"7130:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6894:270:12"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2735,"src":"7183:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2732,"name":"bool","nodeType":"ElementaryTypeName","src":"7183:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7182:6:12"},"scope":2761,"src":"6868:321:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"7195:169:12","text":" @notice Checks if a token is supported by Gateway.\n @param _token The address of the token to check.\n @return bool the token is supported."},"functionSelector":"75151b63","id":2743,"implemented":false,"kind":"function","modifiers":[],"name":"isTokenSupported","nameLocation":"7378:16:12","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"_token","nameLocation":"7403:6:12","nodeType":"VariableDeclaration","scope":2743,"src":"7395:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"7395:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7394:16:12"},"returnParameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2743,"src":"7434:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2740,"name":"bool","nodeType":"ElementaryTypeName","src":"7434:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7433:6:12"},"scope":2761,"src":"7369:71:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"7446:140:12","text":" @notice Gets the details of an order.\n @param _orderId The ID of the order.\n @return Order The order details."},"functionSelector":"768c6ec0","id":2752,"implemented":false,"kind":"function","modifiers":[],"name":"getOrderInfo","nameLocation":"7600:12:12","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"_orderId","nameLocation":"7630:8:12","nodeType":"VariableDeclaration","scope":2752,"src":"7622:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7622:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7612:32:12"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2752,"src":"7668:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_memory_ptr","typeString":"struct IGateway.Order"},"typeName":{"id":2749,"nodeType":"UserDefinedTypeName","pathNode":{"id":2748,"name":"Order","nameLocations":["7668:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"7668:5:12"},"referencedDeclaration":2667,"src":"7668:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$2667_storage_ptr","typeString":"struct IGateway.Order"}},"visibility":"internal"}],"src":"7667:14:12"},"scope":2761,"src":"7591:91:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"7688:166:12","text":" @notice Gets the fee details of Gateway.\n @return protocolReward The protocol reward amount.\n @return max_bps The maximum basis points."},"functionSelector":"b810c636","id":2760,"implemented":false,"kind":"function","modifiers":[],"name":"getFeeDetails","nameLocation":"7868:13:12","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[],"src":"7881:2:12"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"protocolReward","nameLocation":"7938:14:12","nodeType":"VariableDeclaration","scope":2760,"src":"7931:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2755,"name":"uint64","nodeType":"ElementaryTypeName","src":"7931:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2758,"mutability":"mutable","name":"max_bps","nameLocation":"7962:7:12","nodeType":"VariableDeclaration","scope":2760,"src":"7954:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"7954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7930:40:12"},"scope":2761,"src":"7859:112:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2762,"src":"211:7762:12","usedErrors":[]}],"src":"39:7935:12"},"id":12},"contracts/mocks/MockUSDC.sol":{"ast":{"absolutePath":"contracts/mocks/MockUSDC.sol","exportedSymbols":{"ERC20":[1504],"MockUSDT":[2831]},"id":2832,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2763,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"38:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2765,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2832,"sourceUnit":1505,"src":"64:68:13","symbolAliases":[{"foreign":{"id":2764,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"72:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2767,"name":"ERC20","nameLocations":["183:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1504,"src":"183:5:13"},"id":2768,"nodeType":"InheritanceSpecifier","src":"183:5:13"}],"canonicalName":"MockUSDT","contractDependencies":[],"contractKind":"contract","documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"134:28:13","text":"@dev Mock mintable USDC"},"fullyImplemented":true,"id":2831,"linearizedBaseContracts":[2831,1504,1607,1582,1637],"name":"MockUSDT","nameLocation":"171:8:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2781,"nodeType":"Block","src":"236:48:13","statements":[{"expression":{"arguments":[{"expression":{"id":2776,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"252:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"256:6:13","memberName":"sender","nodeType":"MemberAccess","src":"252:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"315f3030305f303030453138","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"264:12:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1_000_000E18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}],"id":2775,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"246:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"246:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2780,"nodeType":"ExpressionStatement","src":"246:31:13"}]},"id":2782,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d6f636b55445343","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"215:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_94e1f9c6f37f68c7fbe9a402bd5dbcd03f36019e7e48bd72249c8c505bfa86d6","typeString":"literal_string \"MockUDSC\""},"value":"MockUDSC"},{"hexValue":"4d55534443","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"227:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b881b1a06d818eb813952573bf9829bb21a81b032d939e3244337841a6fff45","typeString":"literal_string \"MUSDC\""},"value":"MUSDC"}],"id":2773,"kind":"baseConstructorSpecifier","modifierName":{"id":2770,"name":"ERC20","nameLocations":["209:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1504,"src":"209:5:13"},"nodeType":"ModifierInvocation","src":"209:26:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[],"src":"206:2:13"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[],"src":"236:0:13"},"scope":2831,"src":"195:89:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2793,"nodeType":"Block","src":"330:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"346:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"350:6:13","memberName":"sender","nodeType":"MemberAccess","src":"346:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2790,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"358:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2787,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"340:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"340:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2792,"nodeType":"ExpressionStatement","src":"340:26:13"}]},"functionSelector":"a0712d68","id":2794,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"299:4:13","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"_amount","nameLocation":"312:7:13","nodeType":"VariableDeclaration","scope":2794,"src":"304:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"304:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"303:17:13"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[],"src":"330:0:13"},"scope":2831,"src":"290:83:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2805,"nodeType":"Block","src":"419:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2800,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"435:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"439:6:13","memberName":"sender","nodeType":"MemberAccess","src":"435:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2802,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"447:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2799,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"429:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"429:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"ExpressionStatement","src":"429:26:13"}]},"functionSelector":"42966c68","id":2806,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"388:4:13","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"_amount","nameLocation":"401:7:13","nodeType":"VariableDeclaration","scope":2806,"src":"393:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"393:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:17:13"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[],"src":"419:0:13"},"scope":2831,"src":"379:83:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2829,"nodeType":"Block","src":"496:160:13","statements":[{"assignments":[2810],"declarations":[{"constant":false,"id":2810,"mutability":"mutable","name":"_balanceOf","nameLocation":"514:10:13","nodeType":"VariableDeclaration","scope":2829,"src":"506:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2815,"initialValue":{"arguments":[{"expression":{"id":2812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"537:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"541:6:13","memberName":"sender","nodeType":"MemberAccess","src":"537:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2811,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"527:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"527:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"506:42:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"566:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"579:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"566:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6f636b555344543a204e6f7468696e6720746f206275726e","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"582:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09","typeString":"literal_string \"MockUSDT: Nothing to burn\""},"value":"MockUSDT: Nothing to burn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09","typeString":"literal_string \"MockUSDT: Nothing to burn\""}],"id":2816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"558:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"558:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"ExpressionStatement","src":"558:52:13"},{"expression":{"arguments":[{"expression":{"id":2824,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"626:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"630:6:13","memberName":"sender","nodeType":"MemberAccess","src":"626:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2826,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"638:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2823,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"620:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"620:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2828,"nodeType":"ExpressionStatement","src":"620:29:13"}]},"functionSelector":"9975038c","id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"burnAll","nameLocation":"477:7:13","nodeType":"FunctionDefinition","parameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"484:2:13"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[],"src":"496:0:13"},"scope":2831,"src":"468:188:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2832,"src":"162:496:13","usedErrors":[]}],"src":"38:621:13"},"id":13}},"contracts":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"Ownable2StepUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":\"Ownable2StepUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":430,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":535,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df70283ff728a1a88debad8b56cd6b31b858a143aff601e8f42a16699317e70d64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH17 0x283FF728A1A88DEBAD8B56CD6B31B858A1 NUMBER 0xAF 0xF6 ADD 0xE8 DELEGATECALL 0x2A AND PUSH10 0x9317E70D64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df70283ff728a1a88debad8b56cd6b31b858a143aff601e8f42a16699317e70d64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH17 0x283FF728A1A88DEBAD8B56CD6B31B858A1 NUMBER 0xAF 0xF6 ADD 0xE8 DELEGATECALL 0x2A AND PUSH10 0x9317E70D64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_962":{"entryPoint":null,"id":962,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"423:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:14"},"nodeType":"YulFunctionCall","src":"433:12:14"},"nodeType":"YulExpressionStatement","src":"433:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:14"},{"body":{"nodeType":"YulBlock","src":"546:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:14"},"nodeType":"YulFunctionCall","src":"556:12:14"},"nodeType":"YulExpressionStatement","src":"556:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:14"},{"body":{"nodeType":"YulBlock","src":"628:54:14","statements":[{"nodeType":"YulAssignment","src":"638:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:14"},"nodeType":"YulFunctionCall","src":"652:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:14"},"nodeType":"YulFunctionCall","src":"668:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:14"},"nodeType":"YulFunctionCall","src":"648:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:14","type":""}],"src":"580:102:14"},{"body":{"nodeType":"YulBlock","src":"716:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:14"},"nodeType":"YulFunctionCall","src":"726:88:14"},"nodeType":"YulExpressionStatement","src":"726:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:14"},"nodeType":"YulFunctionCall","src":"823:15:14"},"nodeType":"YulExpressionStatement","src":"823:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:14"},"nodeType":"YulFunctionCall","src":"847:15:14"},"nodeType":"YulExpressionStatement","src":"847:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:14"},{"body":{"nodeType":"YulBlock","src":"917:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:14"},"nodeType":"YulFunctionCall","src":"957:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:14"},"nodeType":"YulFunctionCall","src":"945:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:14"},"nodeType":"YulFunctionCall","src":"1098:18:14"},"nodeType":"YulExpressionStatement","src":"1098:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:14"},"nodeType":"YulFunctionCall","src":"1036:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:14"},"nodeType":"YulFunctionCall","src":"1072:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:14"},"nodeType":"YulFunctionCall","src":"1033:62:14"},"nodeType":"YulIf","src":"1030:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:14"},"nodeType":"YulFunctionCall","src":"1127:22:14"},"nodeType":"YulExpressionStatement","src":"1127:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:14","type":""}],"src":"874:281:14"},{"body":{"nodeType":"YulBlock","src":"1202:88:14","statements":[{"nodeType":"YulAssignment","src":"1212:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:14"},"nodeType":"YulFunctionCall","src":"1222:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:14"},"nodeType":"YulFunctionCall","src":"1251:33:14"},"nodeType":"YulExpressionStatement","src":"1251:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:14","type":""}],"src":"1161:129:14"},{"body":{"nodeType":"YulBlock","src":"1363:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:14"},"nodeType":"YulFunctionCall","src":"1470:18:14"},"nodeType":"YulExpressionStatement","src":"1470:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:14"},"nodeType":"YulFunctionCall","src":"1437:30:14"},"nodeType":"YulIf","src":"1434:56:14"},{"nodeType":"YulAssignment","src":"1500:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:14"},"nodeType":"YulFunctionCall","src":"1508:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:14"}]},{"nodeType":"YulAssignment","src":"1574:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:14"},"nodeType":"YulFunctionCall","src":"1582:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:14"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:14","type":""}],"src":"1296:308:14"},{"body":{"nodeType":"YulBlock","src":"1672:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:14"},"nodeType":"YulFunctionCall","src":"1772:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:14"},"nodeType":"YulFunctionCall","src":"1791:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:14"},"nodeType":"YulFunctionCall","src":"1785:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:14"},"nodeType":"YulFunctionCall","src":"1765:39:14"},"nodeType":"YulExpressionStatement","src":"1765:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:14"},"nodeType":"YulFunctionCall","src":"1709:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:14","statements":[{"nodeType":"YulAssignment","src":"1725:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:14"},"nodeType":"YulFunctionCall","src":"1730:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:14","statements":[]},"src":"1701:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:14"},"nodeType":"YulFunctionCall","src":"1830:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:14"},"nodeType":"YulFunctionCall","src":"1823:27:14"},"nodeType":"YulExpressionStatement","src":"1823:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:14","type":""}],"src":"1610:246:14"},{"body":{"nodeType":"YulBlock","src":"1957:339:14","statements":[{"nodeType":"YulAssignment","src":"1967:75:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:14"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:14"},"nodeType":"YulFunctionCall","src":"1992:49:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:14"},"nodeType":"YulFunctionCall","src":"1976:66:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:14"},"nodeType":"YulFunctionCall","src":"2051:21:14"},"nodeType":"YulExpressionStatement","src":"2051:21:14"},{"nodeType":"YulVariableDeclaration","src":"2081:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:14"},"nodeType":"YulFunctionCall","src":"2092:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:14"},"nodeType":"YulFunctionCall","src":"2148:79:14"},"nodeType":"YulExpressionStatement","src":"2148:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:14"},"nodeType":"YulFunctionCall","src":"2123:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:14"},"nodeType":"YulFunctionCall","src":"2120:25:14"},"nodeType":"YulIf","src":"2117:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:14"},"nodeType":"YulFunctionCall","src":"2238:52:14"},"nodeType":"YulExpressionStatement","src":"2238:52:14"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:14","type":""}],"src":"1862:434:14"},{"body":{"nodeType":"YulBlock","src":"2389:282:14","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:14"},"nodeType":"YulFunctionCall","src":"2440:79:14"},"nodeType":"YulExpressionStatement","src":"2440:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:14"},"nodeType":"YulFunctionCall","src":"2413:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:14"},"nodeType":"YulFunctionCall","src":"2409:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:14"},"nodeType":"YulFunctionCall","src":"2402:35:14"},"nodeType":"YulIf","src":"2399:122:14"},{"nodeType":"YulVariableDeclaration","src":"2530:27:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:14"},"nodeType":"YulFunctionCall","src":"2544:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:14"},"nodeType":"YulFunctionCall","src":"2634:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:14"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:14"},"nodeType":"YulFunctionCall","src":"2575:90:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:14"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:14","type":""}],"src":"2316:355:14"},{"body":{"nodeType":"YulBlock","src":"2791:739:14","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:14"},"nodeType":"YulFunctionCall","src":"2839:79:14"},"nodeType":"YulExpressionStatement","src":"2839:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:14"},"nodeType":"YulFunctionCall","src":"2808:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:14"},"nodeType":"YulFunctionCall","src":"2804:32:14"},"nodeType":"YulIf","src":"2801:119:14"},{"nodeType":"YulBlock","src":"2930:291:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:14"},"nodeType":"YulFunctionCall","src":"2965:17:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:14"},"nodeType":"YulFunctionCall","src":"2959:24:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:14"},"nodeType":"YulFunctionCall","src":"3032:79:14"},"nodeType":"YulExpressionStatement","src":"3032:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:14"},"nodeType":"YulFunctionCall","src":"2999:30:14"},"nodeType":"YulIf","src":"2996:117:14"},{"nodeType":"YulAssignment","src":"3127:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:14"},"nodeType":"YulFunctionCall","src":"3179:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:14"},"nodeType":"YulFunctionCall","src":"3137:74:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:14"}]}]},{"nodeType":"YulBlock","src":"3231:292:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:14"},"nodeType":"YulFunctionCall","src":"3266:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:14"},"nodeType":"YulFunctionCall","src":"3260:25:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:14"},"nodeType":"YulFunctionCall","src":"3334:79:14"},"nodeType":"YulExpressionStatement","src":"3334:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:14"},"nodeType":"YulFunctionCall","src":"3301:30:14"},"nodeType":"YulIf","src":"3298:117:14"},{"nodeType":"YulAssignment","src":"3429:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:14"},"nodeType":"YulFunctionCall","src":"3481:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:14"},"nodeType":"YulFunctionCall","src":"3439:74:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:14"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:14","type":""}],"src":"2677:853:14"},{"body":{"nodeType":"YulBlock","src":"3595:40:14","statements":[{"nodeType":"YulAssignment","src":"3606:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:14"},"nodeType":"YulFunctionCall","src":"3616:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:14","type":""}],"src":"3536:99:14"},{"body":{"nodeType":"YulBlock","src":"3669:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:14"},"nodeType":"YulFunctionCall","src":"3679:88:14"},"nodeType":"YulExpressionStatement","src":"3679:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:14"},"nodeType":"YulFunctionCall","src":"3776:15:14"},"nodeType":"YulExpressionStatement","src":"3776:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:14"},"nodeType":"YulFunctionCall","src":"3800:15:14"},"nodeType":"YulExpressionStatement","src":"3800:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:14"},{"body":{"nodeType":"YulBlock","src":"3878:269:14","statements":[{"nodeType":"YulAssignment","src":"3888:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:14"},"nodeType":"YulFunctionCall","src":"3898:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:14"},"nodeType":"YulFunctionCall","src":"3945:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:14","statements":[{"nodeType":"YulAssignment","src":"4010:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:14"},"nodeType":"YulFunctionCall","src":"4020:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:14"},"nodeType":"YulFunctionCall","src":"3969:26:14"},"nodeType":"YulIf","src":"3966:81:14"},{"body":{"nodeType":"YulBlock","src":"4099:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:14"},"nodeType":"YulFunctionCall","src":"4113:18:14"},"nodeType":"YulExpressionStatement","src":"4113:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:14"},"nodeType":"YulFunctionCall","src":"4083:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:14"},"nodeType":"YulFunctionCall","src":"4060:38:14"},"nodeType":"YulIf","src":"4057:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:14","type":""}],"src":"3827:320:14"},{"body":{"nodeType":"YulBlock","src":"4207:87:14","statements":[{"nodeType":"YulAssignment","src":"4217:11:14","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:14"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:14"},"nodeType":"YulFunctionCall","src":"4238:14:14"},"nodeType":"YulExpressionStatement","src":"4238:14:14"},{"nodeType":"YulAssignment","src":"4261:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:14"},"nodeType":"YulFunctionCall","src":"4269:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:14"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:14","type":""}],"src":"4153:141:14"},{"body":{"nodeType":"YulBlock","src":"4344:49:14","statements":[{"nodeType":"YulAssignment","src":"4354:33:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:14"},"nodeType":"YulFunctionCall","src":"4368:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:14","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:14"},"nodeType":"YulFunctionCall","src":"4364:23:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:14"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:14","type":""}],"src":"4300:93:14"},{"body":{"nodeType":"YulBlock","src":"4452:54:14","statements":[{"nodeType":"YulAssignment","src":"4462:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:14"},"nodeType":"YulFunctionCall","src":"4483:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:14"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:14","type":""}],"src":"4399:107:14"},{"body":{"nodeType":"YulBlock","src":"4588:317:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:14","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:14","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:14"},"nodeType":"YulFunctionCall","src":"4615:18:14"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:14"},"nodeType":"YulFunctionCall","src":"4654:97:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:14","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:14"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:14"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:14"},"nodeType":"YulFunctionCall","src":"4772:39:14"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:14"}]},{"nodeType":"YulAssignment","src":"4820:30:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:14"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:14"},"nodeType":"YulFunctionCall","src":"4840:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:14"},"nodeType":"YulFunctionCall","src":"4829:21:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:14"}]},{"nodeType":"YulAssignment","src":"4859:40:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:14"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:14"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:14"},"nodeType":"YulFunctionCall","src":"4879:19:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:14"},"nodeType":"YulFunctionCall","src":"4869:30:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:14"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:14","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:14","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:14","type":""}],"src":"4512:393:14"},{"body":{"nodeType":"YulBlock","src":"4956:32:14","statements":[{"nodeType":"YulAssignment","src":"4966:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:14","type":""}],"src":"4911:77:14"},{"body":{"nodeType":"YulBlock","src":"5026:28:14","statements":[{"nodeType":"YulAssignment","src":"5036:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:14"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:14","type":""}],"src":"4994:60:14"},{"body":{"nodeType":"YulBlock","src":"5120:82:14","statements":[{"nodeType":"YulAssignment","src":"5130:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:14"},"nodeType":"YulFunctionCall","src":"5170:24:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:14"},"nodeType":"YulFunctionCall","src":"5161:34:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:14"},"nodeType":"YulFunctionCall","src":"5143:53:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:14"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:14","type":""}],"src":"5060:142:14"},{"body":{"nodeType":"YulBlock","src":"5255:28:14","statements":[{"nodeType":"YulAssignment","src":"5265:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:14"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:14","type":""}],"src":"5208:75:14"},{"body":{"nodeType":"YulBlock","src":"5365:193:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:14","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:14"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:14"},"nodeType":"YulFunctionCall","src":"5399:39:14"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:14"},"nodeType":"YulFunctionCall","src":"5488:11:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:14"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:14"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:14"},"nodeType":"YulFunctionCall","src":"5509:41:14"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:14"},"nodeType":"YulFunctionCall","src":"5460:91:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:14"},"nodeType":"YulFunctionCall","src":"5447:105:14"},"nodeType":"YulExpressionStatement","src":"5447:105:14"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:14","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:14","type":""}],"src":"5289:269:14"},{"body":{"nodeType":"YulBlock","src":"5613:24:14","statements":[{"nodeType":"YulAssignment","src":"5623:8:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:14","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:14"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:14","type":""}],"src":"5564:73:14"},{"body":{"nodeType":"YulBlock","src":"5696:136:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:14","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:14"},"nodeType":"YulFunctionCall","src":"5720:32:14"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:14"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:14"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:14"},"nodeType":"YulFunctionCall","src":"5761:65:14"},"nodeType":"YulExpressionStatement","src":"5761:65:14"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:14","type":""}],"src":"5643:189:14"},{"body":{"nodeType":"YulBlock","src":"5888:136:14","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:14","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:14"},"nodeType":"YulFunctionCall","src":"5969:39:14"},"nodeType":"YulExpressionStatement","src":"5969:39:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:14"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:14"},"nodeType":"YulFunctionCall","src":"5905:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:14","statements":[{"nodeType":"YulAssignment","src":"5922:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:14"},"nodeType":"YulFunctionCall","src":"5931:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:14","statements":[]},"src":"5898:120:14"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:14","type":""}],"src":"5838:186:14"},{"body":{"nodeType":"YulBlock","src":"6109:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:14"},"nodeType":"YulFunctionCall","src":"6165:38:14"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:14","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:14"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:14"},"nodeType":"YulFunctionCall","src":"6249:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:14"},"nodeType":"YulFunctionCall","src":"6235:44:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:14","statements":[{"nodeType":"YulAssignment","src":"6438:23:14","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:14"},"nodeType":"YulFunctionCall","src":"6417:18:14"},"nodeType":"YulIf","src":"6414:49:14"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:14"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:14"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:14"},"nodeType":"YulFunctionCall","src":"6532:22:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:14"},"nodeType":"YulFunctionCall","src":"6518:37:14"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:14"},"nodeType":"YulFunctionCall","src":"6476:80:14"},"nodeType":"YulExpressionStatement","src":"6476:80:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:14"},"nodeType":"YulFunctionCall","src":"6123:11:14"},"nodeType":"YulIf","src":"6120:446:14"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:14","type":""}],"src":"6030:543:14"},{"body":{"nodeType":"YulBlock","src":"6642:54:14","statements":[{"nodeType":"YulAssignment","src":"6652:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:14"},"nodeType":"YulFunctionCall","src":"6673:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:14"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:14","type":""}],"src":"6579:117:14"},{"body":{"nodeType":"YulBlock","src":"6753:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:14","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:14"},"nodeType":"YulFunctionCall","src":"6808:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:14"},"nodeType":"YulFunctionCall","src":"6823:6:14"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:14"},"nodeType":"YulFunctionCall","src":"6779:51:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:14"},"nodeType":"YulFunctionCall","src":"6775:56:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:14","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:14"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:14"},"nodeType":"YulFunctionCall","src":"6850:15:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:14"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:14","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:14","type":""}],"src":"6702:169:14"},{"body":{"nodeType":"YulBlock","src":"6957:214:14","statements":[{"nodeType":"YulAssignment","src":"7090:37:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:14"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:14"},"nodeType":"YulFunctionCall","src":"7098:29:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:14"}]},{"nodeType":"YulAssignment","src":"7136:29:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:14","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:14"},"nodeType":"YulFunctionCall","src":"7153:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:14"},"nodeType":"YulFunctionCall","src":"7144:21:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:14","type":""}],"src":"6876:295:14"},{"body":{"nodeType":"YulBlock","src":"7268:1303:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:14"},"nodeType":"YulFunctionCall","src":"7293:37:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:14"},"nodeType":"YulFunctionCall","src":"7417:18:14"},"nodeType":"YulExpressionStatement","src":"7417:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:14"},"nodeType":"YulFunctionCall","src":"7384:30:14"},"nodeType":"YulIf","src":"7381:56:14"},{"nodeType":"YulVariableDeclaration","src":"7447:52:14","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:14"},"nodeType":"YulFunctionCall","src":"7487:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:14"},"nodeType":"YulFunctionCall","src":"7461:38:14"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:14"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:14"},"nodeType":"YulFunctionCall","src":"7546:67:14"},"nodeType":"YulExpressionStatement","src":"7546:67:14"},{"nodeType":"YulVariableDeclaration","src":"7623:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:14","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:14","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:14"},"nodeType":"YulFunctionCall","src":"7756:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:14"},"nodeType":"YulFunctionCall","src":"7744:22:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:14"},"nodeType":"YulFunctionCall","src":"7794:37:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:14"},"nodeType":"YulFunctionCall","src":"7951:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:14"},"nodeType":"YulFunctionCall","src":"7945:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:14"},"nodeType":"YulFunctionCall","src":"7930:42:14"},"nodeType":"YulExpressionStatement","src":"7930:42:14"},{"nodeType":"YulAssignment","src":"7989:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:14"},"nodeType":"YulFunctionCall","src":"7999:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:14"}]},{"nodeType":"YulAssignment","src":"8030:31:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:14"},"nodeType":"YulFunctionCall","src":"8043:18:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:14"},"nodeType":"YulFunctionCall","src":"7875:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:14","statements":[{"nodeType":"YulAssignment","src":"7892:17:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:14"},"nodeType":"YulFunctionCall","src":"7897:12:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:14","statements":[]},"src":"7867:208:14"},{"body":{"nodeType":"YulBlock","src":"8111:156:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:14"},"nodeType":"YulFunctionCall","src":"8152:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:14"},"nodeType":"YulFunctionCall","src":"8146:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:14"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:14","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:14"},"nodeType":"YulFunctionCall","src":"8234:17:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:14"},"nodeType":"YulFunctionCall","src":"8204:48:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:14"},"nodeType":"YulFunctionCall","src":"8189:64:14"},"nodeType":"YulExpressionStatement","src":"8189:64:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:14"},"nodeType":"YulFunctionCall","src":"8091:19:14"},"nodeType":"YulIf","src":"8088:179:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:14"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:14","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:14"},"nodeType":"YulFunctionCall","src":"8297:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:14"},"nodeType":"YulFunctionCall","src":"8293:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:14"},"nodeType":"YulFunctionCall","src":"8280:36:14"},"nodeType":"YulExpressionStatement","src":"8280:36:14"}]},"nodeType":"YulCase","src":"7708:618:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:14","statements":[{"nodeType":"YulAssignment","src":"8412:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:14"},"nodeType":"YulFunctionCall","src":"8427:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:14"},"nodeType":"YulFunctionCall","src":"8421:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:14"},"nodeType":"YulIf","src":"8384:77:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:14"},"nodeType":"YulFunctionCall","src":"8487:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:14"},"nodeType":"YulFunctionCall","src":"8474:81:14"},"nodeType":"YulExpressionStatement","src":"8474:81:14"}]},"nodeType":"YulCase","src":"8335:230:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:14"},"nodeType":"YulFunctionCall","src":"7685:14:14"},"nodeType":"YulSwitch","src":"7678:887:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:14","type":""}],"src":"7176:1395:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea26469706673582212203f964721ffb5f8e7386b9365859b9194e4ad9856f3c840f128334936a424267d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SWAP7 SELFBALANCE 0x21 SELFDESTRUCT 0xB5 0xF8 0xE7 CODESIZE PUSH12 0x9365859B9194E4AD9856F3C8 BLOCKHASH CALL 0x28 CALLER 0x49 CALLDATASIZE LOG4 0x24 0x26 PUSH30 0x64736F6C6343000812003300000000000000000000000000000000000000 ","sourceMap":"1532:11312:6:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:14;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1503":{"entryPoint":2679,"id":1503,"parameterSlots":3,"returnSlots":0},"@_approve_1438":{"entryPoint":1447,"id":1438,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1492":{"entryPoint":2674,"id":1492,"parameterSlots":3,"returnSlots":0},"@_msgSender_1619":{"entryPoint":1439,"id":1619,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1481":{"entryPoint":1904,"id":1481,"parameterSlots":3,"returnSlots":0},"@_transfer_1264":{"entryPoint":2044,"id":1264,"parameterSlots":3,"returnSlots":0},"@allowance_1059":{"entryPoint":1304,"id":1059,"parameterSlots":2,"returnSlots":1},"@approve_1084":{"entryPoint":776,"id":1084,"parameterSlots":2,"returnSlots":1},"@balanceOf_1016":{"entryPoint":932,"id":1016,"parameterSlots":1,"returnSlots":1},"@decimals_992":{"entryPoint":868,"id":992,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1187":{"entryPoint":1150,"id":1187,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1146":{"entryPoint":877,"id":1146,"parameterSlots":2,"returnSlots":1},"@name_972":{"entryPoint":630,"id":972,"parameterSlots":0,"returnSlots":1},"@symbol_982":{"entryPoint":1004,"id":982,"parameterSlots":0,"returnSlots":1},"@totalSupply_1002":{"entryPoint":811,"id":1002,"parameterSlots":0,"returnSlots":1},"@transferFrom_1117":{"entryPoint":821,"id":1117,"parameterSlots":3,"returnSlots":1},"@transfer_1041":{"entryPoint":1269,"id":1041,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:14","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:14","statements":[{"nodeType":"YulAssignment","src":"77:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:14"},"nodeType":"YulFunctionCall","src":"87:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:14","type":""}],"src":"7:99:14"},{"body":{"nodeType":"YulBlock","src":"208:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:14"},"nodeType":"YulFunctionCall","src":"218:19:14"},"nodeType":"YulExpressionStatement","src":"218:19:14"},{"nodeType":"YulAssignment","src":"246:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:14"},"nodeType":"YulFunctionCall","src":"261:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:14","type":""}],"src":"112:169:14"},{"body":{"nodeType":"YulBlock","src":"349:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:14"},"nodeType":"YulFunctionCall","src":"449:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:14"},"nodeType":"YulFunctionCall","src":"468:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:14"},"nodeType":"YulFunctionCall","src":"462:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:14"},"nodeType":"YulFunctionCall","src":"442:39:14"},"nodeType":"YulExpressionStatement","src":"442:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:14"},"nodeType":"YulFunctionCall","src":"386:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:14","statements":[{"nodeType":"YulAssignment","src":"402:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:14"},"nodeType":"YulFunctionCall","src":"407:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:14","statements":[]},"src":"378:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:14"},"nodeType":"YulFunctionCall","src":"507:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:14"},"nodeType":"YulFunctionCall","src":"500:27:14"},"nodeType":"YulExpressionStatement","src":"500:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:14","type":""}],"src":"287:246:14"},{"body":{"nodeType":"YulBlock","src":"587:54:14","statements":[{"nodeType":"YulAssignment","src":"597:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:14"},"nodeType":"YulFunctionCall","src":"611:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:14"},"nodeType":"YulFunctionCall","src":"627:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:14"},"nodeType":"YulFunctionCall","src":"607:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:14","type":""}],"src":"539:102:14"},{"body":{"nodeType":"YulBlock","src":"739:285:14","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:14"},"nodeType":"YulFunctionCall","src":"763:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:14","type":""}]},{"nodeType":"YulAssignment","src":"811:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:14"},"nodeType":"YulFunctionCall","src":"818:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:14"},"nodeType":"YulFunctionCall","src":"933:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:14"},"nodeType":"YulFunctionCall","src":"898:65:14"},"nodeType":"YulExpressionStatement","src":"898:65:14"},{"nodeType":"YulAssignment","src":"972:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:14"},"nodeType":"YulFunctionCall","src":"988:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:14"},"nodeType":"YulFunctionCall","src":"979:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:14","type":""}],"src":"647:377:14"},{"body":{"nodeType":"YulBlock","src":"1148:195:14","statements":[{"nodeType":"YulAssignment","src":"1158:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:14"},"nodeType":"YulFunctionCall","src":"1166:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:14"},"nodeType":"YulFunctionCall","src":"1201:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:14"},"nodeType":"YulFunctionCall","src":"1220:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:14"},"nodeType":"YulFunctionCall","src":"1194:47:14"},"nodeType":"YulExpressionStatement","src":"1194:47:14"},{"nodeType":"YulAssignment","src":"1250:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:14"},"nodeType":"YulFunctionCall","src":"1258:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:14","type":""}],"src":"1030:313:14"},{"body":{"nodeType":"YulBlock","src":"1389:35:14","statements":[{"nodeType":"YulAssignment","src":"1399:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:14"},"nodeType":"YulFunctionCall","src":"1409:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:14","type":""}],"src":"1349:75:14"},{"body":{"nodeType":"YulBlock","src":"1519:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:14"},"nodeType":"YulFunctionCall","src":"1529:12:14"},"nodeType":"YulExpressionStatement","src":"1529:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:14"},{"body":{"nodeType":"YulBlock","src":"1642:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:14"},"nodeType":"YulFunctionCall","src":"1652:12:14"},"nodeType":"YulExpressionStatement","src":"1652:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:14"},{"body":{"nodeType":"YulBlock","src":"1721:81:14","statements":[{"nodeType":"YulAssignment","src":"1731:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:14"},"nodeType":"YulFunctionCall","src":"1742:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:14","type":""}],"src":"1676:126:14"},{"body":{"nodeType":"YulBlock","src":"1853:51:14","statements":[{"nodeType":"YulAssignment","src":"1863:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:14"},"nodeType":"YulFunctionCall","src":"1874:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:14","type":""}],"src":"1808:96:14"},{"body":{"nodeType":"YulBlock","src":"1953:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:14"},"nodeType":"YulFunctionCall","src":"2012:12:14"},"nodeType":"YulExpressionStatement","src":"2012:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:14"},"nodeType":"YulFunctionCall","src":"1983:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:14"},"nodeType":"YulFunctionCall","src":"1973:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:14"},"nodeType":"YulFunctionCall","src":"1966:43:14"},"nodeType":"YulIf","src":"1963:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:14","type":""}],"src":"1910:122:14"},{"body":{"nodeType":"YulBlock","src":"2090:87:14","statements":[{"nodeType":"YulAssignment","src":"2100:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:14"},"nodeType":"YulFunctionCall","src":"2109:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:14"},"nodeType":"YulFunctionCall","src":"2138:33:14"},"nodeType":"YulExpressionStatement","src":"2138:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:14","type":""}],"src":"2038:139:14"},{"body":{"nodeType":"YulBlock","src":"2228:32:14","statements":[{"nodeType":"YulAssignment","src":"2238:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:14","type":""}],"src":"2183:77:14"},{"body":{"nodeType":"YulBlock","src":"2309:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:14"},"nodeType":"YulFunctionCall","src":"2368:12:14"},"nodeType":"YulExpressionStatement","src":"2368:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:14"},"nodeType":"YulFunctionCall","src":"2339:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:14"},"nodeType":"YulFunctionCall","src":"2329:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:14"},"nodeType":"YulFunctionCall","src":"2322:43:14"},"nodeType":"YulIf","src":"2319:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:14","type":""}],"src":"2266:122:14"},{"body":{"nodeType":"YulBlock","src":"2446:87:14","statements":[{"nodeType":"YulAssignment","src":"2456:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:14"},"nodeType":"YulFunctionCall","src":"2465:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:14"},"nodeType":"YulFunctionCall","src":"2494:33:14"},"nodeType":"YulExpressionStatement","src":"2494:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:14","type":""}],"src":"2394:139:14"},{"body":{"nodeType":"YulBlock","src":"2622:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:14"},"nodeType":"YulFunctionCall","src":"2670:79:14"},"nodeType":"YulExpressionStatement","src":"2670:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:14"},"nodeType":"YulFunctionCall","src":"2639:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:14"},"nodeType":"YulFunctionCall","src":"2635:32:14"},"nodeType":"YulIf","src":"2632:119:14"},{"nodeType":"YulBlock","src":"2761:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:14"},"nodeType":"YulFunctionCall","src":"2836:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:14"},"nodeType":"YulFunctionCall","src":"2815:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:14"}]}]},{"nodeType":"YulBlock","src":"2888:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:14"},"nodeType":"YulFunctionCall","src":"2964:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:14"},"nodeType":"YulFunctionCall","src":"2943:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:14","type":""}],"src":"2539:474:14"},{"body":{"nodeType":"YulBlock","src":"3061:48:14","statements":[{"nodeType":"YulAssignment","src":"3071:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:14"},"nodeType":"YulFunctionCall","src":"3089:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:14"},"nodeType":"YulFunctionCall","src":"3082:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:14","type":""}],"src":"3019:90:14"},{"body":{"nodeType":"YulBlock","src":"3174:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:14"},"nodeType":"YulFunctionCall","src":"3196:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:14"},"nodeType":"YulFunctionCall","src":"3184:34:14"},"nodeType":"YulExpressionStatement","src":"3184:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:14","type":""}],"src":"3115:109:14"},{"body":{"nodeType":"YulBlock","src":"3322:118:14","statements":[{"nodeType":"YulAssignment","src":"3332:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:14"},"nodeType":"YulFunctionCall","src":"3340:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:14"},"nodeType":"YulFunctionCall","src":"3415:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:14"},"nodeType":"YulFunctionCall","src":"3368:65:14"},"nodeType":"YulExpressionStatement","src":"3368:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:14","type":""}],"src":"3230:210:14"},{"body":{"nodeType":"YulBlock","src":"3511:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:14"},"nodeType":"YulFunctionCall","src":"3533:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:14"},"nodeType":"YulFunctionCall","src":"3521:37:14"},"nodeType":"YulExpressionStatement","src":"3521:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:14","type":""}],"src":"3446:118:14"},{"body":{"nodeType":"YulBlock","src":"3668:124:14","statements":[{"nodeType":"YulAssignment","src":"3678:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:14"},"nodeType":"YulFunctionCall","src":"3686:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:14"},"nodeType":"YulFunctionCall","src":"3767:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:14"},"nodeType":"YulFunctionCall","src":"3714:71:14"},"nodeType":"YulExpressionStatement","src":"3714:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:14","type":""}],"src":"3570:222:14"},{"body":{"nodeType":"YulBlock","src":"3898:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:14"},"nodeType":"YulFunctionCall","src":"3946:79:14"},"nodeType":"YulExpressionStatement","src":"3946:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:14"},"nodeType":"YulFunctionCall","src":"3915:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:14"},"nodeType":"YulFunctionCall","src":"3911:32:14"},"nodeType":"YulIf","src":"3908:119:14"},{"nodeType":"YulBlock","src":"4037:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:14"},"nodeType":"YulFunctionCall","src":"4112:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:14"},"nodeType":"YulFunctionCall","src":"4091:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:14"}]}]},{"nodeType":"YulBlock","src":"4164:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:14"},"nodeType":"YulFunctionCall","src":"4240:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:14"},"nodeType":"YulFunctionCall","src":"4219:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:14"}]}]},{"nodeType":"YulBlock","src":"4292:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:14"},"nodeType":"YulFunctionCall","src":"4368:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:14"},"nodeType":"YulFunctionCall","src":"4347:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:14","type":""}],"src":"3798:619:14"},{"body":{"nodeType":"YulBlock","src":"4466:43:14","statements":[{"nodeType":"YulAssignment","src":"4476:27:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:14"},"nodeType":"YulFunctionCall","src":"4487:16:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:14"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:14","type":""}],"src":"4423:86:14"},{"body":{"nodeType":"YulBlock","src":"4576:51:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:14"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:14"},"nodeType":"YulFunctionCall","src":"4598:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:14"},"nodeType":"YulFunctionCall","src":"4586:35:14"},"nodeType":"YulExpressionStatement","src":"4586:35:14"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:14","type":""}],"src":"4515:112:14"},{"body":{"nodeType":"YulBlock","src":"4727:120:14","statements":[{"nodeType":"YulAssignment","src":"4737:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:14"},"nodeType":"YulFunctionCall","src":"4745:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:14"},"nodeType":"YulFunctionCall","src":"4822:17:14"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:14"},"nodeType":"YulFunctionCall","src":"4773:67:14"},"nodeType":"YulExpressionStatement","src":"4773:67:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:14","type":""}],"src":"4633:214:14"},{"body":{"nodeType":"YulBlock","src":"4919:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:14"},"nodeType":"YulFunctionCall","src":"4967:79:14"},"nodeType":"YulExpressionStatement","src":"4967:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:14"},"nodeType":"YulFunctionCall","src":"4936:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:14"},"nodeType":"YulFunctionCall","src":"4932:32:14"},"nodeType":"YulIf","src":"4929:119:14"},{"nodeType":"YulBlock","src":"5058:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:14"},"nodeType":"YulFunctionCall","src":"5133:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:14"},"nodeType":"YulFunctionCall","src":"5112:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:14","type":""}],"src":"4853:329:14"},{"body":{"nodeType":"YulBlock","src":"5271:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:14"},"nodeType":"YulFunctionCall","src":"5319:79:14"},"nodeType":"YulExpressionStatement","src":"5319:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:14"},"nodeType":"YulFunctionCall","src":"5288:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:14"},"nodeType":"YulFunctionCall","src":"5284:32:14"},"nodeType":"YulIf","src":"5281:119:14"},{"nodeType":"YulBlock","src":"5410:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:14"},"nodeType":"YulFunctionCall","src":"5485:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:14"},"nodeType":"YulFunctionCall","src":"5464:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:14"}]}]},{"nodeType":"YulBlock","src":"5537:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:14"},"nodeType":"YulFunctionCall","src":"5613:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:14"},"nodeType":"YulFunctionCall","src":"5592:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:14","type":""}],"src":"5188:474:14"},{"body":{"nodeType":"YulBlock","src":"5696:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:14"},"nodeType":"YulFunctionCall","src":"5706:88:14"},"nodeType":"YulExpressionStatement","src":"5706:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:14"},"nodeType":"YulFunctionCall","src":"5803:15:14"},"nodeType":"YulExpressionStatement","src":"5803:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:14"},"nodeType":"YulFunctionCall","src":"5827:15:14"},"nodeType":"YulExpressionStatement","src":"5827:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:14"},{"body":{"nodeType":"YulBlock","src":"5905:269:14","statements":[{"nodeType":"YulAssignment","src":"5915:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:14"},"nodeType":"YulFunctionCall","src":"5925:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:14"},"nodeType":"YulFunctionCall","src":"5972:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:14","statements":[{"nodeType":"YulAssignment","src":"6037:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:14"},"nodeType":"YulFunctionCall","src":"6047:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:14"},"nodeType":"YulFunctionCall","src":"5996:26:14"},"nodeType":"YulIf","src":"5993:81:14"},{"body":{"nodeType":"YulBlock","src":"6126:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:14"},"nodeType":"YulFunctionCall","src":"6140:18:14"},"nodeType":"YulExpressionStatement","src":"6140:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:14"},"nodeType":"YulFunctionCall","src":"6110:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:14"},"nodeType":"YulFunctionCall","src":"6087:38:14"},"nodeType":"YulIf","src":"6084:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:14","type":""}],"src":"5854:320:14"},{"body":{"nodeType":"YulBlock","src":"6208:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:14"},"nodeType":"YulFunctionCall","src":"6218:88:14"},"nodeType":"YulExpressionStatement","src":"6218:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:14"},"nodeType":"YulFunctionCall","src":"6315:15:14"},"nodeType":"YulExpressionStatement","src":"6315:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:14"},"nodeType":"YulFunctionCall","src":"6339:15:14"},"nodeType":"YulExpressionStatement","src":"6339:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:14"},{"body":{"nodeType":"YulBlock","src":"6410:147:14","statements":[{"nodeType":"YulAssignment","src":"6420:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:14"},"nodeType":"YulFunctionCall","src":"6425:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:14"}]},{"nodeType":"YulAssignment","src":"6454:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:14"},"nodeType":"YulFunctionCall","src":"6459:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:14"}]},{"nodeType":"YulAssignment","src":"6488:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:14"},"nodeType":"YulFunctionCall","src":"6495:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:14"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:14"},"nodeType":"YulFunctionCall","src":"6530:18:14"},"nodeType":"YulExpressionStatement","src":"6530:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:14"},"nodeType":"YulFunctionCall","src":"6517:10:14"},"nodeType":"YulIf","src":"6514:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:14","type":""}],"src":"6366:191:14"},{"body":{"nodeType":"YulBlock","src":"6669:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:14"},"nodeType":"YulFunctionCall","src":"6687:14:14"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:14","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:14"},"nodeType":"YulFunctionCall","src":"6680:58:14"},"nodeType":"YulExpressionStatement","src":"6680:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:14"},"nodeType":"YulFunctionCall","src":"6755:15:14"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:14","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:14"},"nodeType":"YulFunctionCall","src":"6748:32:14"},"nodeType":"YulExpressionStatement","src":"6748:32:14"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:14","type":""}],"src":"6563:224:14"},{"body":{"nodeType":"YulBlock","src":"6939:220:14","statements":[{"nodeType":"YulAssignment","src":"6949:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:14"},"nodeType":"YulFunctionCall","src":"6956:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:14"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:14"},"nodeType":"YulFunctionCall","src":"7032:93:14"},"nodeType":"YulExpressionStatement","src":"7032:93:14"},{"nodeType":"YulAssignment","src":"7134:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:14"},"nodeType":"YulFunctionCall","src":"7141:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:14"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:14","type":""}],"src":"6793:366:14"},{"body":{"nodeType":"YulBlock","src":"7336:248:14","statements":[{"nodeType":"YulAssignment","src":"7346:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:14"},"nodeType":"YulFunctionCall","src":"7354:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:14"},"nodeType":"YulFunctionCall","src":"7389:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:14"},"nodeType":"YulFunctionCall","src":"7408:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:14"},"nodeType":"YulFunctionCall","src":"7382:47:14"},"nodeType":"YulExpressionStatement","src":"7382:47:14"},{"nodeType":"YulAssignment","src":"7438:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:14"},"nodeType":"YulFunctionCall","src":"7446:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:14","type":""}],"src":"7165:419:14"},{"body":{"nodeType":"YulBlock","src":"7696:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:14"},"nodeType":"YulFunctionCall","src":"7714:14:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:14"},"nodeType":"YulFunctionCall","src":"7707:58:14"},"nodeType":"YulExpressionStatement","src":"7707:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:14"},"nodeType":"YulFunctionCall","src":"7782:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:14"},"nodeType":"YulFunctionCall","src":"7775:31:14"},"nodeType":"YulExpressionStatement","src":"7775:31:14"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:14","type":""}],"src":"7590:223:14"},{"body":{"nodeType":"YulBlock","src":"7965:220:14","statements":[{"nodeType":"YulAssignment","src":"7975:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:14"},"nodeType":"YulFunctionCall","src":"7982:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:14"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:14"},"nodeType":"YulFunctionCall","src":"8058:93:14"},"nodeType":"YulExpressionStatement","src":"8058:93:14"},{"nodeType":"YulAssignment","src":"8160:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:14"},"nodeType":"YulFunctionCall","src":"8167:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:14"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:14","type":""}],"src":"7819:366:14"},{"body":{"nodeType":"YulBlock","src":"8362:248:14","statements":[{"nodeType":"YulAssignment","src":"8372:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:14"},"nodeType":"YulFunctionCall","src":"8380:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:14"},"nodeType":"YulFunctionCall","src":"8415:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:14"},"nodeType":"YulFunctionCall","src":"8434:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:14"},"nodeType":"YulFunctionCall","src":"8408:47:14"},"nodeType":"YulExpressionStatement","src":"8408:47:14"},{"nodeType":"YulAssignment","src":"8464:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:14"},"nodeType":"YulFunctionCall","src":"8472:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:14","type":""}],"src":"8191:419:14"},{"body":{"nodeType":"YulBlock","src":"8722:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:14"},"nodeType":"YulFunctionCall","src":"8740:14:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:14"},"nodeType":"YulFunctionCall","src":"8733:58:14"},"nodeType":"YulExpressionStatement","src":"8733:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:14"},"nodeType":"YulFunctionCall","src":"8808:15:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:14"},"nodeType":"YulFunctionCall","src":"8801:29:14"},"nodeType":"YulExpressionStatement","src":"8801:29:14"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:14","type":""}],"src":"8616:221:14"},{"body":{"nodeType":"YulBlock","src":"8989:220:14","statements":[{"nodeType":"YulAssignment","src":"8999:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:14","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:14"},"nodeType":"YulFunctionCall","src":"9006:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:14"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:14"},"nodeType":"YulFunctionCall","src":"9082:93:14"},"nodeType":"YulExpressionStatement","src":"9082:93:14"},{"nodeType":"YulAssignment","src":"9184:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:14"},"nodeType":"YulFunctionCall","src":"9191:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:14"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:14","type":""}],"src":"8843:366:14"},{"body":{"nodeType":"YulBlock","src":"9386:248:14","statements":[{"nodeType":"YulAssignment","src":"9396:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:14"},"nodeType":"YulFunctionCall","src":"9404:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:14"},"nodeType":"YulFunctionCall","src":"9439:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:14"},"nodeType":"YulFunctionCall","src":"9458:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:14"},"nodeType":"YulFunctionCall","src":"9432:47:14"},"nodeType":"YulExpressionStatement","src":"9432:47:14"},{"nodeType":"YulAssignment","src":"9488:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:14"},"nodeType":"YulFunctionCall","src":"9496:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:14","type":""}],"src":"9215:419:14"},{"body":{"nodeType":"YulBlock","src":"9746:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:14"},"nodeType":"YulFunctionCall","src":"9764:14:14"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:14","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:14"},"nodeType":"YulFunctionCall","src":"9757:55:14"},"nodeType":"YulExpressionStatement","src":"9757:55:14"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:14","type":""}],"src":"9640:179:14"},{"body":{"nodeType":"YulBlock","src":"9971:220:14","statements":[{"nodeType":"YulAssignment","src":"9981:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:14","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:14"},"nodeType":"YulFunctionCall","src":"9988:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:14"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:14"},"nodeType":"YulFunctionCall","src":"10064:93:14"},"nodeType":"YulExpressionStatement","src":"10064:93:14"},{"nodeType":"YulAssignment","src":"10166:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:14"},"nodeType":"YulFunctionCall","src":"10173:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:14"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:14","type":""}],"src":"9825:366:14"},{"body":{"nodeType":"YulBlock","src":"10368:248:14","statements":[{"nodeType":"YulAssignment","src":"10378:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:14"},"nodeType":"YulFunctionCall","src":"10386:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:14"},"nodeType":"YulFunctionCall","src":"10421:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:14"},"nodeType":"YulFunctionCall","src":"10440:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:14"},"nodeType":"YulFunctionCall","src":"10414:47:14"},"nodeType":"YulExpressionStatement","src":"10414:47:14"},{"nodeType":"YulAssignment","src":"10470:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:14"},"nodeType":"YulFunctionCall","src":"10478:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:14","type":""}],"src":"10197:419:14"},{"body":{"nodeType":"YulBlock","src":"10728:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:14"},"nodeType":"YulFunctionCall","src":"10746:14:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:14"},"nodeType":"YulFunctionCall","src":"10739:58:14"},"nodeType":"YulExpressionStatement","src":"10739:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:14"},"nodeType":"YulFunctionCall","src":"10814:15:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:14"},"nodeType":"YulFunctionCall","src":"10807:32:14"},"nodeType":"YulExpressionStatement","src":"10807:32:14"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:14","type":""}],"src":"10622:224:14"},{"body":{"nodeType":"YulBlock","src":"10998:220:14","statements":[{"nodeType":"YulAssignment","src":"11008:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:14"},"nodeType":"YulFunctionCall","src":"11015:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:14"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:14"},"nodeType":"YulFunctionCall","src":"11091:93:14"},"nodeType":"YulExpressionStatement","src":"11091:93:14"},{"nodeType":"YulAssignment","src":"11193:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:14"},"nodeType":"YulFunctionCall","src":"11200:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:14"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:14","type":""}],"src":"10852:366:14"},{"body":{"nodeType":"YulBlock","src":"11395:248:14","statements":[{"nodeType":"YulAssignment","src":"11405:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:14"},"nodeType":"YulFunctionCall","src":"11413:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:14"},"nodeType":"YulFunctionCall","src":"11448:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:14"},"nodeType":"YulFunctionCall","src":"11467:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:14"},"nodeType":"YulFunctionCall","src":"11441:47:14"},"nodeType":"YulExpressionStatement","src":"11441:47:14"},{"nodeType":"YulAssignment","src":"11497:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:14"},"nodeType":"YulFunctionCall","src":"11505:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:14","type":""}],"src":"11224:419:14"},{"body":{"nodeType":"YulBlock","src":"11755:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:14"},"nodeType":"YulFunctionCall","src":"11773:14:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:14"},"nodeType":"YulFunctionCall","src":"11766:58:14"},"nodeType":"YulExpressionStatement","src":"11766:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:14"},"nodeType":"YulFunctionCall","src":"11841:15:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:14"},"nodeType":"YulFunctionCall","src":"11834:30:14"},"nodeType":"YulExpressionStatement","src":"11834:30:14"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:14","type":""}],"src":"11649:222:14"},{"body":{"nodeType":"YulBlock","src":"12023:220:14","statements":[{"nodeType":"YulAssignment","src":"12033:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:14","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:14"},"nodeType":"YulFunctionCall","src":"12040:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:14"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:14"},"nodeType":"YulFunctionCall","src":"12116:93:14"},"nodeType":"YulExpressionStatement","src":"12116:93:14"},{"nodeType":"YulAssignment","src":"12218:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:14"},"nodeType":"YulFunctionCall","src":"12225:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:14"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:14","type":""}],"src":"11877:366:14"},{"body":{"nodeType":"YulBlock","src":"12420:248:14","statements":[{"nodeType":"YulAssignment","src":"12430:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:14"},"nodeType":"YulFunctionCall","src":"12438:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:14"},"nodeType":"YulFunctionCall","src":"12473:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:14"},"nodeType":"YulFunctionCall","src":"12492:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:14"},"nodeType":"YulFunctionCall","src":"12466:47:14"},"nodeType":"YulExpressionStatement","src":"12466:47:14"},{"nodeType":"YulAssignment","src":"12522:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:14"},"nodeType":"YulFunctionCall","src":"12530:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:14","type":""}],"src":"12249:419:14"},{"body":{"nodeType":"YulBlock","src":"12780:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:14"},"nodeType":"YulFunctionCall","src":"12798:14:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:14","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:14"},"nodeType":"YulFunctionCall","src":"12791:58:14"},"nodeType":"YulExpressionStatement","src":"12791:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:14"},"nodeType":"YulFunctionCall","src":"12866:15:14"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:14","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:14"},"nodeType":"YulFunctionCall","src":"12859:33:14"},"nodeType":"YulExpressionStatement","src":"12859:33:14"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:14","type":""}],"src":"12674:225:14"},{"body":{"nodeType":"YulBlock","src":"13051:220:14","statements":[{"nodeType":"YulAssignment","src":"13061:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:14"},"nodeType":"YulFunctionCall","src":"13068:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:14"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:14"},"nodeType":"YulFunctionCall","src":"13144:93:14"},"nodeType":"YulExpressionStatement","src":"13144:93:14"},{"nodeType":"YulAssignment","src":"13246:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:14"},"nodeType":"YulFunctionCall","src":"13253:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:14"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:14","type":""}],"src":"12905:366:14"},{"body":{"nodeType":"YulBlock","src":"13448:248:14","statements":[{"nodeType":"YulAssignment","src":"13458:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:14"},"nodeType":"YulFunctionCall","src":"13466:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:14"},"nodeType":"YulFunctionCall","src":"13501:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:14"},"nodeType":"YulFunctionCall","src":"13520:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:14"},"nodeType":"YulFunctionCall","src":"13494:47:14"},"nodeType":"YulExpressionStatement","src":"13494:47:14"},{"nodeType":"YulAssignment","src":"13550:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:14"},"nodeType":"YulFunctionCall","src":"13558:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:14","type":""}],"src":"13277:419:14"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea26469706673582212203f964721ffb5f8e7386b9365859b9194e4ad9856f3c840f128334936a424267d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SWAP7 SELFBALANCE 0x21 SELFDESTRUCT 0xB5 0xF8 0xE7 CODESIZE PUSH12 0x9365859B9194E4AD9856F3C8 BLOCKHASH CALL 0x28 CALLER 0x49 CALLDATASIZE LOG4 0x24 0x26 PUSH30 0x64736F6C6343000812003300000000000000000000000000000000000000 ","sourceMap":"1532:11312:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;655:96:9:-;708:7;734:10;727:17;;655:96;:::o;10457:340:6:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":933,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":939,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":941,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":943,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":945,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Gateway.sol":{"Gateway":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFee","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"splitOrderId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"settlePercent","type":"uint96"}],"name":"OrderSettled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"senderFee","type":"address"},{"indexed":false,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"rate","type":"uint96"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"ProcessSettlement","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"ProtocolAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"protocolFee","type":"uint64"}],"name":"ProtocolFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SenderFeeTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"value","type":"address"},{"indexed":false,"internalType":"uint256","name":"status","type":"uint256"}],"name":"SettingManagerBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"_senderFee","type":"uint256"},{"internalType":"address","name":"_refundAddress","type":"address"},{"internalType":"string","name":"messageHash","type":"string"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFeeDetails","outputs":[{"internalType":"uint64","name":"","type":"uint64"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"getOrderInfo","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"senderFee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint96","name":"currentBPS","type":"uint96"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IGateway.Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isTokenSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"_senderFee","type":"uint256"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"string","name":"_messageHash","type":"string"}],"name":"processSettlement","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"refund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"},{"internalType":"uint256","name":"status","type":"uint256"}],"name":"settingManagerBool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_splitOrderId","type":"bytes32"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"uint64","name":"_settlePercent","type":"uint64"}],"name":"settle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"}],"name":"updateProtocolAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_protocolFeePercent","type":"uint64"}],"name":"updateProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"OrderCreated(address,address,uint256,uint256,bytes32,uint256,string)":{"details":"Emitted when a deposit is made.","params":{"amount":"The amount of the deposit.","messageHash":"The hash of the message.","orderId":"The ID of the order.","rate":"The rate at which the deposit is made.","sender":"The address of the sender.","token":"The address of the deposited token."}},"OrderRefunded(uint256,bytes32)":{"details":"Emitted when an aggregator refunds a transaction.","params":{"fee":"The fee deducted from the refund amount.","orderId":"The ID of the order."}},"OrderSettled(bytes32,bytes32,address,uint96)":{"details":"Emitted when an aggregator settles a transaction.","params":{"liquidityProvider":"The address of the liquidity provider.","orderId":"The ID of the order.","settlePercent":"The percentage at which the transaction is settled.","splitOrderId":"The ID of the split order."}},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"ProcessSettlement(bytes32,uint256,address,address,address,address,uint96,string)":{"details":"Emitted when an onramp order is successfully processed"},"SenderFeeTransferred(address,uint256)":{"details":"Emitted when the sender's fee is transferred.","params":{"amount":"The amount of the fee transferred.","sender":"The address of the sender."}},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"createOrder(address,uint256,uint96,address,uint256,address,string)":{"details":"See {createOrder-IGateway}. "},"getFeeDetails()":{"details":"See {getFeeDetails-IGateway}. "},"getOrderInfo(bytes32)":{"details":"See {getOrderInfo-IGateway}. "},"initialize()":{"details":"Initialize function."},"isTokenSupported(address)":{"details":"See {isTokenSupported-IGateway}. "},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"Pause the contract."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)":{"details":"See {processSettlement-IGateway}. "},"refund(uint256,bytes32)":{"details":"See {refund-IGateway}. "},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"settingManagerBool(bytes32,address,uint256)":{"details":"Sets the boolean value for a specific setting.","params":{"status":"The boolean value to be set. Requirements: - The value must not be a zero address.","value":"The address or value associated with the setting.","what":"The setting to be updated."}},"settle(bytes32,bytes32,address,uint64)":{"details":"See {settle-IGateway}. "},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"unpause()":{"details":"Unpause the contract."},"updateProtocolAddress(bytes32,address)":{"details":"Updates a protocol address.","params":{"value":"The new address to be set. Requirements: - The value must not be a zero address.","what":"The address type to be updated (treasury or aggregator)."}},"updateProtocolFee(uint64)":{"details":"Updates the protocol fee percentage.","params":{"_protocolFeePercent":"The new protocol fee percentage to be set."}}},"title":"Gateway","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1678":{"entryPoint":null,"id":1678,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_389":{"entryPoint":40,"id":389,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":437,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":255,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:14","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:14"},"nodeType":"YulFunctionCall","src":"113:19:14"},"nodeType":"YulExpressionStatement","src":"113:19:14"},{"nodeType":"YulAssignment","src":"141:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:14"},"nodeType":"YulFunctionCall","src":"156:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:14","type":""}],"src":"7:169:14"},{"body":{"nodeType":"YulBlock","src":"288:120:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:14"},"nodeType":"YulFunctionCall","src":"306:14:14"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"322:34:14","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:14"},"nodeType":"YulFunctionCall","src":"299:58:14"},"nodeType":"YulExpressionStatement","src":"299:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:14"},"nodeType":"YulFunctionCall","src":"374:15:14"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"391:9:14","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:14"},"nodeType":"YulFunctionCall","src":"367:34:14"},"nodeType":"YulExpressionStatement","src":"367:34:14"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:14","type":""}],"src":"182:226:14"},{"body":{"nodeType":"YulBlock","src":"560:220:14","statements":[{"nodeType":"YulAssignment","src":"570:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"636:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"641:2:14","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"577:58:14"},"nodeType":"YulFunctionCall","src":"577:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"570:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"742:3:14"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulIdentifier","src":"653:88:14"},"nodeType":"YulFunctionCall","src":"653:93:14"},"nodeType":"YulExpressionStatement","src":"653:93:14"},{"nodeType":"YulAssignment","src":"755:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"766:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:14"},"nodeType":"YulFunctionCall","src":"762:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"755:3:14"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"548:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"556:3:14","type":""}],"src":"414:366:14"},{"body":{"nodeType":"YulBlock","src":"957:248:14","statements":[{"nodeType":"YulAssignment","src":"967:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:14"},"nodeType":"YulFunctionCall","src":"975:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"967:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:14"},"nodeType":"YulFunctionCall","src":"1010:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1033:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1039:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:14"},"nodeType":"YulFunctionCall","src":"1029:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:14"},"nodeType":"YulFunctionCall","src":"1003:47:14"},"nodeType":"YulExpressionStatement","src":"1003:47:14"},{"nodeType":"YulAssignment","src":"1059:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1067:124:14"},"nodeType":"YulFunctionCall","src":"1067:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1059:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"937:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:14","type":""}],"src":"786:419:14"},{"body":{"nodeType":"YulBlock","src":"1254:43:14","statements":[{"nodeType":"YulAssignment","src":"1264:27:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:14"},"nodeType":"YulFunctionCall","src":"1275:16:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:14"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:14","type":""}],"src":"1211:86:14"},{"body":{"nodeType":"YulBlock","src":"1364:51:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1381:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:14"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1386:15:14"},"nodeType":"YulFunctionCall","src":"1386:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:14"},"nodeType":"YulFunctionCall","src":"1374:35:14"},"nodeType":"YulExpressionStatement","src":"1374:35:14"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1352:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1359:3:14","type":""}],"src":"1303:112:14"},{"body":{"nodeType":"YulBlock","src":"1515:120:14","statements":[{"nodeType":"YulAssignment","src":"1525:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1548:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:14"},"nodeType":"YulFunctionCall","src":"1533:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1525:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1625:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:14"},"nodeType":"YulFunctionCall","src":"1610:17:14"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1561:39:14"},"nodeType":"YulFunctionCall","src":"1561:67:14"},"nodeType":"YulExpressionStatement","src":"1561:67:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1487:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:14","type":""}],"src":"1421:214:14"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d2565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000175565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620000ec5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e39190620001b5565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015d602783620000ee565b91506200016a82620000ff565b604082019050919050565b6000602082019050818103600083015262000190816200014e565b9050919050565b600060ff82169050919050565b620001af8162000197565b82525050565b6000602082019050620001cc6000830184620001a4565b92915050565b61412580620001e26000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806379ba5097116100ad578063b810c63611610071578063b810c636146102bc578063cd992400146102db578063e30c3978146102f7578063f22ee70414610315578063f2fde38b1461034557610121565b806379ba509714610250578063809804f71461025a5780638129fc1c1461028a5780638456cb59146102945780638da5cb5b1461029e57610121565b80635c975abb116100f45780635c975abb14610198578063715018a6146101b657806371eedb88146101c057806375151b63146101f0578063768c6ec01461022057610121565b80633d3f14f4146101265780633f4ba83a1461015657806340ebc6771461016057806347094e2e1461017c575b600080fd5b610140600480360381019061013b9190612c87565b610361565b60405161014d9190612d8d565b60405180910390f35b61015e6109ba565b005b61017a60048036038101906101759190612da8565b6109cc565b005b61019660048036038101906101919190612e28565b610c94565b005b6101a0610cff565b6040516101ad9190612d8d565b60405180910390f35b6101be610d16565b005b6101da60048036038101906101d59190612e55565b610d2a565b6040516101e79190612d8d565b60405180910390f35b61020a60048036038101906102059190612e95565b6111a8565b6040516102179190612d8d565b60405180910390f35b61023a60048036038101906102359190612ec2565b611204565b6040516102479190612ff7565b60405180910390f35b61025861141c565b005b610274600480360381019061026f9190613013565b6114a9565b60405161028191906130e4565b60405180910390f35b6102926119a8565b005b61029c611af8565b005b6102a6611b0a565b6040516102b3919061310e565b60405180910390f35b6102c4611b34565b6040516102d2929190613147565b60405180910390f35b6102f560048036038101906102f09190613170565b611b59565b005b6102ff611cde565b60405161030c919061310e565b60405180910390f35b61032f600480360381019061032a91906131c3565b611d08565b60405161033c9190612d8d565b60405180910390f35b61035f600480360381019061035a9190612e95565b612375565b005b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea90613287565b60405180910390fd5b60ff60008c815260200190815260200160002060050160009054906101000a900460ff1615610457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044e906132f3565b60405180910390fd5b6000891161049a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104919061335f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610500906133cb565b60405180910390fd5b6000871461064457600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1603610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790613437565b60405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89896040518363ffffffff1660e01b81526004016105bb929190613457565b6020604051808303816000875af11580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe91906134ac565b50868873ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b6000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff168b6106759190613508565b61067f9190613579565b90506000818b61068f91906135aa565b9050600082111561073c578b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016106f7929190613457565b6020604051808303816000875af1158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a91906134ac565b505b8b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88836040518363ffffffff1660e01b8152600401610777929190613457565b6020604051808303816000875af1158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba91906134ac565b508660ff60008f815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b60ff60008f815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508960ff60008f815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860ff60008f8152602001908152602001600020600301819055508160ff60008f815260200190815260200160002060040181905550600160ff60008f815260200190815260200160002060050160006101000a81548160ff0219169083151502179055508a60ff60008f8152602001908152602001600020600701600082825461094591906135aa565b925050819055508673ffffffffffffffffffffffffffffffffffffffff168b8e7f8658aa8a4a6ef641d1fd3b5bb33205d173a5404ab1f7cd1a81d2828f94b8bf028f8e8d8c8c8c60405161099e9695949392919061363a565b60405180910390a46001925050509a9950505050505050505050565b6109c2612422565b6109ca6124a0565b565b6109d4612422565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a906136e2565b60405180910390fd5b60007f74726561737572790000000000000000000000000000000000000000000000008303610b46578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af390613774565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610c44565b7f61676772656761746f72000000000000000000000000000000000000000000008303610c43578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf490613806565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610c8f578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b610c9c612422565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b81604051610cf49190613826565b60405180910390a150565b600060cd60009054906101000a900460ff16905090565b610d1e612422565b610d286000612503565b565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db390613287565b60405180910390fd5b60ff600083815260200190815260200160002060050160009054906101000a900460ff1615610e20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e179061388d565b60405180910390fd5b60ff600083815260200190815260200160002060050160019054906101000a900460ff1615610e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7b906138f9565b60405180910390fd5b8260ff6000848152602001908152602001600020600401541015610edd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed490613965565b60405180910390fd5b6000831115610fbe5760ff600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610f79929190613457565b6020604051808303816000875af1158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbc91906134ac565b505b600160ff600084815260200190815260200160002060050160016101000a81548160ff021916908315150217905550600060ff600084815260200190815260200160002060060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060008360ff60008581526020019081526020016000206007015461105791906135aa565b905060ff600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60ff600086815260200190815260200160002060050160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff600087815260200190815260200160002060030154846111049190613985565b6040518363ffffffff1660e01b8152600401611121929190613457565b6020604051808303816000875af1158015611140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116491906134ac565b50827f0736fe428e1747ca8d387c2e6fa1a31a0cde62d3a167c40a46ade59a3cdc828e8560405161119591906139b9565b60405180910390a2600191505092915050565b60006001609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036111fa57600190506111ff565b600090505b919050565b61120c612a4d565b60ff6000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020016007820154815250509050919050565b6000611426612534565b90508073ffffffffffffffffffffffffffffffffffffffff16611447611cde565b73ffffffffffffffffffffffffffffffffffffffff161461149d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149490613a46565b60405180910390fd5b6114a681612503565b50565b60006114b361253c565b6114c08989868989612586565b60008383905003611506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fd90613ab2565b60405180910390fd5b8873ffffffffffffffffffffffffffffffffffffffff166323b872dd3330888c6115309190613985565b6040518463ffffffff1660e01b815260040161154e93929190613ad2565b6020604051808303816000875af115801561156d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159191906134ac565b5061010060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906115e390613b09565b91905055503361010060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405160200161163b929190613457565b6040516020818303038152906040528051906020012090506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff168a6116849190613508565b61168e9190613579565b90506040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018281526020016000151581526020016000151581526020018673ffffffffffffffffffffffffffffffffffffffff16815260200160975467ffffffffffffffff166bffffffffffffffffffffffff1681526020018a81525060ff600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550610120820151816007015590505060ff6000838152602001908152602001600020600701548a73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f40ccd1ceb111a3c186ef9911e1b876dc1f789ed331b86097b3b8851055b6a13784868d8a8a604051611993959493929190613b8c565b60405180910390a45098975050505050505050565b60008060019054906101000a900460ff161590508080156119d95750600160008054906101000a900460ff1660ff16105b80611a0657506119e830612739565b158015611a055750600160008054906101000a900460ff1660ff16145b5b611a45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3c90613c4c565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611a82576001600060016101000a81548160ff0219169083151502179055505b620186a0609781905550611a9461275c565b611a9c6127b5565b8015611af55760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051611aec9190613cb4565b60405180910390a15b50565b611b00612422565b611b0861280e565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080609860009054906101000a900467ffffffffffffffff16609754915091509091565b611b61612422565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc7906136e2565b60405180910390fd5b6001811480611bdf5750600281145b611c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1590613d1b565b60405180910390fd5b7f746f6b656e0000000000000000000000000000000000000000000000000000008303611cd95780609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c83604051611cd091906139b9565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9190613287565b60405180910390fd5b60ff600085815260200190815260200160002060050160009054906101000a900460ff1615611dfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df59061388d565b60405180910390fd5b60ff600085815260200190815260200160002060050160019054906101000a900460ff1615611e62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e59906138f9565b60405180910390fd5b600060ff600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508267ffffffffffffffff1660ff600087815260200190815260200160002060060160008282829054906101000a90046bffffffffffffffffffffffff16611ee49190613d3b565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600060ff600087815260200190815260200160002060060160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff160361213657600160ff600087815260200190815260200160002060050160006101000a81548160ff021916908315150217905550600060ff600087815260200190815260200160002060030154146121355760ff600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60ff600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff6000898152602001908152602001600020600301546040518363ffffffff1660e01b8152600401612060929190613457565b6020604051808303816000875af115801561207f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a391906134ac565b5060ff60008681526020019081526020016000206003015460ff600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b5b60006097548467ffffffffffffffff1660ff6000898152602001908152602001600020600701546121679190613508565b6121719190613579565b90508060ff6000888152602001908152602001600020600701600082825461219991906135aa565b925050819055506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff16836121d19190613508565b6121db9190613579565b905080826121e991906135aa565b91506000811115612296578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401612251929190613457565b6020604051808303816000875af1158015612270573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229491906134ac565b505b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87846040518363ffffffff1660e01b81526004016122d1929190613457565b6020604051808303816000875af11580156122f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231491906134ac565b508573ffffffffffffffffffffffffffffffffffffffff16877f98ece21e01a01cbe1d1c0dad3b053c8fbd368f99be78be958fcf1d1d13fd249a8a8860405161235e929190613dac565b60405180910390a360019350505050949350505050565b61237d612422565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166123dd611b0a565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61242a612534565b73ffffffffffffffffffffffffffffffffffffffff16612448611b0a565b73ffffffffffffffffffffffffffffffffffffffff161461249e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249590613e21565b60405180910390fd5b565b6124a8612871565b600060cd60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6124ec612534565b6040516124f9919061310e565b60405180910390a1565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055612531816128ba565b50565b600033905090565b612544610cff565b15612584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161257b90613e8d565b60405180910390fd5b565b6001609a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125ff90613ef9565b60405180910390fd5b6000840361264b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126429061335f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036126ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126b190613f65565b60405180910390fd5b6000811461273257600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272890613fd1565b60405180910390fd5b5b5050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166127ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127a290614063565b60405180910390fd5b6127b3612980565b565b600060019054906101000a900460ff16612804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127fb90614063565b60405180910390fd5b61280c6129e1565b565b61281661253c565b600160cd60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861285a612534565b604051612867919061310e565b60405180910390a1565b612879610cff565b6128b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128af906140cf565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff166129cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129c690614063565b60405180910390fd5b6129df6129da612534565b612503565b565b600060019054906101000a900460ff16612a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a2790614063565b60405180910390fd5b600060cd60006101000a81548160ff021916908315150217905550565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600081525090565b600080fd5b600080fd5b6000819050919050565b612b2781612b14565b8114612b3257600080fd5b50565b600081359050612b4481612b1e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b7582612b4a565b9050919050565b612b8581612b6a565b8114612b9057600080fd5b50565b600081359050612ba281612b7c565b92915050565b6000819050919050565b612bbb81612ba8565b8114612bc657600080fd5b50565b600081359050612bd881612bb2565b92915050565b60006bffffffffffffffffffffffff82169050919050565b612bff81612bde565b8114612c0a57600080fd5b50565b600081359050612c1c81612bf6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612c4757612c46612c22565b5b8235905067ffffffffffffffff811115612c6457612c63612c27565b5b602083019150836001820283011115612c8057612c7f612c2c565b5b9250929050565b6000806000806000806000806000806101208b8d031215612cab57612caa612b0a565b5b6000612cb98d828e01612b35565b9a50506020612cca8d828e01612b93565b9950506040612cdb8d828e01612bc9565b9850506060612cec8d828e01612b93565b9750506080612cfd8d828e01612bc9565b96505060a0612d0e8d828e01612b93565b95505060c0612d1f8d828e01612b93565b94505060e0612d308d828e01612c0d565b9350506101008b013567ffffffffffffffff811115612d5257612d51612b0f565b5b612d5e8d828e01612c31565b92509250509295989b9194979a5092959850565b60008115159050919050565b612d8781612d72565b82525050565b6000602082019050612da26000830184612d7e565b92915050565b60008060408385031215612dbf57612dbe612b0a565b5b6000612dcd85828601612b35565b9250506020612dde85828601612b93565b9150509250929050565b600067ffffffffffffffff82169050919050565b612e0581612de8565b8114612e1057600080fd5b50565b600081359050612e2281612dfc565b92915050565b600060208284031215612e3e57612e3d612b0a565b5b6000612e4c84828501612e13565b91505092915050565b60008060408385031215612e6c57612e6b612b0a565b5b6000612e7a85828601612bc9565b9250506020612e8b85828601612b35565b9150509250929050565b600060208284031215612eab57612eaa612b0a565b5b6000612eb984828501612b93565b91505092915050565b600060208284031215612ed857612ed7612b0a565b5b6000612ee684828501612b35565b91505092915050565b612ef881612b6a565b82525050565b612f0781612ba8565b82525050565b612f1681612d72565b82525050565b612f2581612bde565b82525050565b61014082016000820151612f426000850182612eef565b506020820151612f556020850182612eef565b506040820151612f686040850182612eef565b506060820151612f7b6060850182612efe565b506080820151612f8e6080850182612efe565b5060a0820151612fa160a0850182612f0d565b5060c0820151612fb460c0850182612f0d565b5060e0820151612fc760e0850182612eef565b50610100820151612fdc610100850182612f1c565b50610120820151612ff1610120850182612efe565b50505050565b60006101408201905061300d6000830184612f2b565b92915050565b60008060008060008060008060e0898b03121561303357613032612b0a565b5b60006130418b828c01612b93565b98505060206130528b828c01612bc9565b97505060406130638b828c01612c0d565b96505060606130748b828c01612b93565b95505060806130858b828c01612bc9565b94505060a06130968b828c01612b93565b93505060c089013567ffffffffffffffff8111156130b7576130b6612b0f565b5b6130c38b828c01612c31565b92509250509295985092959890939650565b6130de81612b14565b82525050565b60006020820190506130f960008301846130d5565b92915050565b61310881612b6a565b82525050565b600060208201905061312360008301846130ff565b92915050565b61313281612de8565b82525050565b61314181612ba8565b82525050565b600060408201905061315c6000830185613129565b6131696020830184613138565b9392505050565b60008060006060848603121561318957613188612b0a565b5b600061319786828701612b35565b93505060206131a886828701612b93565b92505060406131b986828701612bc9565b9150509250925092565b600080600080608085870312156131dd576131dc612b0a565b5b60006131eb87828801612b35565b94505060206131fc87828801612b35565b935050604061320d87828801612b93565b925050606061321e87828801612e13565b91505092959194509250565b600082825260208201905092915050565b7f4f6e6c7941676772656761746f72000000000000000000000000000000000000600082015250565b6000613271600e8361322a565b915061327c8261323b565b602082019050919050565b600060208201905081810360008301526132a081613264565b9050919050565b7f4f726465724e6f7446756c66696c6c6564000000000000000000000000000000600082015250565b60006132dd60118361322a565b91506132e8826132a7565b602082019050919050565b6000602082019050818103600083015261330c816132d0565b9050919050565b7f416d6f756e7449735a65726f0000000000000000000000000000000000000000600082015250565b6000613349600c8361322a565b915061335482613313565b602082019050919050565b600060208201905081810360008301526133788161333c565b9050919050565b7f526563697069656e7449735a65726f4164647265737300000000000000000000600082015250565b60006133b560168361322a565b91506133c08261337f565b602082019050919050565b600060208201905081810360008301526133e4816133a8565b9050919050565b7f53656e646572466565526563697069656e7449735a65726f4164647265737300600082015250565b6000613421601f8361322a565b915061342c826133eb565b602082019050919050565b6000602082019050818103600083015261345081613414565b9050919050565b600060408201905061346c60008301856130ff565b6134796020830184613138565b9392505050565b61348981612d72565b811461349457600080fd5b50565b6000815190506134a681613480565b92915050565b6000602082840312156134c2576134c1612b0a565b5b60006134d084828501613497565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061351382612ba8565b915061351e83612ba8565b925082820261352c81612ba8565b91508282048414831517613543576135426134d9565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061358482612ba8565b915061358f83612ba8565b92508261359f5761359e61354a565b5b828204905092915050565b60006135b582612ba8565b91506135c083612ba8565b92508282039050818111156135d8576135d76134d9565b5b92915050565b6135e781612bde565b82525050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000613619838561322a565b93506136268385846135ed565b61362f836135fc565b840190509392505050565b600060a08201905061364f60008301896130ff565b61365c60208301886130ff565b61366960408301876130ff565b61367660608301866135de565b818103608083015261368981848661360d565b9050979650505050505050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b60006136cc60158361322a565b91506136d782613696565b602082019050919050565b600060208201905081810360008301526136fb816136bf565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b600061375e60258361322a565b915061376982613702565b604082019050919050565b6000602082019050818103600083015261378d81613751565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b60006137f060278361322a565b91506137fb82613794565b604082019050919050565b6000602082019050818103600083015261381f816137e3565b9050919050565b600060208201905061383b6000830184613129565b92915050565b7f4f7264657246756c66696c6c6564000000000000000000000000000000000000600082015250565b6000613877600e8361322a565b915061388282613841565b602082019050919050565b600060208201905081810360008301526138a68161386a565b9050919050565b7f4f72646572526566756e64656400000000000000000000000000000000000000600082015250565b60006138e3600d8361322a565b91506138ee826138ad565b602082019050919050565b60006020820190508181036000830152613912816138d6565b9050919050565b7f4665654578636565647350726f746f636f6c4665650000000000000000000000600082015250565b600061394f60158361322a565b915061395a82613919565b602082019050919050565b6000602082019050818103600083015261397e81613942565b9050919050565b600061399082612ba8565b915061399b83612ba8565b92508282019050808211156139b3576139b26134d9565b5b92915050565b60006020820190506139ce6000830184613138565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000613a3060298361322a565b9150613a3b826139d4565b604082019050919050565b60006020820190508181036000830152613a5f81613a23565b9050919050565b7f496e76616c69644d657373616765486173680000000000000000000000000000600082015250565b6000613a9c60128361322a565b9150613aa782613a66565b602082019050919050565b60006020820190508181036000830152613acb81613a8f565b9050919050565b6000606082019050613ae760008301866130ff565b613af460208301856130ff565b613b016040830184613138565b949350505050565b6000613b1482612ba8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613b4657613b456134d9565b5b600182019050919050565b6000819050919050565b6000613b76613b71613b6c84612bde565b613b51565b612ba8565b9050919050565b613b8681613b5b565b82525050565b6000608082019050613ba16000830188613138565b613bae60208301876130d5565b613bbb6040830186613b7d565b8181036060830152613bce81848661360d565b90509695505050505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613c36602e8361322a565b9150613c4182613bda565b604082019050919050565b60006020820190508181036000830152613c6581613c29565b9050919050565b6000819050919050565b600060ff82169050919050565b6000613c9e613c99613c9484613c6c565b613b51565b613c76565b9050919050565b613cae81613c83565b82525050565b6000602082019050613cc96000830184613ca5565b92915050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b6000613d0560178361322a565b9150613d1082613ccf565b602082019050919050565b60006020820190508181036000830152613d3481613cf8565b9050919050565b6000613d4682612bde565b9150613d5183612bde565b925082820390506bffffffffffffffffffffffff811115613d7557613d746134d9565b5b92915050565b6000613d96613d91613d8c84612de8565b613b51565b612bde565b9050919050565b613da681613d7b565b82525050565b6000604082019050613dc160008301856130d5565b613dce6020830184613d9d565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613e0b60208361322a565b9150613e1682613dd5565b602082019050919050565b60006020820190508181036000830152613e3a81613dfe565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613e7760108361322a565b9150613e8282613e41565b602082019050919050565b60006020820190508181036000830152613ea681613e6a565b9050919050565b7f546f6b656e4e6f74537570706f72746564000000000000000000000000000000600082015250565b6000613ee360118361322a565b9150613eee82613ead565b602082019050919050565b60006020820190508181036000830152613f1281613ed6565b9050919050565b7f5468726f775a65726f4164647265737300000000000000000000000000000000600082015250565b6000613f4f60108361322a565b9150613f5a82613f19565b602082019050919050565b60006020820190508181036000830152613f7e81613f42565b9050919050565b7f496e76616c696453656e646572466565526563697069656e7400000000000000600082015250565b6000613fbb60198361322a565b9150613fc682613f85565b602082019050919050565b60006020820190508181036000830152613fea81613fae565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061404d602b8361322a565b915061405882613ff1565b604082019050919050565b6000602082019050818103600083015261407c81614040565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006140b960148361322a565b91506140c482614083565b602082019050919050565b600060208201905081810360008301526140e8816140ac565b905091905056fea2646970667358221220d97ab7eca82a9cbc2521f0e20328feaaaf5117bfceee752b34247ec6a0a8791964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x72 SWAP1 PUSH3 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH3 0xEC JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH3 0xE3 SWAP2 SWAP1 PUSH3 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15D PUSH1 0x27 DUP4 PUSH3 0xEE JUMP JUMPDEST SWAP2 POP PUSH3 0x16A DUP3 PUSH3 0xFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x190 DUP2 PUSH3 0x14E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AF DUP2 PUSH3 0x197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4125 DUP1 PUSH3 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB810C636 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB810C636 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF22EE704 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x809804F7 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x71EEDB88 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x75151B63 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x768C6EC0 EQ PUSH2 0x220 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x3D3F14F4 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2C87 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x9BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x2DA8 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH2 0xD16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x2E95 JUMP JUMPDEST PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2EC2 JUMP JUMPDEST PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x141C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x30E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x19A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH2 0x1AF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0x3147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST PUSH2 0x1B59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FF PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2E95 JUMP JUMPDEST PUSH2 0x2375 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x3287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x457 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44E SWAP1 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x491 SWAP1 PUSH2 0x335F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP1 PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 EQ PUSH2 0x644 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP1 PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP12 PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x73C JUMPI DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP9 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x796 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP DUP7 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 DUP15 PUSH32 0x8658AA8A4A6EF641D1FD3B5BB33205D173A5404AB1F7CD1A81D2828F94B8BF02 DUP16 DUP15 DUP14 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x99E SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x363A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP3 POP POP POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x9CA PUSH2 0x24A0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3A SWAP1 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0xB46 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP1 PUSH2 0x3774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xC44 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0xC43 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x3806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0xC8F JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC9C PUSH2 0x2422 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x3826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD1E PUSH2 0x2422 JUMP JUMPDEST PUSH2 0xD28 PUSH1 0x0 PUSH2 0x2503 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB3 SWAP1 PUSH2 0x3287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE17 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP1 PUSH2 0x38F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED4 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xFBE JUMPI PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF79 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x1057 SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x3985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1121 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1140 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1164 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP DUP3 PUSH32 0x736FE428E1747CA8D387C2E6FA1A31A0CDE62D3A167C40A46ADE59A3CDC828E DUP6 PUSH1 0x40 MLOAD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x39B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x11FA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C PUSH2 0x2A4D JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1426 PUSH2 0x2534 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1447 PUSH2 0x1CDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1494 SWAP1 PUSH2 0x3A46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A6 DUP2 PUSH2 0x2503 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B3 PUSH2 0x253C JUMP JUMPDEST PUSH2 0x14C0 DUP10 DUP10 DUP7 DUP10 DUP10 PUSH2 0x2586 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FD SWAP1 PUSH2 0x3AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP13 PUSH2 0x1530 SWAP2 SWAP1 PUSH2 0x3985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x156D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1591 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15E3 SWAP1 PUSH2 0x3B09 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH2 0x100 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x163B SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x1684 SWAP2 SWAP1 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x168E SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x97 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE POP PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40CCD1CEB111A3C186EF9911E1B876DC1F789ED331B86097B3B8851055B6A137 DUP5 DUP7 DUP14 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1993 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x19D9 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1A06 JUMPI POP PUSH2 0x19E8 ADDRESS PUSH2 0x2739 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1A05 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1A45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3C SWAP1 PUSH2 0x3C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH3 0x186A0 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x1A94 PUSH2 0x275C JUMP JUMPDEST PUSH2 0x1A9C PUSH2 0x27B5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1AEC SWAP2 SWAP1 PUSH2 0x3CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B00 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x1B08 PUSH2 0x280E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x97 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1B61 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC7 SWAP1 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x1BDF JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x1C1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C15 SWAP1 PUSH2 0x3D1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x1CD9 JUMPI DUP1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CD0 SWAP2 SWAP1 PUSH2 0x39B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D91 SWAP1 PUSH2 0x3287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF5 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E59 SWAP1 PUSH2 0x38F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EE4 SWAP2 SWAP1 PUSH2 0x3D3B JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2136 JUMPI PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x2135 JUMPI PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xFF PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2060 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x207F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20A3 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x2167 SWAP2 SWAP1 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x2171 SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2199 SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x21D1 SWAP2 SWAP1 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x21DB SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2296 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2251 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2270 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2294 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D1 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2314 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH32 0x98ECE21E01A01CBE1D1C0DAD3B053C8FBD368F99BE78BE958FCF1D1D13FD249A DUP11 DUP9 PUSH1 0x40 MLOAD PUSH2 0x235E SWAP3 SWAP2 SWAP1 PUSH2 0x3DAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x237D PUSH2 0x2422 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23DD PUSH2 0x1B0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x242A PUSH2 0x2534 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2448 PUSH2 0x1B0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x249E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2495 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x24A8 PUSH2 0x2871 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x24EC PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F9 SWAP2 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x2531 DUP2 PUSH2 0x28BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2544 PUSH2 0xCFF JUMP JUMPDEST ISZERO PUSH2 0x2584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257B SWAP1 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9A PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25FF SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SUB PUSH2 0x264B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2642 SWAP1 PUSH2 0x335F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B1 SWAP1 PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x2732 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2728 SWAP1 PUSH2 0x3FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A2 SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27B3 PUSH2 0x2980 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2804 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27FB SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x280C PUSH2 0x29E1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2816 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x285A PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2867 SWAP2 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2879 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x28B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28AF SWAP1 PUSH2 0x40CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x29CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C6 SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29DF PUSH2 0x29DA PUSH2 0x2534 JUMP JUMPDEST PUSH2 0x2503 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A27 SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B27 DUP2 PUSH2 0x2B14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B44 DUP2 PUSH2 0x2B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B75 DUP3 PUSH2 0x2B4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B85 DUP2 PUSH2 0x2B6A JUMP JUMPDEST DUP2 EQ PUSH2 0x2B90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BA2 DUP2 PUSH2 0x2B7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BBB DUP2 PUSH2 0x2BA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BD8 DUP2 PUSH2 0x2BB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BFF DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP2 EQ PUSH2 0x2C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C1C DUP2 PUSH2 0x2BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2C47 JUMPI PUSH2 0x2C46 PUSH2 0x2C22 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C64 JUMPI PUSH2 0x2C63 PUSH2 0x2C27 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2C80 JUMPI PUSH2 0x2C7F PUSH2 0x2C2C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x120 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x2CAB JUMPI PUSH2 0x2CAA PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB9 DUP14 DUP3 DUP15 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH2 0x2CCA DUP14 DUP3 DUP15 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH2 0x2CDB DUP14 DUP3 DUP15 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH2 0x2CEC DUP14 DUP3 DUP15 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH2 0x2CFD DUP14 DUP3 DUP15 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH2 0x2D0E DUP14 DUP3 DUP15 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH2 0x2D1F DUP14 DUP3 DUP15 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH2 0x2D30 DUP14 DUP3 DUP15 ADD PUSH2 0x2C0D JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 DUP12 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D52 JUMPI PUSH2 0x2D51 PUSH2 0x2B0F JUMP JUMPDEST JUMPDEST PUSH2 0x2D5E DUP14 DUP3 DUP15 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D87 DUP2 PUSH2 0x2D72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DA2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DBF JUMPI PUSH2 0x2DBE PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DCD DUP6 DUP3 DUP7 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DDE DUP6 DUP3 DUP7 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E05 DUP2 PUSH2 0x2DE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E22 DUP2 PUSH2 0x2DFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E3E JUMPI PUSH2 0x2E3D PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E4C DUP5 DUP3 DUP6 ADD PUSH2 0x2E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E6C JUMPI PUSH2 0x2E6B PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E7A DUP6 DUP3 DUP7 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E8B DUP6 DUP3 DUP7 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EAB JUMPI PUSH2 0x2EAA PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EB9 DUP5 DUP3 DUP6 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ED8 JUMPI PUSH2 0x2ED7 PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EE6 DUP5 DUP3 DUP6 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EF8 DUP2 PUSH2 0x2B6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F07 DUP2 PUSH2 0x2BA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F16 DUP2 PUSH2 0x2D72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F25 DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2F42 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2EEF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2F55 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2EEF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2F68 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2EEF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2F7B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2EFE JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2F8E PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2EFE JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2FA1 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2F0D JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2FB4 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2F0D JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2FC7 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2EEF JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2FDC PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2F1C JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2FF1 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2EFE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x300D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3033 JUMPI PUSH2 0x3032 PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3041 DUP12 DUP3 DUP13 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x3052 DUP12 DUP3 DUP13 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x3063 DUP12 DUP3 DUP13 ADD PUSH2 0x2C0D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x3074 DUP12 DUP3 DUP13 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x3085 DUP12 DUP3 DUP13 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x3096 DUP12 DUP3 DUP13 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30B7 JUMPI PUSH2 0x30B6 PUSH2 0x2B0F JUMP JUMPDEST JUMPDEST PUSH2 0x30C3 DUP12 DUP3 DUP13 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x30DE DUP2 PUSH2 0x2B14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3108 DUP2 PUSH2 0x2B6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3123 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3132 DUP2 PUSH2 0x2DE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3141 DUP2 PUSH2 0x2BA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x315C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3129 JUMP JUMPDEST PUSH2 0x3169 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3138 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3189 JUMPI PUSH2 0x3188 PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3197 DUP7 DUP3 DUP8 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31A8 DUP7 DUP3 DUP8 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31B9 DUP7 DUP3 DUP8 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31DD JUMPI PUSH2 0x31DC PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31EB DUP8 DUP3 DUP9 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x31FC DUP8 DUP3 DUP9 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x320D DUP8 DUP3 DUP9 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x321E DUP8 DUP3 DUP9 ADD PUSH2 0x2E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7941676772656761746F72000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3271 PUSH1 0xE DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x327C DUP3 PUSH2 0x323B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32A0 DUP2 PUSH2 0x3264 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465724E6F7446756C66696C6C6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DD PUSH1 0x11 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x32E8 DUP3 PUSH2 0x32A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x330C DUP2 PUSH2 0x32D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7449735A65726F0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3349 PUSH1 0xC DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3354 DUP3 PUSH2 0x3313 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3378 DUP2 PUSH2 0x333C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E7449735A65726F4164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B5 PUSH1 0x16 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x33C0 DUP3 PUSH2 0x337F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33E4 DUP2 PUSH2 0x33A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572466565526563697069656E7449735A65726F4164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3421 PUSH1 0x1F DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x342C DUP3 PUSH2 0x33EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3450 DUP2 PUSH2 0x3414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x346C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3479 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3138 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3489 DUP2 PUSH2 0x2D72 JUMP JUMPDEST DUP2 EQ PUSH2 0x3494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x34A6 DUP2 PUSH2 0x3480 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34C2 JUMPI PUSH2 0x34C1 PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34D0 DUP5 DUP3 DUP6 ADD PUSH2 0x3497 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3513 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x351E DUP4 PUSH2 0x2BA8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x352C DUP2 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3543 JUMPI PUSH2 0x3542 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3584 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x358F DUP4 PUSH2 0x2BA8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x359F JUMPI PUSH2 0x359E PUSH2 0x354A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B5 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x35C0 DUP4 PUSH2 0x2BA8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x35D8 JUMPI PUSH2 0x35D7 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35E7 DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3619 DUP4 DUP6 PUSH2 0x322A JUMP JUMPDEST SWAP4 POP PUSH2 0x3626 DUP4 DUP6 DUP5 PUSH2 0x35ED JUMP JUMPDEST PUSH2 0x362F DUP4 PUSH2 0x35FC JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x364F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x365C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3669 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3676 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x35DE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3689 DUP2 DUP5 DUP7 PUSH2 0x360D JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36CC PUSH1 0x15 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x36D7 DUP3 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36FB DUP2 PUSH2 0x36BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x375E PUSH1 0x25 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3769 DUP3 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x378D DUP2 PUSH2 0x3751 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F0 PUSH1 0x27 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x37FB DUP3 PUSH2 0x3794 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x381F DUP2 PUSH2 0x37E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x383B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F7264657246756C66696C6C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3877 PUSH1 0xE DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3882 DUP3 PUSH2 0x3841 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38A6 DUP2 PUSH2 0x386A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F72646572526566756E64656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E3 PUSH1 0xD DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x38EE DUP3 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3912 DUP2 PUSH2 0x38D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665654578636565647350726F746F636F6C4665650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x394F PUSH1 0x15 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x395A DUP3 PUSH2 0x3919 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x397E DUP2 PUSH2 0x3942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3990 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x399B DUP4 PUSH2 0x2BA8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x39B3 JUMPI PUSH2 0x39B2 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A30 PUSH1 0x29 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3A3B DUP3 PUSH2 0x39D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A5F DUP2 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69644D657373616765486173680000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9C PUSH1 0x12 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA7 DUP3 PUSH2 0x3A66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACB DUP2 PUSH2 0x3A8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3AE7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3AF4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3B01 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3138 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B14 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3B46 JUMPI PUSH2 0x3B45 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B76 PUSH2 0x3B71 PUSH2 0x3B6C DUP5 PUSH2 0x2BDE JUMP JUMPDEST PUSH2 0x3B51 JUMP JUMPDEST PUSH2 0x2BA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B86 DUP2 PUSH2 0x3B5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3BA1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3138 JUMP JUMPDEST PUSH2 0x3BAE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x30D5 JUMP JUMPDEST PUSH2 0x3BBB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3B7D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3BCE DUP2 DUP5 DUP7 PUSH2 0x360D JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C36 PUSH1 0x2E DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3C41 DUP3 PUSH2 0x3BDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C65 DUP2 PUSH2 0x3C29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C9E PUSH2 0x3C99 PUSH2 0x3C94 DUP5 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x3B51 JUMP JUMPDEST PUSH2 0x3C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CAE DUP2 PUSH2 0x3C83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D05 PUSH1 0x17 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3D10 DUP3 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D34 DUP2 PUSH2 0x3CF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D46 DUP3 PUSH2 0x2BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x3D51 DUP4 PUSH2 0x2BDE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D75 JUMPI PUSH2 0x3D74 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D96 PUSH2 0x3D91 PUSH2 0x3D8C DUP5 PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x3B51 JUMP JUMPDEST PUSH2 0x2BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DA6 DUP2 PUSH2 0x3D7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DC1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30D5 JUMP JUMPDEST PUSH2 0x3DCE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D9D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E0B PUSH1 0x20 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E16 DUP3 PUSH2 0x3DD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E3A DUP2 PUSH2 0x3DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E77 PUSH1 0x10 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E82 DUP3 PUSH2 0x3E41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA6 DUP2 PUSH2 0x3E6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E4E6F74537570706F72746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE3 PUSH1 0x11 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3EEE DUP3 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F12 DUP2 PUSH2 0x3ED6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726F775A65726F4164647265737300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4F PUSH1 0x10 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3F5A DUP3 PUSH2 0x3F19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F7E DUP2 PUSH2 0x3F42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696453656E646572466565526563697069656E7400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBB PUSH1 0x19 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3FC6 DUP3 PUSH2 0x3F85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FEA DUP2 PUSH2 0x3FAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404D PUSH1 0x2B DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x4058 DUP3 PUSH2 0x3FF1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x407C DUP2 PUSH2 0x4040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B9 PUSH1 0x14 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x40C4 DUP3 PUSH2 0x4083 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40E8 DUP2 PUSH2 0x40AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PUSH27 0xB7ECA82A9CBC2521F0E20328FEAAAF5117BFCEEE752B34247EC6A0 0xA8 PUSH26 0x1964736F6C634300081200330000000000000000000000000000 ","sourceMap":"390:8533:10:-:0;;;708:44;;;;;;;;;;726:22;:20;;;:22;;:::i;:::-;390:8533;;5939:280:2;6007:13;;;;;;;;;;;6006:14;5998:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6094:15;6078:31;;:12;;;;;;;;;;:31;;;6074:139;;6140:15;6125:12;;:30;;;;;;;;;;;;;;;;;;6174:28;6186:15;6174:28;;;;;;:::i;:::-;;;;;;;;6074:139;5939:280::o;7:169:14:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;390:8533:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable2Step_init_26":{"entryPoint":10076,"id":26,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_145":{"entryPoint":10624,"id":145,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_440":{"entryPoint":10165,"id":440,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_450":{"entryPoint":10721,"id":450,"parameterSlots":0,"returnSlots":0},"@_checkOwner_176":{"entryPoint":9250,"id":176,"parameterSlots":0,"returnSlots":0},"@_handler_1904":{"entryPoint":9606,"id":1904,"parameterSlots":5,"returnSlots":0},"@_msgSender_894":{"entryPoint":9524,"id":894,"parameterSlots":0,"returnSlots":1},"@_pause_514":{"entryPoint":10254,"id":514,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_487":{"entryPoint":9532,"id":487,"parameterSlots":0,"returnSlots":0},"@_requirePaused_498":{"entryPoint":10353,"id":498,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_233":{"entryPoint":10426,"id":233,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_78":{"entryPoint":9475,"id":78,"parameterSlots":1,"returnSlots":0},"@_unpause_530":{"entryPoint":9376,"id":530,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_100":{"entryPoint":5148,"id":100,"parameterSlots":0,"returnSlots":0},"@createOrder_1848":{"entryPoint":5289,"id":1848,"parameterSlots":8,"returnSlots":1},"@getFeeDetails_2395":{"entryPoint":6964,"id":2395,"parameterSlots":0,"returnSlots":2},"@getOrderInfo_2363":{"entryPoint":4612,"id":2363,"parameterSlots":1,"returnSlots":1},"@initialize_1695":{"entryPoint":6568,"id":1695,"parameterSlots":0,"returnSlots":0},"@isContract_554":{"entryPoint":10041,"id":554,"parameterSlots":1,"returnSlots":1},"@isTokenSupported_2382":{"entryPoint":4520,"id":2382,"parameterSlots":1,"returnSlots":1},"@owner_162":{"entryPoint":6922,"id":162,"parameterSlots":0,"returnSlots":1},"@pause_1718":{"entryPoint":6904,"id":1718,"parameterSlots":0,"returnSlots":0},"@paused_475":{"entryPoint":3327,"id":475,"parameterSlots":0,"returnSlots":1},"@pendingOwner_41":{"entryPoint":7390,"id":41,"parameterSlots":0,"returnSlots":1},"@processSettlement_2349":{"entryPoint":865,"id":2349,"parameterSlots":10,"returnSlots":1},"@refund_2171":{"entryPoint":3370,"id":2171,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_190":{"entryPoint":3350,"id":190,"parameterSlots":0,"returnSlots":0},"@settingManagerBool_2490":{"entryPoint":7001,"id":2490,"parameterSlots":3,"returnSlots":0},"@settle_2065":{"entryPoint":7432,"id":2065,"parameterSlots":4,"returnSlots":1},"@transferOwnership_61":{"entryPoint":9077,"id":61,"parameterSlots":1,"returnSlots":0},"@unpause_1728":{"entryPoint":2490,"id":1728,"parameterSlots":0,"returnSlots":0},"@updateProtocolAddress_2579":{"entryPoint":2508,"id":2579,"parameterSlots":2,"returnSlots":0},"@updateProtocolFee_2507":{"entryPoint":3220,"id":2507,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":11155,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":13463,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":11061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":11313,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":11209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":11795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":11277,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint96t_addresst_uint256t_addresst_string_calldata_ptr":{"entryPoint":12307,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":11970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":11688,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_uint256":{"entryPoint":12656,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_addresst_uint256t_addresst_uint256t_addresst_addresst_uint96t_string_calldata_ptr":{"entryPoint":11399,"id":null,"parameterSlots":2,"returnSlots":10},"abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64":{"entryPoint":12739,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_bytes32":{"entryPoint":11861,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":11816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":12015,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12543,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":12045,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11646,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12501,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":15525,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":13837,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack":{"entryPoint":14550,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":16556,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack":{"entryPoint":14015,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack":{"entryPoint":14883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack":{"entryPoint":13224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack":{"entryPoint":13008,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack":{"entryPoint":13116,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":15978,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":15401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack":{"entryPoint":13332,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack":{"entryPoint":15608,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack":{"entryPoint":14442,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":15870,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack":{"entryPoint":14161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack":{"entryPoint":14658,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack":{"entryPoint":16194,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack":{"entryPoint":14991,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack":{"entryPoint":16086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":16448,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack":{"entryPoint":14307,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack":{"entryPoint":12900,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack":{"entryPoint":16302,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Order_$2667_memory_ptr_to_t_struct$_Order_$2667_memory_ptr_fromStack":{"entryPoint":12075,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12030,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12600,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":12585,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint96_fromStack":{"entryPoint":15773,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":15229,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96":{"entryPoint":12060,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":13790,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_string_calldata_ptr__to_t_address_t_address_t_address_t_uint96_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13882,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":15058,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13399,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":12516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed":{"entryPoint":15788,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":15540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14585,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16591,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14050,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14918,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13259,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16013,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13367,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14477,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15905,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14196,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14693,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15026,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16121,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16483,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14342,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16337,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Order_$2667_memory_ptr__to_t_struct$_Order_$2667_memory_ptr__fromStack_reversed":{"entryPoint":12279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15244,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":14374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed":{"entryPoint":12615,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12842,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14725,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":13689,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":13576,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13738,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":15675,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":11114,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11634,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11028,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":15468,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11082,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11176,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":11752,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":15478,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":11230,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":15491,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint64_to_t_uint96":{"entryPoint":15739,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":15195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13805,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":15185,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15113,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13529,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13642,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":11303,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11298,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11308,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11023,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11018,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":13820,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd":{"entryPoint":14509,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":16515,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf":{"entryPoint":13974,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":14804,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07":{"entryPoint":13183,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86":{"entryPoint":12967,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2":{"entryPoint":13075,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":15937,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":15322,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61":{"entryPoint":13291,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338":{"entryPoint":15567,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5":{"entryPoint":14401,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":15829,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead":{"entryPoint":14082,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de":{"entryPoint":14617,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7":{"entryPoint":16153,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4":{"entryPoint":14950,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1":{"entryPoint":16045,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":16369,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4":{"entryPoint":14228,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243":{"entryPoint":12859,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8":{"entryPoint":16261,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11132,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13440,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":11038,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11186,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":11772,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":11254,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:43618:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:32:14","statements":[{"nodeType":"YulAssignment","src":"389:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:77:14"},{"body":{"nodeType":"YulBlock","src":"460:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:14"},"nodeType":"YulFunctionCall","src":"519:12:14"},"nodeType":"YulExpressionStatement","src":"519:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"490:17:14"},"nodeType":"YulFunctionCall","src":"490:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:14"},"nodeType":"YulFunctionCall","src":"480:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:14"},"nodeType":"YulFunctionCall","src":"473:43:14"},"nodeType":"YulIf","src":"470:63:14"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:14","type":""}],"src":"417:122:14"},{"body":{"nodeType":"YulBlock","src":"597:87:14","statements":[{"nodeType":"YulAssignment","src":"607:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:14"},"nodeType":"YulFunctionCall","src":"616:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:14"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"645:26:14"},"nodeType":"YulFunctionCall","src":"645:33:14"},"nodeType":"YulExpressionStatement","src":"645:33:14"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:14","type":""}],"src":"545:139:14"},{"body":{"nodeType":"YulBlock","src":"735:81:14","statements":[{"nodeType":"YulAssignment","src":"745:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"760:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"767:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:14"},"nodeType":"YulFunctionCall","src":"756:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"745:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"717:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"727:7:14","type":""}],"src":"690:126:14"},{"body":{"nodeType":"YulBlock","src":"867:51:14","statements":[{"nodeType":"YulAssignment","src":"877:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"906:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"888:17:14"},"nodeType":"YulFunctionCall","src":"888:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"877:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"849:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"859:7:14","type":""}],"src":"822:96:14"},{"body":{"nodeType":"YulBlock","src":"967:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:14"},"nodeType":"YulFunctionCall","src":"1026:12:14"},"nodeType":"YulExpressionStatement","src":"1026:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"997:17:14"},"nodeType":"YulFunctionCall","src":"997:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:14"},"nodeType":"YulFunctionCall","src":"987:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:14"},"nodeType":"YulFunctionCall","src":"980:43:14"},"nodeType":"YulIf","src":"977:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:14","type":""}],"src":"924:122:14"},{"body":{"nodeType":"YulBlock","src":"1104:87:14","statements":[{"nodeType":"YulAssignment","src":"1114:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:14"},"nodeType":"YulFunctionCall","src":"1123:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1152:26:14"},"nodeType":"YulFunctionCall","src":"1152:33:14"},"nodeType":"YulExpressionStatement","src":"1152:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:14","type":""}],"src":"1052:139:14"},{"body":{"nodeType":"YulBlock","src":"1242:32:14","statements":[{"nodeType":"YulAssignment","src":"1252:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1263:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1252:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1224:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1234:7:14","type":""}],"src":"1197:77:14"},{"body":{"nodeType":"YulBlock","src":"1323:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"1380:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1389:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1392:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1382:6:14"},"nodeType":"YulFunctionCall","src":"1382:12:14"},"nodeType":"YulExpressionStatement","src":"1382:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1346:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1371:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1353:17:14"},"nodeType":"YulFunctionCall","src":"1353:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1343:2:14"},"nodeType":"YulFunctionCall","src":"1343:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1336:6:14"},"nodeType":"YulFunctionCall","src":"1336:43:14"},"nodeType":"YulIf","src":"1333:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1316:5:14","type":""}],"src":"1280:122:14"},{"body":{"nodeType":"YulBlock","src":"1460:87:14","statements":[{"nodeType":"YulAssignment","src":"1470:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1492:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1479:12:14"},"nodeType":"YulFunctionCall","src":"1479:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1470:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1535:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1508:26:14"},"nodeType":"YulFunctionCall","src":"1508:33:14"},"nodeType":"YulExpressionStatement","src":"1508:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1446:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1454:5:14","type":""}],"src":"1408:139:14"},{"body":{"nodeType":"YulBlock","src":"1597:65:14","statements":[{"nodeType":"YulAssignment","src":"1607:49:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1622:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1629:26:14","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1618:3:14"},"nodeType":"YulFunctionCall","src":"1618:38:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1607:7:14"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1579:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1589:7:14","type":""}],"src":"1553:109:14"},{"body":{"nodeType":"YulBlock","src":"1710:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"1766:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1775:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1778:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1768:6:14"},"nodeType":"YulFunctionCall","src":"1768:12:14"},"nodeType":"YulExpressionStatement","src":"1768:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1733:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1757:5:14"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"1740:16:14"},"nodeType":"YulFunctionCall","src":"1740:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1730:2:14"},"nodeType":"YulFunctionCall","src":"1730:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1723:6:14"},"nodeType":"YulFunctionCall","src":"1723:42:14"},"nodeType":"YulIf","src":"1720:62:14"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:14","type":""}],"src":"1668:120:14"},{"body":{"nodeType":"YulBlock","src":"1845:86:14","statements":[{"nodeType":"YulAssignment","src":"1855:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1877:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1864:12:14"},"nodeType":"YulFunctionCall","src":"1864:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1855:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1919:5:14"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"1893:25:14"},"nodeType":"YulFunctionCall","src":"1893:32:14"},"nodeType":"YulExpressionStatement","src":"1893:32:14"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1823:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1831:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1839:5:14","type":""}],"src":"1794:137:14"},{"body":{"nodeType":"YulBlock","src":"2026:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2043:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2046:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2036:6:14"},"nodeType":"YulFunctionCall","src":"2036:12:14"},"nodeType":"YulExpressionStatement","src":"2036:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1937:117:14"},{"body":{"nodeType":"YulBlock","src":"2149:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2166:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2169:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2159:6:14"},"nodeType":"YulFunctionCall","src":"2159:12:14"},"nodeType":"YulExpressionStatement","src":"2159:12:14"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2060:117:14"},{"body":{"nodeType":"YulBlock","src":"2272:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2289:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2292:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2282:6:14"},"nodeType":"YulFunctionCall","src":"2282:12:14"},"nodeType":"YulExpressionStatement","src":"2282:12:14"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2183:117:14"},{"body":{"nodeType":"YulBlock","src":"2395:478:14","statements":[{"body":{"nodeType":"YulBlock","src":"2444:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2446:77:14"},"nodeType":"YulFunctionCall","src":"2446:79:14"},"nodeType":"YulExpressionStatement","src":"2446:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2423:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2431:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2419:3:14"},"nodeType":"YulFunctionCall","src":"2419:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2438:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2415:3:14"},"nodeType":"YulFunctionCall","src":"2415:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2408:6:14"},"nodeType":"YulFunctionCall","src":"2408:35:14"},"nodeType":"YulIf","src":"2405:122:14"},{"nodeType":"YulAssignment","src":"2536:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2559:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2546:12:14"},"nodeType":"YulFunctionCall","src":"2546:20:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2536:6:14"}]},{"body":{"nodeType":"YulBlock","src":"2609:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2611:77:14"},"nodeType":"YulFunctionCall","src":"2611:79:14"},"nodeType":"YulExpressionStatement","src":"2611:79:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2581:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2589:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2578:2:14"},"nodeType":"YulFunctionCall","src":"2578:30:14"},"nodeType":"YulIf","src":"2575:117:14"},{"nodeType":"YulAssignment","src":"2701:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2717:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2725:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2713:3:14"},"nodeType":"YulFunctionCall","src":"2713:17:14"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2701:8:14"}]},{"body":{"nodeType":"YulBlock","src":"2784:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2786:77:14"},"nodeType":"YulFunctionCall","src":"2786:79:14"},"nodeType":"YulExpressionStatement","src":"2786:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2749:8:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2763:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2771:4:14","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2759:3:14"},"nodeType":"YulFunctionCall","src":"2759:17:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2745:3:14"},"nodeType":"YulFunctionCall","src":"2745:32:14"},{"name":"end","nodeType":"YulIdentifier","src":"2779:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2742:2:14"},"nodeType":"YulFunctionCall","src":"2742:41:14"},"nodeType":"YulIf","src":"2739:128:14"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2362:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2370:3:14","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2378:8:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"2388:6:14","type":""}],"src":"2320:553:14"},{"body":{"nodeType":"YulBlock","src":"3100:1472:14","statements":[{"body":{"nodeType":"YulBlock","src":"3147:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3149:77:14"},"nodeType":"YulFunctionCall","src":"3149:79:14"},"nodeType":"YulExpressionStatement","src":"3149:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3121:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3130:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3117:3:14"},"nodeType":"YulFunctionCall","src":"3117:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3142:3:14","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3113:3:14"},"nodeType":"YulFunctionCall","src":"3113:33:14"},"nodeType":"YulIf","src":"3110:120:14"},{"nodeType":"YulBlock","src":"3240:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3255:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3269:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3259:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3284:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3319:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3330:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3315:3:14"},"nodeType":"YulFunctionCall","src":"3315:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3339:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3294:20:14"},"nodeType":"YulFunctionCall","src":"3294:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3284:6:14"}]}]},{"nodeType":"YulBlock","src":"3367:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3382:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3396:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3386:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3412:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3447:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3458:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3443:3:14"},"nodeType":"YulFunctionCall","src":"3443:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3467:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3422:20:14"},"nodeType":"YulFunctionCall","src":"3422:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3412:6:14"}]}]},{"nodeType":"YulBlock","src":"3495:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3510:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3524:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3514:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3540:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3575:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3586:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:14"},"nodeType":"YulFunctionCall","src":"3571:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3595:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3550:20:14"},"nodeType":"YulFunctionCall","src":"3550:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3540:6:14"}]}]},{"nodeType":"YulBlock","src":"3623:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3638:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3652:2:14","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3642:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3668:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3703:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3714:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3699:3:14"},"nodeType":"YulFunctionCall","src":"3699:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3723:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3678:20:14"},"nodeType":"YulFunctionCall","src":"3678:53:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3668:6:14"}]}]},{"nodeType":"YulBlock","src":"3751:119:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3766:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3780:3:14","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3770:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3797:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3832:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3843:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3828:3:14"},"nodeType":"YulFunctionCall","src":"3828:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3852:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3807:20:14"},"nodeType":"YulFunctionCall","src":"3807:53:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3797:6:14"}]}]},{"nodeType":"YulBlock","src":"3880:119:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3895:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3909:3:14","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3899:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3926:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3961:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3972:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3957:3:14"},"nodeType":"YulFunctionCall","src":"3957:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3981:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3936:20:14"},"nodeType":"YulFunctionCall","src":"3936:53:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3926:6:14"}]}]},{"nodeType":"YulBlock","src":"4009:119:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4024:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4038:3:14","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4028:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4055:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4090:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4101:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4086:3:14"},"nodeType":"YulFunctionCall","src":"4086:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4110:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4065:20:14"},"nodeType":"YulFunctionCall","src":"4065:53:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4055:6:14"}]}]},{"nodeType":"YulBlock","src":"4138:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4153:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4167:3:14","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4157:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4184:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4218:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4229:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4214:3:14"},"nodeType":"YulFunctionCall","src":"4214:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4238:7:14"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"4194:19:14"},"nodeType":"YulFunctionCall","src":"4194:52:14"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"4184:6:14"}]}]},{"nodeType":"YulBlock","src":"4266:299:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4281:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4312:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4323:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4308:3:14"},"nodeType":"YulFunctionCall","src":"4308:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4295:12:14"},"nodeType":"YulFunctionCall","src":"4295:33:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4285:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4375:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4377:77:14"},"nodeType":"YulFunctionCall","src":"4377:79:14"},"nodeType":"YulExpressionStatement","src":"4377:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4347:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4355:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4344:2:14"},"nodeType":"YulFunctionCall","src":"4344:30:14"},"nodeType":"YulIf","src":"4341:117:14"},{"nodeType":"YulAssignment","src":"4472:83:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4527:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4538:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4523:3:14"},"nodeType":"YulFunctionCall","src":"4523:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4547:7:14"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"4490:32:14"},"nodeType":"YulFunctionCall","src":"4490:65:14"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"4472:6:14"},{"name":"value9","nodeType":"YulIdentifier","src":"4480:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256t_addresst_uint256t_addresst_addresst_uint96t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2998:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3009:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3021:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3029:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3037:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3045:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3053:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3061:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3069:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3077:6:14","type":""},{"name":"value8","nodeType":"YulTypedName","src":"3085:6:14","type":""},{"name":"value9","nodeType":"YulTypedName","src":"3093:6:14","type":""}],"src":"2879:1693:14"},{"body":{"nodeType":"YulBlock","src":"4620:48:14","statements":[{"nodeType":"YulAssignment","src":"4630:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4655:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4648:6:14"},"nodeType":"YulFunctionCall","src":"4648:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4641:6:14"},"nodeType":"YulFunctionCall","src":"4641:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4630:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4602:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4612:7:14","type":""}],"src":"4578:90:14"},{"body":{"nodeType":"YulBlock","src":"4733:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4750:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4770:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4755:14:14"},"nodeType":"YulFunctionCall","src":"4755:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4743:6:14"},"nodeType":"YulFunctionCall","src":"4743:34:14"},"nodeType":"YulExpressionStatement","src":"4743:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4721:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4728:3:14","type":""}],"src":"4674:109:14"},{"body":{"nodeType":"YulBlock","src":"4881:118:14","statements":[{"nodeType":"YulAssignment","src":"4891:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4903:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4914:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4899:3:14"},"nodeType":"YulFunctionCall","src":"4899:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4891:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4965:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4978:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4989:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4974:3:14"},"nodeType":"YulFunctionCall","src":"4974:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4927:37:14"},"nodeType":"YulFunctionCall","src":"4927:65:14"},"nodeType":"YulExpressionStatement","src":"4927:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4853:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4865:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4876:4:14","type":""}],"src":"4789:210:14"},{"body":{"nodeType":"YulBlock","src":"5088:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"5134:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5136:77:14"},"nodeType":"YulFunctionCall","src":"5136:79:14"},"nodeType":"YulExpressionStatement","src":"5136:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5109:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5118:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5105:3:14"},"nodeType":"YulFunctionCall","src":"5105:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5130:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5101:3:14"},"nodeType":"YulFunctionCall","src":"5101:32:14"},"nodeType":"YulIf","src":"5098:119:14"},{"nodeType":"YulBlock","src":"5227:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5242:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5256:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5246:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5271:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5306:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5317:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5302:3:14"},"nodeType":"YulFunctionCall","src":"5302:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5326:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5281:20:14"},"nodeType":"YulFunctionCall","src":"5281:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5271:6:14"}]}]},{"nodeType":"YulBlock","src":"5354:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5369:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5383:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5373:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5399:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5434:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5445:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5430:3:14"},"nodeType":"YulFunctionCall","src":"5430:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5454:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5409:20:14"},"nodeType":"YulFunctionCall","src":"5409:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5399:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5050:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5061:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5073:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5081:6:14","type":""}],"src":"5005:474:14"},{"body":{"nodeType":"YulBlock","src":"5529:57:14","statements":[{"nodeType":"YulAssignment","src":"5539:41:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5554:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"5561:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5550:3:14"},"nodeType":"YulFunctionCall","src":"5550:30:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5539:7:14"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5511:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5521:7:14","type":""}],"src":"5485:101:14"},{"body":{"nodeType":"YulBlock","src":"5634:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"5690:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5699:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5702:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5692:6:14"},"nodeType":"YulFunctionCall","src":"5692:12:14"},"nodeType":"YulExpressionStatement","src":"5692:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5657:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5681:5:14"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"5664:16:14"},"nodeType":"YulFunctionCall","src":"5664:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5654:2:14"},"nodeType":"YulFunctionCall","src":"5654:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5647:6:14"},"nodeType":"YulFunctionCall","src":"5647:42:14"},"nodeType":"YulIf","src":"5644:62:14"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5627:5:14","type":""}],"src":"5592:120:14"},{"body":{"nodeType":"YulBlock","src":"5769:86:14","statements":[{"nodeType":"YulAssignment","src":"5779:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5801:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5788:12:14"},"nodeType":"YulFunctionCall","src":"5788:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5779:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5843:5:14"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"5817:25:14"},"nodeType":"YulFunctionCall","src":"5817:32:14"},"nodeType":"YulExpressionStatement","src":"5817:32:14"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5747:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"5755:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5763:5:14","type":""}],"src":"5718:137:14"},{"body":{"nodeType":"YulBlock","src":"5926:262:14","statements":[{"body":{"nodeType":"YulBlock","src":"5972:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5974:77:14"},"nodeType":"YulFunctionCall","src":"5974:79:14"},"nodeType":"YulExpressionStatement","src":"5974:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5947:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5956:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5943:3:14"},"nodeType":"YulFunctionCall","src":"5943:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5968:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5939:3:14"},"nodeType":"YulFunctionCall","src":"5939:32:14"},"nodeType":"YulIf","src":"5936:119:14"},{"nodeType":"YulBlock","src":"6065:116:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6080:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6094:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6084:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6109:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6143:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6154:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6139:3:14"},"nodeType":"YulFunctionCall","src":"6139:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6163:7:14"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"6119:19:14"},"nodeType":"YulFunctionCall","src":"6119:52:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6109:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5896:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5907:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5919:6:14","type":""}],"src":"5861:327:14"},{"body":{"nodeType":"YulBlock","src":"6277:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"6323:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6325:77:14"},"nodeType":"YulFunctionCall","src":"6325:79:14"},"nodeType":"YulExpressionStatement","src":"6325:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6298:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6307:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6294:3:14"},"nodeType":"YulFunctionCall","src":"6294:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6319:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6290:3:14"},"nodeType":"YulFunctionCall","src":"6290:32:14"},"nodeType":"YulIf","src":"6287:119:14"},{"nodeType":"YulBlock","src":"6416:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6431:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6445:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6435:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6460:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6495:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6506:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6491:3:14"},"nodeType":"YulFunctionCall","src":"6491:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6515:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6470:20:14"},"nodeType":"YulFunctionCall","src":"6470:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6460:6:14"}]}]},{"nodeType":"YulBlock","src":"6543:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6558:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6572:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6562:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6588:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6623:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6634:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6619:3:14"},"nodeType":"YulFunctionCall","src":"6619:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6643:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6598:20:14"},"nodeType":"YulFunctionCall","src":"6598:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6588:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6239:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6250:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6262:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6270:6:14","type":""}],"src":"6194:474:14"},{"body":{"nodeType":"YulBlock","src":"6740:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"6786:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6788:77:14"},"nodeType":"YulFunctionCall","src":"6788:79:14"},"nodeType":"YulExpressionStatement","src":"6788:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6761:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6770:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6757:3:14"},"nodeType":"YulFunctionCall","src":"6757:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6782:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6753:3:14"},"nodeType":"YulFunctionCall","src":"6753:32:14"},"nodeType":"YulIf","src":"6750:119:14"},{"nodeType":"YulBlock","src":"6879:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6894:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6908:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6898:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6923:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6958:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6969:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6954:3:14"},"nodeType":"YulFunctionCall","src":"6954:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6978:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6933:20:14"},"nodeType":"YulFunctionCall","src":"6933:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6923:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6710:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6721:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6733:6:14","type":""}],"src":"6674:329:14"},{"body":{"nodeType":"YulBlock","src":"7075:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"7121:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7123:77:14"},"nodeType":"YulFunctionCall","src":"7123:79:14"},"nodeType":"YulExpressionStatement","src":"7123:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7096:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7105:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7092:3:14"},"nodeType":"YulFunctionCall","src":"7092:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7117:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7088:3:14"},"nodeType":"YulFunctionCall","src":"7088:32:14"},"nodeType":"YulIf","src":"7085:119:14"},{"nodeType":"YulBlock","src":"7214:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7229:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7243:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7233:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7258:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7293:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7304:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7289:3:14"},"nodeType":"YulFunctionCall","src":"7289:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7313:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7268:20:14"},"nodeType":"YulFunctionCall","src":"7268:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7258:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7045:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7056:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7068:6:14","type":""}],"src":"7009:329:14"},{"body":{"nodeType":"YulBlock","src":"7399:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7416:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7439:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7421:17:14"},"nodeType":"YulFunctionCall","src":"7421:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7409:6:14"},"nodeType":"YulFunctionCall","src":"7409:37:14"},"nodeType":"YulExpressionStatement","src":"7409:37:14"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7387:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7394:3:14","type":""}],"src":"7344:108:14"},{"body":{"nodeType":"YulBlock","src":"7513:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7530:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7553:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7535:17:14"},"nodeType":"YulFunctionCall","src":"7535:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7523:6:14"},"nodeType":"YulFunctionCall","src":"7523:37:14"},"nodeType":"YulExpressionStatement","src":"7523:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7501:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7508:3:14","type":""}],"src":"7458:108:14"},{"body":{"nodeType":"YulBlock","src":"7621:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7638:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7658:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7643:14:14"},"nodeType":"YulFunctionCall","src":"7643:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7631:6:14"},"nodeType":"YulFunctionCall","src":"7631:34:14"},"nodeType":"YulExpressionStatement","src":"7631:34:14"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7609:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7616:3:14","type":""}],"src":"7572:99:14"},{"body":{"nodeType":"YulBlock","src":"7730:52:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7747:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7769:5:14"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"7752:16:14"},"nodeType":"YulFunctionCall","src":"7752:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7740:6:14"},"nodeType":"YulFunctionCall","src":"7740:36:14"},"nodeType":"YulExpressionStatement","src":"7740:36:14"}]},"name":"abi_encode_t_uint96_to_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7718:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7725:3:14","type":""}],"src":"7677:105:14"},{"body":{"nodeType":"YulBlock","src":"7954:1838:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7964:28:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7980:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7985:6:14","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7976:3:14"},"nodeType":"YulFunctionCall","src":"7976:16:14"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"7968:4:14","type":""}]},{"nodeType":"YulBlock","src":"8002:166:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8039:43:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8069:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8076:4:14","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8065:3:14"},"nodeType":"YulFunctionCall","src":"8065:16:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8059:5:14"},"nodeType":"YulFunctionCall","src":"8059:23:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8043:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8129:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8152:4:14","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8143:3:14"},"nodeType":"YulFunctionCall","src":"8143:14:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"8095:33:14"},"nodeType":"YulFunctionCall","src":"8095:63:14"},"nodeType":"YulExpressionStatement","src":"8095:63:14"}]},{"nodeType":"YulBlock","src":"8178:165:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8214:43:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8244:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8251:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8240:3:14"},"nodeType":"YulFunctionCall","src":"8240:16:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8234:5:14"},"nodeType":"YulFunctionCall","src":"8234:23:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8218:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8304:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8322:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8327:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8318:3:14"},"nodeType":"YulFunctionCall","src":"8318:14:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"8270:33:14"},"nodeType":"YulFunctionCall","src":"8270:63:14"},"nodeType":"YulExpressionStatement","src":"8270:63:14"}]},{"nodeType":"YulBlock","src":"8353:178:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8402:43:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8432:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8439:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8428:3:14"},"nodeType":"YulFunctionCall","src":"8428:16:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8422:5:14"},"nodeType":"YulFunctionCall","src":"8422:23:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8406:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8492:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8510:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8515:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8506:3:14"},"nodeType":"YulFunctionCall","src":"8506:14:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"8458:33:14"},"nodeType":"YulFunctionCall","src":"8458:63:14"},"nodeType":"YulExpressionStatement","src":"8458:63:14"}]},{"nodeType":"YulBlock","src":"8541:169:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8581:43:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8611:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8618:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8607:3:14"},"nodeType":"YulFunctionCall","src":"8607:16:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8601:5:14"},"nodeType":"YulFunctionCall","src":"8601:23:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8585:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8671:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8689:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8694:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8685:3:14"},"nodeType":"YulFunctionCall","src":"8685:14:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8637:33:14"},"nodeType":"YulFunctionCall","src":"8637:63:14"},"nodeType":"YulExpressionStatement","src":"8637:63:14"}]},{"nodeType":"YulBlock","src":"8720:171:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8762:43:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8792:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8799:4:14","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8788:3:14"},"nodeType":"YulFunctionCall","src":"8788:16:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8782:5:14"},"nodeType":"YulFunctionCall","src":"8782:23:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8766:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8852:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8870:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8875:4:14","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8866:3:14"},"nodeType":"YulFunctionCall","src":"8866:14:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8818:33:14"},"nodeType":"YulFunctionCall","src":"8818:63:14"},"nodeType":"YulExpressionStatement","src":"8818:63:14"}]},{"nodeType":"YulBlock","src":"8901:165:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8943:43:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8973:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8980:4:14","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:14"},"nodeType":"YulFunctionCall","src":"8969:16:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8963:5:14"},"nodeType":"YulFunctionCall","src":"8963:23:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8947:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9027:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9045:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9050:4:14","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9041:3:14"},"nodeType":"YulFunctionCall","src":"9041:14:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"8999:27:14"},"nodeType":"YulFunctionCall","src":"8999:57:14"},"nodeType":"YulExpressionStatement","src":"8999:57:14"}]},{"nodeType":"YulBlock","src":"9076:164:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9117:43:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9147:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"9154:4:14","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9143:3:14"},"nodeType":"YulFunctionCall","src":"9143:16:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9137:5:14"},"nodeType":"YulFunctionCall","src":"9137:23:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9121:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9201:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9219:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9224:4:14","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9215:3:14"},"nodeType":"YulFunctionCall","src":"9215:14:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"9173:27:14"},"nodeType":"YulFunctionCall","src":"9173:57:14"},"nodeType":"YulExpressionStatement","src":"9173:57:14"}]},{"nodeType":"YulBlock","src":"9250:173:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9294:43:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9324:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"9331:4:14","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9320:3:14"},"nodeType":"YulFunctionCall","src":"9320:16:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9314:5:14"},"nodeType":"YulFunctionCall","src":"9314:23:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9298:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9384:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9402:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9407:4:14","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:14"},"nodeType":"YulFunctionCall","src":"9398:14:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9350:33:14"},"nodeType":"YulFunctionCall","src":"9350:63:14"},"nodeType":"YulExpressionStatement","src":"9350:63:14"}]},{"nodeType":"YulBlock","src":"9433:172:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9474:45:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9504:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"9511:6:14","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:14"},"nodeType":"YulFunctionCall","src":"9500:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9494:5:14"},"nodeType":"YulFunctionCall","src":"9494:25:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9478:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9564:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9582:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9587:6:14","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9578:3:14"},"nodeType":"YulFunctionCall","src":"9578:16:14"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96","nodeType":"YulIdentifier","src":"9532:31:14"},"nodeType":"YulFunctionCall","src":"9532:63:14"},"nodeType":"YulExpressionStatement","src":"9532:63:14"}]},{"nodeType":"YulBlock","src":"9615:170:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9652:45:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9682:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"9689:6:14","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9678:3:14"},"nodeType":"YulFunctionCall","src":"9678:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9672:5:14"},"nodeType":"YulFunctionCall","src":"9672:25:14"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9656:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9744:12:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9762:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9767:6:14","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9758:3:14"},"nodeType":"YulFunctionCall","src":"9758:16:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9710:33:14"},"nodeType":"YulFunctionCall","src":"9710:65:14"},"nodeType":"YulExpressionStatement","src":"9710:65:14"}]}]},"name":"abi_encode_t_struct$_Order_$2667_memory_ptr_to_t_struct$_Order_$2667_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7941:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7948:3:14","type":""}],"src":"7842:1950:14"},{"body":{"nodeType":"YulBlock","src":"9942:171:14","statements":[{"nodeType":"YulAssignment","src":"9952:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9964:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9975:3:14","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9960:3:14"},"nodeType":"YulFunctionCall","src":"9960:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9952:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10079:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10092:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10103:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10088:3:14"},"nodeType":"YulFunctionCall","src":"10088:17:14"}],"functionName":{"name":"abi_encode_t_struct$_Order_$2667_memory_ptr_to_t_struct$_Order_$2667_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9989:89:14"},"nodeType":"YulFunctionCall","src":"9989:117:14"},"nodeType":"YulExpressionStatement","src":"9989:117:14"}]},"name":"abi_encode_tuple_t_struct$_Order_$2667_memory_ptr__to_t_struct$_Order_$2667_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9914:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9926:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9937:4:14","type":""}],"src":"9798:315:14"},{"body":{"nodeType":"YulBlock","src":"10306:1214:14","statements":[{"body":{"nodeType":"YulBlock","src":"10353:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10355:77:14"},"nodeType":"YulFunctionCall","src":"10355:79:14"},"nodeType":"YulExpressionStatement","src":"10355:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10327:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10336:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10323:3:14"},"nodeType":"YulFunctionCall","src":"10323:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"10348:3:14","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10319:3:14"},"nodeType":"YulFunctionCall","src":"10319:33:14"},"nodeType":"YulIf","src":"10316:120:14"},{"nodeType":"YulBlock","src":"10446:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10461:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10475:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10465:6:14","type":""}]},{"nodeType":"YulAssignment","src":"10490:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10525:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"10536:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10521:3:14"},"nodeType":"YulFunctionCall","src":"10521:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10545:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10500:20:14"},"nodeType":"YulFunctionCall","src":"10500:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10490:6:14"}]}]},{"nodeType":"YulBlock","src":"10573:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10588:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10602:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10592:6:14","type":""}]},{"nodeType":"YulAssignment","src":"10618:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10653:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"10664:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10649:3:14"},"nodeType":"YulFunctionCall","src":"10649:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10673:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10628:20:14"},"nodeType":"YulFunctionCall","src":"10628:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10618:6:14"}]}]},{"nodeType":"YulBlock","src":"10701:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10716:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10730:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10720:6:14","type":""}]},{"nodeType":"YulAssignment","src":"10746:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10780:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"10791:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10776:3:14"},"nodeType":"YulFunctionCall","src":"10776:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10800:7:14"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"10756:19:14"},"nodeType":"YulFunctionCall","src":"10756:52:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10746:6:14"}]}]},{"nodeType":"YulBlock","src":"10828:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10843:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10857:2:14","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10847:6:14","type":""}]},{"nodeType":"YulAssignment","src":"10873:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10908:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"10919:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10904:3:14"},"nodeType":"YulFunctionCall","src":"10904:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10928:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10883:20:14"},"nodeType":"YulFunctionCall","src":"10883:53:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10873:6:14"}]}]},{"nodeType":"YulBlock","src":"10956:119:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10971:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10985:3:14","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10975:6:14","type":""}]},{"nodeType":"YulAssignment","src":"11002:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11037:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11048:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11033:3:14"},"nodeType":"YulFunctionCall","src":"11033:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11057:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11012:20:14"},"nodeType":"YulFunctionCall","src":"11012:53:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11002:6:14"}]}]},{"nodeType":"YulBlock","src":"11085:119:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11100:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"11114:3:14","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11104:6:14","type":""}]},{"nodeType":"YulAssignment","src":"11131:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11166:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11177:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11162:3:14"},"nodeType":"YulFunctionCall","src":"11162:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11186:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11141:20:14"},"nodeType":"YulFunctionCall","src":"11141:53:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11131:6:14"}]}]},{"nodeType":"YulBlock","src":"11214:299:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11229:47:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11260:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11271:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11256:3:14"},"nodeType":"YulFunctionCall","src":"11256:19:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11243:12:14"},"nodeType":"YulFunctionCall","src":"11243:33:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11233:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"11323:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11325:77:14"},"nodeType":"YulFunctionCall","src":"11325:79:14"},"nodeType":"YulExpressionStatement","src":"11325:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11295:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11303:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11292:2:14"},"nodeType":"YulFunctionCall","src":"11292:30:14"},"nodeType":"YulIf","src":"11289:117:14"},{"nodeType":"YulAssignment","src":"11420:83:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11475:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11486:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11471:3:14"},"nodeType":"YulFunctionCall","src":"11471:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11495:7:14"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"11438:32:14"},"nodeType":"YulFunctionCall","src":"11438:65:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"11420:6:14"},{"name":"value7","nodeType":"YulIdentifier","src":"11428:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint96t_addresst_uint256t_addresst_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10220:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10231:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10243:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10251:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10259:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10267:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10275:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10283:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10291:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"10299:6:14","type":""}],"src":"10119:1401:14"},{"body":{"nodeType":"YulBlock","src":"11591:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11608:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11631:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11613:17:14"},"nodeType":"YulFunctionCall","src":"11613:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11601:6:14"},"nodeType":"YulFunctionCall","src":"11601:37:14"},"nodeType":"YulExpressionStatement","src":"11601:37:14"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11579:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11586:3:14","type":""}],"src":"11526:118:14"},{"body":{"nodeType":"YulBlock","src":"11748:124:14","statements":[{"nodeType":"YulAssignment","src":"11758:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11770:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11781:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11766:3:14"},"nodeType":"YulFunctionCall","src":"11766:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11758:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11838:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11851:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11862:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11847:3:14"},"nodeType":"YulFunctionCall","src":"11847:17:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11794:43:14"},"nodeType":"YulFunctionCall","src":"11794:71:14"},"nodeType":"YulExpressionStatement","src":"11794:71:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11720:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11732:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11743:4:14","type":""}],"src":"11650:222:14"},{"body":{"nodeType":"YulBlock","src":"11943:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11960:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11983:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11965:17:14"},"nodeType":"YulFunctionCall","src":"11965:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11953:6:14"},"nodeType":"YulFunctionCall","src":"11953:37:14"},"nodeType":"YulExpressionStatement","src":"11953:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11931:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11938:3:14","type":""}],"src":"11878:118:14"},{"body":{"nodeType":"YulBlock","src":"12100:124:14","statements":[{"nodeType":"YulAssignment","src":"12110:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12122:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12133:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12118:3:14"},"nodeType":"YulFunctionCall","src":"12118:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12110:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12190:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12203:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12214:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12199:3:14"},"nodeType":"YulFunctionCall","src":"12199:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12146:43:14"},"nodeType":"YulFunctionCall","src":"12146:71:14"},"nodeType":"YulExpressionStatement","src":"12146:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12072:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12084:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12095:4:14","type":""}],"src":"12002:222:14"},{"body":{"nodeType":"YulBlock","src":"12293:52:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12310:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12332:5:14"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"12315:16:14"},"nodeType":"YulFunctionCall","src":"12315:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12303:6:14"},"nodeType":"YulFunctionCall","src":"12303:36:14"},"nodeType":"YulExpressionStatement","src":"12303:36:14"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12281:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12288:3:14","type":""}],"src":"12230:115:14"},{"body":{"nodeType":"YulBlock","src":"12416:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12433:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12456:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12438:17:14"},"nodeType":"YulFunctionCall","src":"12438:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12426:6:14"},"nodeType":"YulFunctionCall","src":"12426:37:14"},"nodeType":"YulExpressionStatement","src":"12426:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12404:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12411:3:14","type":""}],"src":"12351:118:14"},{"body":{"nodeType":"YulBlock","src":"12599:204:14","statements":[{"nodeType":"YulAssignment","src":"12609:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12621:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12632:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12617:3:14"},"nodeType":"YulFunctionCall","src":"12617:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12609:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12687:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12700:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12711:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12696:3:14"},"nodeType":"YulFunctionCall","src":"12696:17:14"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"12645:41:14"},"nodeType":"YulFunctionCall","src":"12645:69:14"},"nodeType":"YulExpressionStatement","src":"12645:69:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12768:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12781:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12792:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12777:3:14"},"nodeType":"YulFunctionCall","src":"12777:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12724:43:14"},"nodeType":"YulFunctionCall","src":"12724:72:14"},"nodeType":"YulExpressionStatement","src":"12724:72:14"}]},"name":"abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12563:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12575:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12583:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12594:4:14","type":""}],"src":"12475:328:14"},{"body":{"nodeType":"YulBlock","src":"12909:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"12955:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12957:77:14"},"nodeType":"YulFunctionCall","src":"12957:79:14"},"nodeType":"YulExpressionStatement","src":"12957:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12930:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12939:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12926:3:14"},"nodeType":"YulFunctionCall","src":"12926:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"12951:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12922:3:14"},"nodeType":"YulFunctionCall","src":"12922:32:14"},"nodeType":"YulIf","src":"12919:119:14"},{"nodeType":"YulBlock","src":"13048:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"13063:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13077:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13067:6:14","type":""}]},{"nodeType":"YulAssignment","src":"13092:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13127:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"13138:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13123:3:14"},"nodeType":"YulFunctionCall","src":"13123:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13147:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13102:20:14"},"nodeType":"YulFunctionCall","src":"13102:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13092:6:14"}]}]},{"nodeType":"YulBlock","src":"13175:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"13190:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13204:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13194:6:14","type":""}]},{"nodeType":"YulAssignment","src":"13220:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13255:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"13266:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13251:3:14"},"nodeType":"YulFunctionCall","src":"13251:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13275:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13230:20:14"},"nodeType":"YulFunctionCall","src":"13230:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13220:6:14"}]}]},{"nodeType":"YulBlock","src":"13303:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"13318:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13332:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13322:6:14","type":""}]},{"nodeType":"YulAssignment","src":"13348:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13383:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"13394:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13379:3:14"},"nodeType":"YulFunctionCall","src":"13379:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13403:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13358:20:14"},"nodeType":"YulFunctionCall","src":"13358:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13348:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12863:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12874:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12886:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12894:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12902:6:14","type":""}],"src":"12809:619:14"},{"body":{"nodeType":"YulBlock","src":"13550:647:14","statements":[{"body":{"nodeType":"YulBlock","src":"13597:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13599:77:14"},"nodeType":"YulFunctionCall","src":"13599:79:14"},"nodeType":"YulExpressionStatement","src":"13599:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13571:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13580:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13567:3:14"},"nodeType":"YulFunctionCall","src":"13567:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"13592:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13563:3:14"},"nodeType":"YulFunctionCall","src":"13563:33:14"},"nodeType":"YulIf","src":"13560:120:14"},{"nodeType":"YulBlock","src":"13690:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"13705:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13719:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13709:6:14","type":""}]},{"nodeType":"YulAssignment","src":"13734:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13769:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"13780:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13765:3:14"},"nodeType":"YulFunctionCall","src":"13765:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13789:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13744:20:14"},"nodeType":"YulFunctionCall","src":"13744:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13734:6:14"}]}]},{"nodeType":"YulBlock","src":"13817:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"13832:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13846:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13836:6:14","type":""}]},{"nodeType":"YulAssignment","src":"13862:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13897:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"13908:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13893:3:14"},"nodeType":"YulFunctionCall","src":"13893:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13917:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13872:20:14"},"nodeType":"YulFunctionCall","src":"13872:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13862:6:14"}]}]},{"nodeType":"YulBlock","src":"13945:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"13960:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13974:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13964:6:14","type":""}]},{"nodeType":"YulAssignment","src":"13990:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14025:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"14036:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14021:3:14"},"nodeType":"YulFunctionCall","src":"14021:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14045:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14000:20:14"},"nodeType":"YulFunctionCall","src":"14000:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13990:6:14"}]}]},{"nodeType":"YulBlock","src":"14073:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"14088:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14102:2:14","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14092:6:14","type":""}]},{"nodeType":"YulAssignment","src":"14118:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14152:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"14163:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14148:3:14"},"nodeType":"YulFunctionCall","src":"14148:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14172:7:14"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"14128:19:14"},"nodeType":"YulFunctionCall","src":"14128:52:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14118:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13496:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13507:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13519:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13527:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13535:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13543:6:14","type":""}],"src":"13434:763:14"},{"body":{"nodeType":"YulBlock","src":"14299:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14316:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"14321:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14309:6:14"},"nodeType":"YulFunctionCall","src":"14309:19:14"},"nodeType":"YulExpressionStatement","src":"14309:19:14"},{"nodeType":"YulAssignment","src":"14337:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14356:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14361:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14352:3:14"},"nodeType":"YulFunctionCall","src":"14352:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14337:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14271:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"14276:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14287:11:14","type":""}],"src":"14203:169:14"},{"body":{"nodeType":"YulBlock","src":"14484:58:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14506:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14514:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14502:3:14"},"nodeType":"YulFunctionCall","src":"14502:14:14"},{"hexValue":"4f6e6c7941676772656761746f72","kind":"string","nodeType":"YulLiteral","src":"14518:16:14","type":"","value":"OnlyAggregator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14495:6:14"},"nodeType":"YulFunctionCall","src":"14495:40:14"},"nodeType":"YulExpressionStatement","src":"14495:40:14"}]},"name":"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14476:6:14","type":""}],"src":"14378:164:14"},{"body":{"nodeType":"YulBlock","src":"14694:220:14","statements":[{"nodeType":"YulAssignment","src":"14704:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14770:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14775:2:14","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14711:58:14"},"nodeType":"YulFunctionCall","src":"14711:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14704:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14876:3:14"}],"functionName":{"name":"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","nodeType":"YulIdentifier","src":"14787:88:14"},"nodeType":"YulFunctionCall","src":"14787:93:14"},"nodeType":"YulExpressionStatement","src":"14787:93:14"},{"nodeType":"YulAssignment","src":"14889:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14900:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14905:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14896:3:14"},"nodeType":"YulFunctionCall","src":"14896:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14889:3:14"}]}]},"name":"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14682:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14690:3:14","type":""}],"src":"14548:366:14"},{"body":{"nodeType":"YulBlock","src":"15091:248:14","statements":[{"nodeType":"YulAssignment","src":"15101:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15113:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15124:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15109:3:14"},"nodeType":"YulFunctionCall","src":"15109:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15101:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15148:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15159:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15144:3:14"},"nodeType":"YulFunctionCall","src":"15144:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15167:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15173:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15163:3:14"},"nodeType":"YulFunctionCall","src":"15163:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15137:6:14"},"nodeType":"YulFunctionCall","src":"15137:47:14"},"nodeType":"YulExpressionStatement","src":"15137:47:14"},{"nodeType":"YulAssignment","src":"15193:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15327:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15201:124:14"},"nodeType":"YulFunctionCall","src":"15201:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15193:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15071:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15086:4:14","type":""}],"src":"14920:419:14"},{"body":{"nodeType":"YulBlock","src":"15451:61:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15473:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15481:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15469:3:14"},"nodeType":"YulFunctionCall","src":"15469:14:14"},{"hexValue":"4f726465724e6f7446756c66696c6c6564","kind":"string","nodeType":"YulLiteral","src":"15485:19:14","type":"","value":"OrderNotFulfilled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15462:6:14"},"nodeType":"YulFunctionCall","src":"15462:43:14"},"nodeType":"YulExpressionStatement","src":"15462:43:14"}]},"name":"store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15443:6:14","type":""}],"src":"15345:167:14"},{"body":{"nodeType":"YulBlock","src":"15664:220:14","statements":[{"nodeType":"YulAssignment","src":"15674:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15740:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15745:2:14","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15681:58:14"},"nodeType":"YulFunctionCall","src":"15681:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15674:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15846:3:14"}],"functionName":{"name":"store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86","nodeType":"YulIdentifier","src":"15757:88:14"},"nodeType":"YulFunctionCall","src":"15757:93:14"},"nodeType":"YulExpressionStatement","src":"15757:93:14"},{"nodeType":"YulAssignment","src":"15859:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15870:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15875:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15866:3:14"},"nodeType":"YulFunctionCall","src":"15866:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15859:3:14"}]}]},"name":"abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15652:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15660:3:14","type":""}],"src":"15518:366:14"},{"body":{"nodeType":"YulBlock","src":"16061:248:14","statements":[{"nodeType":"YulAssignment","src":"16071:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16083:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16094:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16079:3:14"},"nodeType":"YulFunctionCall","src":"16079:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16071:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16118:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16129:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16114:3:14"},"nodeType":"YulFunctionCall","src":"16114:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16137:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16143:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16133:3:14"},"nodeType":"YulFunctionCall","src":"16133:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16107:6:14"},"nodeType":"YulFunctionCall","src":"16107:47:14"},"nodeType":"YulExpressionStatement","src":"16107:47:14"},{"nodeType":"YulAssignment","src":"16163:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16297:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16171:124:14"},"nodeType":"YulFunctionCall","src":"16171:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16163:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16041:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16056:4:14","type":""}],"src":"15890:419:14"},{"body":{"nodeType":"YulBlock","src":"16421:56:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16443:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16451:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16439:3:14"},"nodeType":"YulFunctionCall","src":"16439:14:14"},{"hexValue":"416d6f756e7449735a65726f","kind":"string","nodeType":"YulLiteral","src":"16455:14:14","type":"","value":"AmountIsZero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16432:6:14"},"nodeType":"YulFunctionCall","src":"16432:38:14"},"nodeType":"YulExpressionStatement","src":"16432:38:14"}]},"name":"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16413:6:14","type":""}],"src":"16315:162:14"},{"body":{"nodeType":"YulBlock","src":"16629:220:14","statements":[{"nodeType":"YulAssignment","src":"16639:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16705:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"16710:2:14","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16646:58:14"},"nodeType":"YulFunctionCall","src":"16646:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16639:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16811:3:14"}],"functionName":{"name":"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","nodeType":"YulIdentifier","src":"16722:88:14"},"nodeType":"YulFunctionCall","src":"16722:93:14"},"nodeType":"YulExpressionStatement","src":"16722:93:14"},{"nodeType":"YulAssignment","src":"16824:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16835:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"16840:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16831:3:14"},"nodeType":"YulFunctionCall","src":"16831:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16824:3:14"}]}]},"name":"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16617:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16625:3:14","type":""}],"src":"16483:366:14"},{"body":{"nodeType":"YulBlock","src":"17026:248:14","statements":[{"nodeType":"YulAssignment","src":"17036:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17048:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17059:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17044:3:14"},"nodeType":"YulFunctionCall","src":"17044:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17036:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17083:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17094:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17079:3:14"},"nodeType":"YulFunctionCall","src":"17079:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17102:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17108:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17098:3:14"},"nodeType":"YulFunctionCall","src":"17098:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17072:6:14"},"nodeType":"YulFunctionCall","src":"17072:47:14"},"nodeType":"YulExpressionStatement","src":"17072:47:14"},{"nodeType":"YulAssignment","src":"17128:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17262:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17136:124:14"},"nodeType":"YulFunctionCall","src":"17136:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17128:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17006:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17021:4:14","type":""}],"src":"16855:419:14"},{"body":{"nodeType":"YulBlock","src":"17386:66:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17408:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"17416:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17404:3:14"},"nodeType":"YulFunctionCall","src":"17404:14:14"},{"hexValue":"526563697069656e7449735a65726f41646472657373","kind":"string","nodeType":"YulLiteral","src":"17420:24:14","type":"","value":"RecipientIsZeroAddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17397:6:14"},"nodeType":"YulFunctionCall","src":"17397:48:14"},"nodeType":"YulExpressionStatement","src":"17397:48:14"}]},"name":"store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17378:6:14","type":""}],"src":"17280:172:14"},{"body":{"nodeType":"YulBlock","src":"17604:220:14","statements":[{"nodeType":"YulAssignment","src":"17614:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17680:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17685:2:14","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17621:58:14"},"nodeType":"YulFunctionCall","src":"17621:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17614:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17786:3:14"}],"functionName":{"name":"store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07","nodeType":"YulIdentifier","src":"17697:88:14"},"nodeType":"YulFunctionCall","src":"17697:93:14"},"nodeType":"YulExpressionStatement","src":"17697:93:14"},{"nodeType":"YulAssignment","src":"17799:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17810:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17815:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17806:3:14"},"nodeType":"YulFunctionCall","src":"17806:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17799:3:14"}]}]},"name":"abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17592:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17600:3:14","type":""}],"src":"17458:366:14"},{"body":{"nodeType":"YulBlock","src":"18001:248:14","statements":[{"nodeType":"YulAssignment","src":"18011:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18023:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18034:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18019:3:14"},"nodeType":"YulFunctionCall","src":"18019:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18011:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18058:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18069:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18054:3:14"},"nodeType":"YulFunctionCall","src":"18054:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18077:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"18083:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18073:3:14"},"nodeType":"YulFunctionCall","src":"18073:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18047:6:14"},"nodeType":"YulFunctionCall","src":"18047:47:14"},"nodeType":"YulExpressionStatement","src":"18047:47:14"},{"nodeType":"YulAssignment","src":"18103:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18237:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18111:124:14"},"nodeType":"YulFunctionCall","src":"18111:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18103:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17981:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17996:4:14","type":""}],"src":"17830:419:14"},{"body":{"nodeType":"YulBlock","src":"18361:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18383:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18391:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18379:3:14"},"nodeType":"YulFunctionCall","src":"18379:14:14"},{"hexValue":"53656e646572466565526563697069656e7449735a65726f41646472657373","kind":"string","nodeType":"YulLiteral","src":"18395:33:14","type":"","value":"SenderFeeRecipientIsZeroAddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18372:6:14"},"nodeType":"YulFunctionCall","src":"18372:57:14"},"nodeType":"YulExpressionStatement","src":"18372:57:14"}]},"name":"store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18353:6:14","type":""}],"src":"18255:181:14"},{"body":{"nodeType":"YulBlock","src":"18588:220:14","statements":[{"nodeType":"YulAssignment","src":"18598:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18664:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18669:2:14","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18605:58:14"},"nodeType":"YulFunctionCall","src":"18605:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18598:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18770:3:14"}],"functionName":{"name":"store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61","nodeType":"YulIdentifier","src":"18681:88:14"},"nodeType":"YulFunctionCall","src":"18681:93:14"},"nodeType":"YulExpressionStatement","src":"18681:93:14"},{"nodeType":"YulAssignment","src":"18783:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18794:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18799:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18790:3:14"},"nodeType":"YulFunctionCall","src":"18790:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18783:3:14"}]}]},"name":"abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18576:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18584:3:14","type":""}],"src":"18442:366:14"},{"body":{"nodeType":"YulBlock","src":"18985:248:14","statements":[{"nodeType":"YulAssignment","src":"18995:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19007:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19018:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19003:3:14"},"nodeType":"YulFunctionCall","src":"19003:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18995:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19042:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19053:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19038:3:14"},"nodeType":"YulFunctionCall","src":"19038:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19061:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"19067:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19057:3:14"},"nodeType":"YulFunctionCall","src":"19057:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19031:6:14"},"nodeType":"YulFunctionCall","src":"19031:47:14"},"nodeType":"YulExpressionStatement","src":"19031:47:14"},{"nodeType":"YulAssignment","src":"19087:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19221:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19095:124:14"},"nodeType":"YulFunctionCall","src":"19095:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19087:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18965:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18980:4:14","type":""}],"src":"18814:419:14"},{"body":{"nodeType":"YulBlock","src":"19365:206:14","statements":[{"nodeType":"YulAssignment","src":"19375:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19387:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19398:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19383:3:14"},"nodeType":"YulFunctionCall","src":"19383:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19375:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19455:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19468:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19479:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19464:3:14"},"nodeType":"YulFunctionCall","src":"19464:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19411:43:14"},"nodeType":"YulFunctionCall","src":"19411:71:14"},"nodeType":"YulExpressionStatement","src":"19411:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19536:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19549:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19560:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19545:3:14"},"nodeType":"YulFunctionCall","src":"19545:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19492:43:14"},"nodeType":"YulFunctionCall","src":"19492:72:14"},"nodeType":"YulExpressionStatement","src":"19492:72:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19329:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19341:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19349:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19360:4:14","type":""}],"src":"19239:332:14"},{"body":{"nodeType":"YulBlock","src":"19617:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"19671:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19680:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19683:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19673:6:14"},"nodeType":"YulFunctionCall","src":"19673:12:14"},"nodeType":"YulExpressionStatement","src":"19673:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19640:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19662:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"19647:14:14"},"nodeType":"YulFunctionCall","src":"19647:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19637:2:14"},"nodeType":"YulFunctionCall","src":"19637:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19630:6:14"},"nodeType":"YulFunctionCall","src":"19630:40:14"},"nodeType":"YulIf","src":"19627:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19610:5:14","type":""}],"src":"19577:116:14"},{"body":{"nodeType":"YulBlock","src":"19759:77:14","statements":[{"nodeType":"YulAssignment","src":"19769:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19784:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19778:5:14"},"nodeType":"YulFunctionCall","src":"19778:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19769:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19824:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"19800:23:14"},"nodeType":"YulFunctionCall","src":"19800:30:14"},"nodeType":"YulExpressionStatement","src":"19800:30:14"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19737:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"19745:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19753:5:14","type":""}],"src":"19699:137:14"},{"body":{"nodeType":"YulBlock","src":"19916:271:14","statements":[{"body":{"nodeType":"YulBlock","src":"19962:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19964:77:14"},"nodeType":"YulFunctionCall","src":"19964:79:14"},"nodeType":"YulExpressionStatement","src":"19964:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19937:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"19946:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19933:3:14"},"nodeType":"YulFunctionCall","src":"19933:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"19958:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19929:3:14"},"nodeType":"YulFunctionCall","src":"19929:32:14"},"nodeType":"YulIf","src":"19926:119:14"},{"nodeType":"YulBlock","src":"20055:125:14","statements":[{"nodeType":"YulVariableDeclaration","src":"20070:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"20084:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20074:6:14","type":""}]},{"nodeType":"YulAssignment","src":"20099:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20142:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"20153:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20138:3:14"},"nodeType":"YulFunctionCall","src":"20138:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20162:7:14"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"20109:28:14"},"nodeType":"YulFunctionCall","src":"20109:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20099:6:14"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19886:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19897:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19909:6:14","type":""}],"src":"19842:345:14"},{"body":{"nodeType":"YulBlock","src":"20221:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20238:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20241:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20231:6:14"},"nodeType":"YulFunctionCall","src":"20231:88:14"},"nodeType":"YulExpressionStatement","src":"20231:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20335:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20338:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20328:6:14"},"nodeType":"YulFunctionCall","src":"20328:15:14"},"nodeType":"YulExpressionStatement","src":"20328:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20359:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20362:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20352:6:14"},"nodeType":"YulFunctionCall","src":"20352:15:14"},"nodeType":"YulExpressionStatement","src":"20352:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20193:180:14"},{"body":{"nodeType":"YulBlock","src":"20427:362:14","statements":[{"nodeType":"YulAssignment","src":"20437:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20460:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20442:17:14"},"nodeType":"YulFunctionCall","src":"20442:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20437:1:14"}]},{"nodeType":"YulAssignment","src":"20471:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20494:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20476:17:14"},"nodeType":"YulFunctionCall","src":"20476:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20471:1:14"}]},{"nodeType":"YulVariableDeclaration","src":"20505:28:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20528:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"20531:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20524:3:14"},"nodeType":"YulFunctionCall","src":"20524:9:14"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"20509:11:14","type":""}]},{"nodeType":"YulAssignment","src":"20542:41:14","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"20571:11:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20553:17:14"},"nodeType":"YulFunctionCall","src":"20553:30:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"20542:7:14"}]},{"body":{"nodeType":"YulBlock","src":"20760:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20762:16:14"},"nodeType":"YulFunctionCall","src":"20762:18:14"},"nodeType":"YulExpressionStatement","src":"20762:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20693:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20686:6:14"},"nodeType":"YulFunctionCall","src":"20686:9:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20716:1:14"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"20723:7:14"},{"name":"x","nodeType":"YulIdentifier","src":"20732:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20719:3:14"},"nodeType":"YulFunctionCall","src":"20719:15:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20713:2:14"},"nodeType":"YulFunctionCall","src":"20713:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20666:2:14"},"nodeType":"YulFunctionCall","src":"20666:83:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20646:6:14"},"nodeType":"YulFunctionCall","src":"20646:113:14"},"nodeType":"YulIf","src":"20643:139:14"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20410:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"20413:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"20419:7:14","type":""}],"src":"20379:410:14"},{"body":{"nodeType":"YulBlock","src":"20823:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20840:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20843:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20833:6:14"},"nodeType":"YulFunctionCall","src":"20833:88:14"},"nodeType":"YulExpressionStatement","src":"20833:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20937:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20940:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20930:6:14"},"nodeType":"YulFunctionCall","src":"20930:15:14"},"nodeType":"YulExpressionStatement","src":"20930:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20961:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20964:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20954:6:14"},"nodeType":"YulFunctionCall","src":"20954:15:14"},"nodeType":"YulExpressionStatement","src":"20954:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"20795:180:14"},{"body":{"nodeType":"YulBlock","src":"21023:143:14","statements":[{"nodeType":"YulAssignment","src":"21033:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21056:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21038:17:14"},"nodeType":"YulFunctionCall","src":"21038:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21033:1:14"}]},{"nodeType":"YulAssignment","src":"21067:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21090:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21072:17:14"},"nodeType":"YulFunctionCall","src":"21072:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21067:1:14"}]},{"body":{"nodeType":"YulBlock","src":"21114:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"21116:16:14"},"nodeType":"YulFunctionCall","src":"21116:18:14"},"nodeType":"YulExpressionStatement","src":"21116:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21111:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21104:6:14"},"nodeType":"YulFunctionCall","src":"21104:9:14"},"nodeType":"YulIf","src":"21101:35:14"},{"nodeType":"YulAssignment","src":"21146:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21155:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"21158:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21151:3:14"},"nodeType":"YulFunctionCall","src":"21151:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"21146:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21012:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"21015:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"21021:1:14","type":""}],"src":"20981:185:14"},{"body":{"nodeType":"YulBlock","src":"21217:149:14","statements":[{"nodeType":"YulAssignment","src":"21227:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21250:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21232:17:14"},"nodeType":"YulFunctionCall","src":"21232:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21227:1:14"}]},{"nodeType":"YulAssignment","src":"21261:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21284:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21266:17:14"},"nodeType":"YulFunctionCall","src":"21266:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21261:1:14"}]},{"nodeType":"YulAssignment","src":"21295:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21307:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"21310:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21303:3:14"},"nodeType":"YulFunctionCall","src":"21303:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21295:4:14"}]},{"body":{"nodeType":"YulBlock","src":"21337:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21339:16:14"},"nodeType":"YulFunctionCall","src":"21339:18:14"},"nodeType":"YulExpressionStatement","src":"21339:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"21328:4:14"},{"name":"x","nodeType":"YulIdentifier","src":"21334:1:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21325:2:14"},"nodeType":"YulFunctionCall","src":"21325:11:14"},"nodeType":"YulIf","src":"21322:37:14"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21203:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"21206:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21212:4:14","type":""}],"src":"21172:194:14"},{"body":{"nodeType":"YulBlock","src":"21435:52:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21452:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21474:5:14"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"21457:16:14"},"nodeType":"YulFunctionCall","src":"21457:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21445:6:14"},"nodeType":"YulFunctionCall","src":"21445:36:14"},"nodeType":"YulExpressionStatement","src":"21445:36:14"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21423:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21430:3:14","type":""}],"src":"21372:115:14"},{"body":{"nodeType":"YulBlock","src":"21557:82:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"21580:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"21585:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"21590:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"21567:12:14"},"nodeType":"YulFunctionCall","src":"21567:30:14"},"nodeType":"YulExpressionStatement","src":"21567:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"21617:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"21622:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21613:3:14"},"nodeType":"YulFunctionCall","src":"21613:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"21631:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21606:6:14"},"nodeType":"YulFunctionCall","src":"21606:27:14"},"nodeType":"YulExpressionStatement","src":"21606:27:14"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"21539:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"21544:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"21549:6:14","type":""}],"src":"21493:146:14"},{"body":{"nodeType":"YulBlock","src":"21693:54:14","statements":[{"nodeType":"YulAssignment","src":"21703:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21721:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"21728:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21717:3:14"},"nodeType":"YulFunctionCall","src":"21717:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21737:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21733:3:14"},"nodeType":"YulFunctionCall","src":"21733:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21713:3:14"},"nodeType":"YulFunctionCall","src":"21713:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21703:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21676:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21686:6:14","type":""}],"src":"21645:102:14"},{"body":{"nodeType":"YulBlock","src":"21879:215:14","statements":[{"nodeType":"YulAssignment","src":"21889:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21955:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"21960:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21896:58:14"},"nodeType":"YulFunctionCall","src":"21896:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21889:3:14"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"22014:5:14"},{"name":"pos","nodeType":"YulIdentifier","src":"22021:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"22026:6:14"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21977:36:14"},"nodeType":"YulFunctionCall","src":"21977:56:14"},"nodeType":"YulExpressionStatement","src":"21977:56:14"},{"nodeType":"YulAssignment","src":"22042:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22053:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22080:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22058:21:14"},"nodeType":"YulFunctionCall","src":"22058:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22049:3:14"},"nodeType":"YulFunctionCall","src":"22049:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22042:3:14"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"21852:5:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"21859:6:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21867:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21875:3:14","type":""}],"src":"21777:317:14"},{"body":{"nodeType":"YulBlock","src":"22338:533:14","statements":[{"nodeType":"YulAssignment","src":"22348:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22360:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22371:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22356:3:14"},"nodeType":"YulFunctionCall","src":"22356:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22348:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22429:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22442:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22453:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22438:3:14"},"nodeType":"YulFunctionCall","src":"22438:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22385:43:14"},"nodeType":"YulFunctionCall","src":"22385:71:14"},"nodeType":"YulExpressionStatement","src":"22385:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22510:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22523:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22534:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22519:3:14"},"nodeType":"YulFunctionCall","src":"22519:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22466:43:14"},"nodeType":"YulFunctionCall","src":"22466:72:14"},"nodeType":"YulExpressionStatement","src":"22466:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22592:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22605:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22616:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22601:3:14"},"nodeType":"YulFunctionCall","src":"22601:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22548:43:14"},"nodeType":"YulFunctionCall","src":"22548:72:14"},"nodeType":"YulExpressionStatement","src":"22548:72:14"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22672:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22696:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22681:3:14"},"nodeType":"YulFunctionCall","src":"22681:18:14"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"22630:41:14"},"nodeType":"YulFunctionCall","src":"22630:70:14"},"nodeType":"YulExpressionStatement","src":"22630:70:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22721:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22732:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22717:3:14"},"nodeType":"YulFunctionCall","src":"22717:19:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22742:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"22748:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22738:3:14"},"nodeType":"YulFunctionCall","src":"22738:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22710:6:14"},"nodeType":"YulFunctionCall","src":"22710:49:14"},"nodeType":"YulExpressionStatement","src":"22710:49:14"},{"nodeType":"YulAssignment","src":"22768:96:14","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22842:6:14"},{"name":"value5","nodeType":"YulIdentifier","src":"22850:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"22859:4:14"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22776:65:14"},"nodeType":"YulFunctionCall","src":"22776:88:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22768:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_string_calldata_ptr__to_t_address_t_address_t_address_t_uint96_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22270:9:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22282:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22290:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22298:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22306:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22314:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22322:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22333:4:14","type":""}],"src":"22100:771:14"},{"body":{"nodeType":"YulBlock","src":"22983:65:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23005:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23013:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23001:3:14"},"nodeType":"YulFunctionCall","src":"23001:14:14"},{"hexValue":"476174657761793a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"23017:23:14","type":"","value":"Gateway: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22994:6:14"},"nodeType":"YulFunctionCall","src":"22994:47:14"},"nodeType":"YulExpressionStatement","src":"22994:47:14"}]},"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22975:6:14","type":""}],"src":"22877:171:14"},{"body":{"nodeType":"YulBlock","src":"23200:220:14","statements":[{"nodeType":"YulAssignment","src":"23210:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23276:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23281:2:14","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23217:58:14"},"nodeType":"YulFunctionCall","src":"23217:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23210:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23382:3:14"}],"functionName":{"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulIdentifier","src":"23293:88:14"},"nodeType":"YulFunctionCall","src":"23293:93:14"},"nodeType":"YulExpressionStatement","src":"23293:93:14"},{"nodeType":"YulAssignment","src":"23395:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23406:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23411:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23402:3:14"},"nodeType":"YulFunctionCall","src":"23402:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23395:3:14"}]}]},"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23188:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23196:3:14","type":""}],"src":"23054:366:14"},{"body":{"nodeType":"YulBlock","src":"23597:248:14","statements":[{"nodeType":"YulAssignment","src":"23607:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23619:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23630:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23615:3:14"},"nodeType":"YulFunctionCall","src":"23615:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23607:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23654:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23665:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23650:3:14"},"nodeType":"YulFunctionCall","src":"23650:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23673:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"23679:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23669:3:14"},"nodeType":"YulFunctionCall","src":"23669:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23643:6:14"},"nodeType":"YulFunctionCall","src":"23643:47:14"},"nodeType":"YulExpressionStatement","src":"23643:47:14"},{"nodeType":"YulAssignment","src":"23699:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23833:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23707:124:14"},"nodeType":"YulFunctionCall","src":"23707:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23699:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23577:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23592:4:14","type":""}],"src":"23426:419:14"},{"body":{"nodeType":"YulBlock","src":"23957:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23979:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23987:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23975:3:14"},"nodeType":"YulFunctionCall","src":"23975:14:14"},{"hexValue":"476174657761793a207472656173757279206164647265737320616c72656164","kind":"string","nodeType":"YulLiteral","src":"23991:34:14","type":"","value":"Gateway: treasury address alread"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23968:6:14"},"nodeType":"YulFunctionCall","src":"23968:58:14"},"nodeType":"YulExpressionStatement","src":"23968:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24047:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"24055:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24043:3:14"},"nodeType":"YulFunctionCall","src":"24043:15:14"},{"hexValue":"7920736574","kind":"string","nodeType":"YulLiteral","src":"24060:7:14","type":"","value":"y set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24036:6:14"},"nodeType":"YulFunctionCall","src":"24036:32:14"},"nodeType":"YulExpressionStatement","src":"24036:32:14"}]},"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23949:6:14","type":""}],"src":"23851:224:14"},{"body":{"nodeType":"YulBlock","src":"24227:220:14","statements":[{"nodeType":"YulAssignment","src":"24237:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24303:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"24308:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24244:58:14"},"nodeType":"YulFunctionCall","src":"24244:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24237:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24409:3:14"}],"functionName":{"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulIdentifier","src":"24320:88:14"},"nodeType":"YulFunctionCall","src":"24320:93:14"},"nodeType":"YulExpressionStatement","src":"24320:93:14"},{"nodeType":"YulAssignment","src":"24422:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24433:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"24438:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24429:3:14"},"nodeType":"YulFunctionCall","src":"24429:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24422:3:14"}]}]},"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24215:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24223:3:14","type":""}],"src":"24081:366:14"},{"body":{"nodeType":"YulBlock","src":"24624:248:14","statements":[{"nodeType":"YulAssignment","src":"24634:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24646:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24657:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24642:3:14"},"nodeType":"YulFunctionCall","src":"24642:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24634:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24681:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24692:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24677:3:14"},"nodeType":"YulFunctionCall","src":"24677:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24700:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"24706:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24696:3:14"},"nodeType":"YulFunctionCall","src":"24696:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24670:6:14"},"nodeType":"YulFunctionCall","src":"24670:47:14"},"nodeType":"YulExpressionStatement","src":"24670:47:14"},{"nodeType":"YulAssignment","src":"24726:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24860:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24734:124:14"},"nodeType":"YulFunctionCall","src":"24734:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24726:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24604:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24619:4:14","type":""}],"src":"24453:419:14"},{"body":{"nodeType":"YulBlock","src":"24984:120:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25006:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25014:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25002:3:14"},"nodeType":"YulFunctionCall","src":"25002:14:14"},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c7265","kind":"string","nodeType":"YulLiteral","src":"25018:34:14","type":"","value":"Gateway: aggregator address alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24995:6:14"},"nodeType":"YulFunctionCall","src":"24995:58:14"},"nodeType":"YulExpressionStatement","src":"24995:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25074:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25082:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25070:3:14"},"nodeType":"YulFunctionCall","src":"25070:15:14"},{"hexValue":"61647920736574","kind":"string","nodeType":"YulLiteral","src":"25087:9:14","type":"","value":"ady set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25063:6:14"},"nodeType":"YulFunctionCall","src":"25063:34:14"},"nodeType":"YulExpressionStatement","src":"25063:34:14"}]},"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24976:6:14","type":""}],"src":"24878:226:14"},{"body":{"nodeType":"YulBlock","src":"25256:220:14","statements":[{"nodeType":"YulAssignment","src":"25266:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25332:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"25337:2:14","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25273:58:14"},"nodeType":"YulFunctionCall","src":"25273:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25266:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25438:3:14"}],"functionName":{"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulIdentifier","src":"25349:88:14"},"nodeType":"YulFunctionCall","src":"25349:93:14"},"nodeType":"YulExpressionStatement","src":"25349:93:14"},{"nodeType":"YulAssignment","src":"25451:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25462:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"25467:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25458:3:14"},"nodeType":"YulFunctionCall","src":"25458:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25451:3:14"}]}]},"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25244:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25252:3:14","type":""}],"src":"25110:366:14"},{"body":{"nodeType":"YulBlock","src":"25653:248:14","statements":[{"nodeType":"YulAssignment","src":"25663:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25675:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25686:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25671:3:14"},"nodeType":"YulFunctionCall","src":"25671:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25663:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25710:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25721:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25706:3:14"},"nodeType":"YulFunctionCall","src":"25706:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25729:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"25735:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25725:3:14"},"nodeType":"YulFunctionCall","src":"25725:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25699:6:14"},"nodeType":"YulFunctionCall","src":"25699:47:14"},"nodeType":"YulExpressionStatement","src":"25699:47:14"},{"nodeType":"YulAssignment","src":"25755:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25889:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25763:124:14"},"nodeType":"YulFunctionCall","src":"25763:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25755:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25633:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25648:4:14","type":""}],"src":"25482:419:14"},{"body":{"nodeType":"YulBlock","src":"26003:122:14","statements":[{"nodeType":"YulAssignment","src":"26013:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26025:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26036:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26021:3:14"},"nodeType":"YulFunctionCall","src":"26021:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26013:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26091:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26104:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26115:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26100:3:14"},"nodeType":"YulFunctionCall","src":"26100:17:14"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"26049:41:14"},"nodeType":"YulFunctionCall","src":"26049:69:14"},"nodeType":"YulExpressionStatement","src":"26049:69:14"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25975:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25987:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25998:4:14","type":""}],"src":"25907:218:14"},{"body":{"nodeType":"YulBlock","src":"26237:58:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26259:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26267:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26255:3:14"},"nodeType":"YulFunctionCall","src":"26255:14:14"},{"hexValue":"4f7264657246756c66696c6c6564","kind":"string","nodeType":"YulLiteral","src":"26271:16:14","type":"","value":"OrderFulfilled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26248:6:14"},"nodeType":"YulFunctionCall","src":"26248:40:14"},"nodeType":"YulExpressionStatement","src":"26248:40:14"}]},"name":"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26229:6:14","type":""}],"src":"26131:164:14"},{"body":{"nodeType":"YulBlock","src":"26447:220:14","statements":[{"nodeType":"YulAssignment","src":"26457:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26523:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"26528:2:14","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26464:58:14"},"nodeType":"YulFunctionCall","src":"26464:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26457:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26629:3:14"}],"functionName":{"name":"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","nodeType":"YulIdentifier","src":"26540:88:14"},"nodeType":"YulFunctionCall","src":"26540:93:14"},"nodeType":"YulExpressionStatement","src":"26540:93:14"},{"nodeType":"YulAssignment","src":"26642:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26653:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"26658:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26649:3:14"},"nodeType":"YulFunctionCall","src":"26649:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26642:3:14"}]}]},"name":"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26435:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26443:3:14","type":""}],"src":"26301:366:14"},{"body":{"nodeType":"YulBlock","src":"26844:248:14","statements":[{"nodeType":"YulAssignment","src":"26854:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26866:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26877:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26862:3:14"},"nodeType":"YulFunctionCall","src":"26862:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26854:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26901:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26912:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26897:3:14"},"nodeType":"YulFunctionCall","src":"26897:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26920:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"26926:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26916:3:14"},"nodeType":"YulFunctionCall","src":"26916:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26890:6:14"},"nodeType":"YulFunctionCall","src":"26890:47:14"},"nodeType":"YulExpressionStatement","src":"26890:47:14"},{"nodeType":"YulAssignment","src":"26946:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27080:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26954:124:14"},"nodeType":"YulFunctionCall","src":"26954:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26946:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26824:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26839:4:14","type":""}],"src":"26673:419:14"},{"body":{"nodeType":"YulBlock","src":"27204:57:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27226:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27234:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27222:3:14"},"nodeType":"YulFunctionCall","src":"27222:14:14"},{"hexValue":"4f72646572526566756e646564","kind":"string","nodeType":"YulLiteral","src":"27238:15:14","type":"","value":"OrderRefunded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27215:6:14"},"nodeType":"YulFunctionCall","src":"27215:39:14"},"nodeType":"YulExpressionStatement","src":"27215:39:14"}]},"name":"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27196:6:14","type":""}],"src":"27098:163:14"},{"body":{"nodeType":"YulBlock","src":"27413:220:14","statements":[{"nodeType":"YulAssignment","src":"27423:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27489:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"27494:2:14","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27430:58:14"},"nodeType":"YulFunctionCall","src":"27430:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27423:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27595:3:14"}],"functionName":{"name":"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","nodeType":"YulIdentifier","src":"27506:88:14"},"nodeType":"YulFunctionCall","src":"27506:93:14"},"nodeType":"YulExpressionStatement","src":"27506:93:14"},{"nodeType":"YulAssignment","src":"27608:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27619:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"27624:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27615:3:14"},"nodeType":"YulFunctionCall","src":"27615:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27608:3:14"}]}]},"name":"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27401:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27409:3:14","type":""}],"src":"27267:366:14"},{"body":{"nodeType":"YulBlock","src":"27810:248:14","statements":[{"nodeType":"YulAssignment","src":"27820:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27832:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27843:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27828:3:14"},"nodeType":"YulFunctionCall","src":"27828:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27820:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27867:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27878:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27863:3:14"},"nodeType":"YulFunctionCall","src":"27863:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27886:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"27892:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27882:3:14"},"nodeType":"YulFunctionCall","src":"27882:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27856:6:14"},"nodeType":"YulFunctionCall","src":"27856:47:14"},"nodeType":"YulExpressionStatement","src":"27856:47:14"},{"nodeType":"YulAssignment","src":"27912:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28046:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27920:124:14"},"nodeType":"YulFunctionCall","src":"27920:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27912:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27790:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27805:4:14","type":""}],"src":"27639:419:14"},{"body":{"nodeType":"YulBlock","src":"28170:65:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28192:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28200:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28188:3:14"},"nodeType":"YulFunctionCall","src":"28188:14:14"},{"hexValue":"4665654578636565647350726f746f636f6c466565","kind":"string","nodeType":"YulLiteral","src":"28204:23:14","type":"","value":"FeeExceedsProtocolFee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28181:6:14"},"nodeType":"YulFunctionCall","src":"28181:47:14"},"nodeType":"YulExpressionStatement","src":"28181:47:14"}]},"name":"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28162:6:14","type":""}],"src":"28064:171:14"},{"body":{"nodeType":"YulBlock","src":"28387:220:14","statements":[{"nodeType":"YulAssignment","src":"28397:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28463:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"28468:2:14","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28404:58:14"},"nodeType":"YulFunctionCall","src":"28404:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28397:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28569:3:14"}],"functionName":{"name":"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","nodeType":"YulIdentifier","src":"28480:88:14"},"nodeType":"YulFunctionCall","src":"28480:93:14"},"nodeType":"YulExpressionStatement","src":"28480:93:14"},{"nodeType":"YulAssignment","src":"28582:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28593:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"28598:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28589:3:14"},"nodeType":"YulFunctionCall","src":"28589:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28582:3:14"}]}]},"name":"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28375:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28383:3:14","type":""}],"src":"28241:366:14"},{"body":{"nodeType":"YulBlock","src":"28784:248:14","statements":[{"nodeType":"YulAssignment","src":"28794:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28806:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28817:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28802:3:14"},"nodeType":"YulFunctionCall","src":"28802:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28794:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28841:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28852:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28837:3:14"},"nodeType":"YulFunctionCall","src":"28837:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28860:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"28866:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28856:3:14"},"nodeType":"YulFunctionCall","src":"28856:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28830:6:14"},"nodeType":"YulFunctionCall","src":"28830:47:14"},"nodeType":"YulExpressionStatement","src":"28830:47:14"},{"nodeType":"YulAssignment","src":"28886:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29020:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28894:124:14"},"nodeType":"YulFunctionCall","src":"28894:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28886:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28764:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28779:4:14","type":""}],"src":"28613:419:14"},{"body":{"nodeType":"YulBlock","src":"29082:147:14","statements":[{"nodeType":"YulAssignment","src":"29092:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29115:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29097:17:14"},"nodeType":"YulFunctionCall","src":"29097:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29092:1:14"}]},{"nodeType":"YulAssignment","src":"29126:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29149:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29131:17:14"},"nodeType":"YulFunctionCall","src":"29131:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29126:1:14"}]},{"nodeType":"YulAssignment","src":"29160:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29171:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"29174:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29167:3:14"},"nodeType":"YulFunctionCall","src":"29167:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"29160:3:14"}]},{"body":{"nodeType":"YulBlock","src":"29200:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29202:16:14"},"nodeType":"YulFunctionCall","src":"29202:18:14"},"nodeType":"YulExpressionStatement","src":"29202:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29192:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"29195:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29189:2:14"},"nodeType":"YulFunctionCall","src":"29189:10:14"},"nodeType":"YulIf","src":"29186:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29069:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"29072:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"29078:3:14","type":""}],"src":"29038:191:14"},{"body":{"nodeType":"YulBlock","src":"29333:124:14","statements":[{"nodeType":"YulAssignment","src":"29343:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29355:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29366:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29351:3:14"},"nodeType":"YulFunctionCall","src":"29351:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29343:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29423:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29436:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29447:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29432:3:14"},"nodeType":"YulFunctionCall","src":"29432:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29379:43:14"},"nodeType":"YulFunctionCall","src":"29379:71:14"},"nodeType":"YulExpressionStatement","src":"29379:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29305:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29317:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29328:4:14","type":""}],"src":"29235:222:14"},{"body":{"nodeType":"YulBlock","src":"29569:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29591:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29599:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29587:3:14"},"nodeType":"YulFunctionCall","src":"29587:14:14"},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"29603:34:14","type":"","value":"Ownable2Step: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29580:6:14"},"nodeType":"YulFunctionCall","src":"29580:58:14"},"nodeType":"YulExpressionStatement","src":"29580:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29659:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29667:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29655:3:14"},"nodeType":"YulFunctionCall","src":"29655:15:14"},{"hexValue":"6e6577206f776e6572","kind":"string","nodeType":"YulLiteral","src":"29672:11:14","type":"","value":"new owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29648:6:14"},"nodeType":"YulFunctionCall","src":"29648:36:14"},"nodeType":"YulExpressionStatement","src":"29648:36:14"}]},"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29561:6:14","type":""}],"src":"29463:228:14"},{"body":{"nodeType":"YulBlock","src":"29843:220:14","statements":[{"nodeType":"YulAssignment","src":"29853:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29919:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"29924:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29860:58:14"},"nodeType":"YulFunctionCall","src":"29860:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29853:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30025:3:14"}],"functionName":{"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulIdentifier","src":"29936:88:14"},"nodeType":"YulFunctionCall","src":"29936:93:14"},"nodeType":"YulExpressionStatement","src":"29936:93:14"},{"nodeType":"YulAssignment","src":"30038:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30049:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"30054:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30045:3:14"},"nodeType":"YulFunctionCall","src":"30045:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30038:3:14"}]}]},"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29831:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29839:3:14","type":""}],"src":"29697:366:14"},{"body":{"nodeType":"YulBlock","src":"30240:248:14","statements":[{"nodeType":"YulAssignment","src":"30250:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30262:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30273:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30258:3:14"},"nodeType":"YulFunctionCall","src":"30258:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30250:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30297:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30308:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30293:3:14"},"nodeType":"YulFunctionCall","src":"30293:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30316:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"30322:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30312:3:14"},"nodeType":"YulFunctionCall","src":"30312:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30286:6:14"},"nodeType":"YulFunctionCall","src":"30286:47:14"},"nodeType":"YulExpressionStatement","src":"30286:47:14"},{"nodeType":"YulAssignment","src":"30342:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30476:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30350:124:14"},"nodeType":"YulFunctionCall","src":"30350:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30342:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30220:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30235:4:14","type":""}],"src":"30069:419:14"},{"body":{"nodeType":"YulBlock","src":"30600:62:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30622:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30630:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30618:3:14"},"nodeType":"YulFunctionCall","src":"30618:14:14"},{"hexValue":"496e76616c69644d65737361676548617368","kind":"string","nodeType":"YulLiteral","src":"30634:20:14","type":"","value":"InvalidMessageHash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30611:6:14"},"nodeType":"YulFunctionCall","src":"30611:44:14"},"nodeType":"YulExpressionStatement","src":"30611:44:14"}]},"name":"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30592:6:14","type":""}],"src":"30494:168:14"},{"body":{"nodeType":"YulBlock","src":"30814:220:14","statements":[{"nodeType":"YulAssignment","src":"30824:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30890:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"30895:2:14","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30831:58:14"},"nodeType":"YulFunctionCall","src":"30831:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30824:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30996:3:14"}],"functionName":{"name":"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","nodeType":"YulIdentifier","src":"30907:88:14"},"nodeType":"YulFunctionCall","src":"30907:93:14"},"nodeType":"YulExpressionStatement","src":"30907:93:14"},{"nodeType":"YulAssignment","src":"31009:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31020:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"31025:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31016:3:14"},"nodeType":"YulFunctionCall","src":"31016:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31009:3:14"}]}]},"name":"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30802:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30810:3:14","type":""}],"src":"30668:366:14"},{"body":{"nodeType":"YulBlock","src":"31211:248:14","statements":[{"nodeType":"YulAssignment","src":"31221:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31233:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"31244:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31229:3:14"},"nodeType":"YulFunctionCall","src":"31229:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31221:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31268:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"31279:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31264:3:14"},"nodeType":"YulFunctionCall","src":"31264:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31287:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"31293:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31283:3:14"},"nodeType":"YulFunctionCall","src":"31283:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31257:6:14"},"nodeType":"YulFunctionCall","src":"31257:47:14"},"nodeType":"YulExpressionStatement","src":"31257:47:14"},{"nodeType":"YulAssignment","src":"31313:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31447:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31321:124:14"},"nodeType":"YulFunctionCall","src":"31321:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31313:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31191:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31206:4:14","type":""}],"src":"31040:419:14"},{"body":{"nodeType":"YulBlock","src":"31619:288:14","statements":[{"nodeType":"YulAssignment","src":"31629:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31641:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"31652:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31637:3:14"},"nodeType":"YulFunctionCall","src":"31637:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31629:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31709:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31722:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"31733:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31718:3:14"},"nodeType":"YulFunctionCall","src":"31718:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31665:43:14"},"nodeType":"YulFunctionCall","src":"31665:71:14"},"nodeType":"YulExpressionStatement","src":"31665:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31790:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31803:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"31814:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31799:3:14"},"nodeType":"YulFunctionCall","src":"31799:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31746:43:14"},"nodeType":"YulFunctionCall","src":"31746:72:14"},"nodeType":"YulExpressionStatement","src":"31746:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31872:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31885:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"31896:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31881:3:14"},"nodeType":"YulFunctionCall","src":"31881:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31828:43:14"},"nodeType":"YulFunctionCall","src":"31828:72:14"},"nodeType":"YulExpressionStatement","src":"31828:72:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31575:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31587:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31595:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31603:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31614:4:14","type":""}],"src":"31465:442:14"},{"body":{"nodeType":"YulBlock","src":"31956:190:14","statements":[{"nodeType":"YulAssignment","src":"31966:33:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31993:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31975:17:14"},"nodeType":"YulFunctionCall","src":"31975:24:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31966:5:14"}]},{"body":{"nodeType":"YulBlock","src":"32089:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32091:16:14"},"nodeType":"YulFunctionCall","src":"32091:18:14"},"nodeType":"YulExpressionStatement","src":"32091:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32014:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"32021:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32011:2:14"},"nodeType":"YulFunctionCall","src":"32011:77:14"},"nodeType":"YulIf","src":"32008:103:14"},{"nodeType":"YulAssignment","src":"32120:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32131:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"32138:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32127:3:14"},"nodeType":"YulFunctionCall","src":"32127:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32120:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31942:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31952:3:14","type":""}],"src":"31913:233:14"},{"body":{"nodeType":"YulBlock","src":"32184:28:14","statements":[{"nodeType":"YulAssignment","src":"32194:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"32201:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32194:3:14"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32170:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32180:3:14","type":""}],"src":"32152:60:14"},{"body":{"nodeType":"YulBlock","src":"32277:81:14","statements":[{"nodeType":"YulAssignment","src":"32287:65:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32344:5:14"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"32327:16:14"},"nodeType":"YulFunctionCall","src":"32327:23:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"32318:8:14"},"nodeType":"YulFunctionCall","src":"32318:33:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32300:17:14"},"nodeType":"YulFunctionCall","src":"32300:52:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"32287:9:14"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32257:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"32267:9:14","type":""}],"src":"32218:140:14"},{"body":{"nodeType":"YulBlock","src":"32428:65:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32445:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32480:5:14"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"32450:29:14"},"nodeType":"YulFunctionCall","src":"32450:36:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32438:6:14"},"nodeType":"YulFunctionCall","src":"32438:49:14"},"nodeType":"YulExpressionStatement","src":"32438:49:14"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32416:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32423:3:14","type":""}],"src":"32364:129:14"},{"body":{"nodeType":"YulBlock","src":"32710:451:14","statements":[{"nodeType":"YulAssignment","src":"32720:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32732:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"32743:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32728:3:14"},"nodeType":"YulFunctionCall","src":"32728:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32720:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32801:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32814:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"32825:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32810:3:14"},"nodeType":"YulFunctionCall","src":"32810:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32757:43:14"},"nodeType":"YulFunctionCall","src":"32757:71:14"},"nodeType":"YulExpressionStatement","src":"32757:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32882:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32895:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"32906:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32891:3:14"},"nodeType":"YulFunctionCall","src":"32891:18:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32838:43:14"},"nodeType":"YulFunctionCall","src":"32838:72:14"},"nodeType":"YulExpressionStatement","src":"32838:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32963:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32976:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"32987:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32972:3:14"},"nodeType":"YulFunctionCall","src":"32972:18:14"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32920:42:14"},"nodeType":"YulFunctionCall","src":"32920:71:14"},"nodeType":"YulExpressionStatement","src":"32920:71:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33012:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"33023:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33008:3:14"},"nodeType":"YulFunctionCall","src":"33008:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33032:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"33038:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33028:3:14"},"nodeType":"YulFunctionCall","src":"33028:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33001:6:14"},"nodeType":"YulFunctionCall","src":"33001:48:14"},"nodeType":"YulExpressionStatement","src":"33001:48:14"},{"nodeType":"YulAssignment","src":"33058:96:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33132:6:14"},{"name":"value4","nodeType":"YulIdentifier","src":"33140:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"33149:4:14"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33066:65:14"},"nodeType":"YulFunctionCall","src":"33066:88:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33058:4:14"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32650:9:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"32662:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32670:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32678:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32686:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32694:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32705:4:14","type":""}],"src":"32499:662:14"},{"body":{"nodeType":"YulBlock","src":"33273:127:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33295:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"33303:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33291:3:14"},"nodeType":"YulFunctionCall","src":"33291:14:14"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"33307:34:14","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33284:6:14"},"nodeType":"YulFunctionCall","src":"33284:58:14"},"nodeType":"YulExpressionStatement","src":"33284:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33363:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"33371:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33359:3:14"},"nodeType":"YulFunctionCall","src":"33359:15:14"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"33376:16:14","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33352:6:14"},"nodeType":"YulFunctionCall","src":"33352:41:14"},"nodeType":"YulExpressionStatement","src":"33352:41:14"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33265:6:14","type":""}],"src":"33167:233:14"},{"body":{"nodeType":"YulBlock","src":"33552:220:14","statements":[{"nodeType":"YulAssignment","src":"33562:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33628:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"33633:2:14","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33569:58:14"},"nodeType":"YulFunctionCall","src":"33569:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33562:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33734:3:14"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"33645:88:14"},"nodeType":"YulFunctionCall","src":"33645:93:14"},"nodeType":"YulExpressionStatement","src":"33645:93:14"},{"nodeType":"YulAssignment","src":"33747:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33758:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"33763:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33754:3:14"},"nodeType":"YulFunctionCall","src":"33754:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33747:3:14"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33540:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33548:3:14","type":""}],"src":"33406:366:14"},{"body":{"nodeType":"YulBlock","src":"33949:248:14","statements":[{"nodeType":"YulAssignment","src":"33959:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33971:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"33982:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33967:3:14"},"nodeType":"YulFunctionCall","src":"33967:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33959:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34006:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"34017:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34002:3:14"},"nodeType":"YulFunctionCall","src":"34002:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34025:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"34031:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34021:3:14"},"nodeType":"YulFunctionCall","src":"34021:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33995:6:14"},"nodeType":"YulFunctionCall","src":"33995:47:14"},"nodeType":"YulExpressionStatement","src":"33995:47:14"},{"nodeType":"YulAssignment","src":"34051:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34185:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34059:124:14"},"nodeType":"YulFunctionCall","src":"34059:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34051:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33929:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33944:4:14","type":""}],"src":"33778:419:14"},{"body":{"nodeType":"YulBlock","src":"34256:32:14","statements":[{"nodeType":"YulAssignment","src":"34266:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"34277:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"34266:7:14"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34238:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"34248:7:14","type":""}],"src":"34203:85:14"},{"body":{"nodeType":"YulBlock","src":"34337:43:14","statements":[{"nodeType":"YulAssignment","src":"34347:27:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34362:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"34369:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34358:3:14"},"nodeType":"YulFunctionCall","src":"34358:16:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"34347:7:14"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34319:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"34329:7:14","type":""}],"src":"34294:86:14"},{"body":{"nodeType":"YulBlock","src":"34452:88:14","statements":[{"nodeType":"YulAssignment","src":"34462:72:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34526:5:14"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"34500:25:14"},"nodeType":"YulFunctionCall","src":"34500:32:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"34491:8:14"},"nodeType":"YulFunctionCall","src":"34491:42:14"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"34475:15:14"},"nodeType":"YulFunctionCall","src":"34475:59:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"34462:9:14"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34432:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"34442:9:14","type":""}],"src":"34386:154:14"},{"body":{"nodeType":"YulBlock","src":"34617:72:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34634:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34676:5:14"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"34639:36:14"},"nodeType":"YulFunctionCall","src":"34639:43:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34627:6:14"},"nodeType":"YulFunctionCall","src":"34627:56:14"},"nodeType":"YulExpressionStatement","src":"34627:56:14"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34605:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34612:3:14","type":""}],"src":"34546:143:14"},{"body":{"nodeType":"YulBlock","src":"34799:130:14","statements":[{"nodeType":"YulAssignment","src":"34809:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34821:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"34832:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34817:3:14"},"nodeType":"YulFunctionCall","src":"34817:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34809:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34895:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34908:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"34919:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34904:3:14"},"nodeType":"YulFunctionCall","src":"34904:17:14"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"34845:49:14"},"nodeType":"YulFunctionCall","src":"34845:77:14"},"nodeType":"YulExpressionStatement","src":"34845:77:14"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34771:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34783:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34794:4:14","type":""}],"src":"34695:234:14"},{"body":{"nodeType":"YulBlock","src":"35041:67:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35063:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"35071:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35059:3:14"},"nodeType":"YulFunctionCall","src":"35059:14:14"},{"hexValue":"476174657761793a20696e76616c696420737461747573","kind":"string","nodeType":"YulLiteral","src":"35075:25:14","type":"","value":"Gateway: invalid status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35052:6:14"},"nodeType":"YulFunctionCall","src":"35052:49:14"},"nodeType":"YulExpressionStatement","src":"35052:49:14"}]},"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35033:6:14","type":""}],"src":"34935:173:14"},{"body":{"nodeType":"YulBlock","src":"35260:220:14","statements":[{"nodeType":"YulAssignment","src":"35270:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35336:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"35341:2:14","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35277:58:14"},"nodeType":"YulFunctionCall","src":"35277:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35270:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35442:3:14"}],"functionName":{"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulIdentifier","src":"35353:88:14"},"nodeType":"YulFunctionCall","src":"35353:93:14"},"nodeType":"YulExpressionStatement","src":"35353:93:14"},{"nodeType":"YulAssignment","src":"35455:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35466:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"35471:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35462:3:14"},"nodeType":"YulFunctionCall","src":"35462:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35455:3:14"}]}]},"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35248:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35256:3:14","type":""}],"src":"35114:366:14"},{"body":{"nodeType":"YulBlock","src":"35657:248:14","statements":[{"nodeType":"YulAssignment","src":"35667:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35679:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"35690:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35675:3:14"},"nodeType":"YulFunctionCall","src":"35675:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35667:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35714:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"35725:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35710:3:14"},"nodeType":"YulFunctionCall","src":"35710:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35733:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"35739:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35729:3:14"},"nodeType":"YulFunctionCall","src":"35729:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35703:6:14"},"nodeType":"YulFunctionCall","src":"35703:47:14"},"nodeType":"YulExpressionStatement","src":"35703:47:14"},{"nodeType":"YulAssignment","src":"35759:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35893:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35767:124:14"},"nodeType":"YulFunctionCall","src":"35767:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35759:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35637:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35652:4:14","type":""}],"src":"35486:419:14"},{"body":{"nodeType":"YulBlock","src":"35955:172:14","statements":[{"nodeType":"YulAssignment","src":"35965:24:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35987:1:14"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"35970:16:14"},"nodeType":"YulFunctionCall","src":"35970:19:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35965:1:14"}]},{"nodeType":"YulAssignment","src":"35998:24:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36020:1:14"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"36003:16:14"},"nodeType":"YulFunctionCall","src":"36003:19:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35998:1:14"}]},{"nodeType":"YulAssignment","src":"36031:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36043:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"36046:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36039:3:14"},"nodeType":"YulFunctionCall","src":"36039:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"36031:4:14"}]},{"body":{"nodeType":"YulBlock","src":"36098:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"36100:16:14"},"nodeType":"YulFunctionCall","src":"36100:18:14"},"nodeType":"YulExpressionStatement","src":"36100:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"36064:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"36070:26:14","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36061:2:14"},"nodeType":"YulFunctionCall","src":"36061:36:14"},"nodeType":"YulIf","src":"36058:62:14"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35941:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"35944:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"35950:4:14","type":""}],"src":"35911:216:14"},{"body":{"nodeType":"YulBlock","src":"36191:80:14","statements":[{"nodeType":"YulAssignment","src":"36201:64:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36257:5:14"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"36240:16:14"},"nodeType":"YulFunctionCall","src":"36240:23:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"36231:8:14"},"nodeType":"YulFunctionCall","src":"36231:33:14"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"36214:16:14"},"nodeType":"YulFunctionCall","src":"36214:51:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"36201:9:14"}]}]},"name":"convert_t_uint64_to_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36171:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"36181:9:14","type":""}],"src":"36133:138:14"},{"body":{"nodeType":"YulBlock","src":"36340:64:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36357:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36391:5:14"}],"functionName":{"name":"convert_t_uint64_to_t_uint96","nodeType":"YulIdentifier","src":"36362:28:14"},"nodeType":"YulFunctionCall","src":"36362:35:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36350:6:14"},"nodeType":"YulFunctionCall","src":"36350:48:14"},"nodeType":"YulExpressionStatement","src":"36350:48:14"}]},"name":"abi_encode_t_uint64_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36328:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36335:3:14","type":""}],"src":"36277:127:14"},{"body":{"nodeType":"YulBlock","src":"36534:204:14","statements":[{"nodeType":"YulAssignment","src":"36544:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36556:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"36567:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36552:3:14"},"nodeType":"YulFunctionCall","src":"36552:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36544:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36624:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36637:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"36648:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36633:3:14"},"nodeType":"YulFunctionCall","src":"36633:17:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"36580:43:14"},"nodeType":"YulFunctionCall","src":"36580:71:14"},"nodeType":"YulExpressionStatement","src":"36580:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36703:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36716:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"36727:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36712:3:14"},"nodeType":"YulFunctionCall","src":"36712:18:14"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"36661:41:14"},"nodeType":"YulFunctionCall","src":"36661:70:14"},"nodeType":"YulExpressionStatement","src":"36661:70:14"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36498:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36510:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36518:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36529:4:14","type":""}],"src":"36410:328:14"},{"body":{"nodeType":"YulBlock","src":"36850:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36872:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"36880:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36868:3:14"},"nodeType":"YulFunctionCall","src":"36868:14:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"36884:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36861:6:14"},"nodeType":"YulFunctionCall","src":"36861:58:14"},"nodeType":"YulExpressionStatement","src":"36861:58:14"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36842:6:14","type":""}],"src":"36744:182:14"},{"body":{"nodeType":"YulBlock","src":"37078:220:14","statements":[{"nodeType":"YulAssignment","src":"37088:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37154:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"37159:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37095:58:14"},"nodeType":"YulFunctionCall","src":"37095:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37088:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37260:3:14"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"37171:88:14"},"nodeType":"YulFunctionCall","src":"37171:93:14"},"nodeType":"YulExpressionStatement","src":"37171:93:14"},{"nodeType":"YulAssignment","src":"37273:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37284:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"37289:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37280:3:14"},"nodeType":"YulFunctionCall","src":"37280:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37273:3:14"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37066:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37074:3:14","type":""}],"src":"36932:366:14"},{"body":{"nodeType":"YulBlock","src":"37475:248:14","statements":[{"nodeType":"YulAssignment","src":"37485:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37497:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"37508:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37493:3:14"},"nodeType":"YulFunctionCall","src":"37493:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37485:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37532:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"37543:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37528:3:14"},"nodeType":"YulFunctionCall","src":"37528:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37551:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"37557:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37547:3:14"},"nodeType":"YulFunctionCall","src":"37547:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37521:6:14"},"nodeType":"YulFunctionCall","src":"37521:47:14"},"nodeType":"YulExpressionStatement","src":"37521:47:14"},{"nodeType":"YulAssignment","src":"37577:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37711:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37585:124:14"},"nodeType":"YulFunctionCall","src":"37585:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37577:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37455:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37470:4:14","type":""}],"src":"37304:419:14"},{"body":{"nodeType":"YulBlock","src":"37835:60:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37857:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"37865:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37853:3:14"},"nodeType":"YulFunctionCall","src":"37853:14:14"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"37869:18:14","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37846:6:14"},"nodeType":"YulFunctionCall","src":"37846:42:14"},"nodeType":"YulExpressionStatement","src":"37846:42:14"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37827:6:14","type":""}],"src":"37729:166:14"},{"body":{"nodeType":"YulBlock","src":"38047:220:14","statements":[{"nodeType":"YulAssignment","src":"38057:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38123:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"38128:2:14","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38064:58:14"},"nodeType":"YulFunctionCall","src":"38064:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38057:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38229:3:14"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"38140:88:14"},"nodeType":"YulFunctionCall","src":"38140:93:14"},"nodeType":"YulExpressionStatement","src":"38140:93:14"},{"nodeType":"YulAssignment","src":"38242:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38253:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"38258:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38249:3:14"},"nodeType":"YulFunctionCall","src":"38249:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38242:3:14"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38035:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38043:3:14","type":""}],"src":"37901:366:14"},{"body":{"nodeType":"YulBlock","src":"38444:248:14","statements":[{"nodeType":"YulAssignment","src":"38454:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38466:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"38477:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38462:3:14"},"nodeType":"YulFunctionCall","src":"38462:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38454:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38501:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"38512:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38497:3:14"},"nodeType":"YulFunctionCall","src":"38497:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38520:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"38526:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38516:3:14"},"nodeType":"YulFunctionCall","src":"38516:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38490:6:14"},"nodeType":"YulFunctionCall","src":"38490:47:14"},"nodeType":"YulExpressionStatement","src":"38490:47:14"},{"nodeType":"YulAssignment","src":"38546:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38680:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38554:124:14"},"nodeType":"YulFunctionCall","src":"38554:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38546:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38424:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38439:4:14","type":""}],"src":"38273:419:14"},{"body":{"nodeType":"YulBlock","src":"38804:61:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38826:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"38834:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38822:3:14"},"nodeType":"YulFunctionCall","src":"38822:14:14"},{"hexValue":"546f6b656e4e6f74537570706f72746564","kind":"string","nodeType":"YulLiteral","src":"38838:19:14","type":"","value":"TokenNotSupported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38815:6:14"},"nodeType":"YulFunctionCall","src":"38815:43:14"},"nodeType":"YulExpressionStatement","src":"38815:43:14"}]},"name":"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38796:6:14","type":""}],"src":"38698:167:14"},{"body":{"nodeType":"YulBlock","src":"39017:220:14","statements":[{"nodeType":"YulAssignment","src":"39027:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39093:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"39098:2:14","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39034:58:14"},"nodeType":"YulFunctionCall","src":"39034:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39027:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39199:3:14"}],"functionName":{"name":"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","nodeType":"YulIdentifier","src":"39110:88:14"},"nodeType":"YulFunctionCall","src":"39110:93:14"},"nodeType":"YulExpressionStatement","src":"39110:93:14"},{"nodeType":"YulAssignment","src":"39212:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39223:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"39228:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39219:3:14"},"nodeType":"YulFunctionCall","src":"39219:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39212:3:14"}]}]},"name":"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39005:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39013:3:14","type":""}],"src":"38871:366:14"},{"body":{"nodeType":"YulBlock","src":"39414:248:14","statements":[{"nodeType":"YulAssignment","src":"39424:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39436:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"39447:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39432:3:14"},"nodeType":"YulFunctionCall","src":"39432:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39424:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39471:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"39482:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39467:3:14"},"nodeType":"YulFunctionCall","src":"39467:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39490:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"39496:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39486:3:14"},"nodeType":"YulFunctionCall","src":"39486:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39460:6:14"},"nodeType":"YulFunctionCall","src":"39460:47:14"},"nodeType":"YulExpressionStatement","src":"39460:47:14"},{"nodeType":"YulAssignment","src":"39516:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39650:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39524:124:14"},"nodeType":"YulFunctionCall","src":"39524:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39516:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39394:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39409:4:14","type":""}],"src":"39243:419:14"},{"body":{"nodeType":"YulBlock","src":"39774:60:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39796:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"39804:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39792:3:14"},"nodeType":"YulFunctionCall","src":"39792:14:14"},{"hexValue":"5468726f775a65726f41646472657373","kind":"string","nodeType":"YulLiteral","src":"39808:18:14","type":"","value":"ThrowZeroAddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39785:6:14"},"nodeType":"YulFunctionCall","src":"39785:42:14"},"nodeType":"YulExpressionStatement","src":"39785:42:14"}]},"name":"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39766:6:14","type":""}],"src":"39668:166:14"},{"body":{"nodeType":"YulBlock","src":"39986:220:14","statements":[{"nodeType":"YulAssignment","src":"39996:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40062:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"40067:2:14","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40003:58:14"},"nodeType":"YulFunctionCall","src":"40003:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39996:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40168:3:14"}],"functionName":{"name":"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","nodeType":"YulIdentifier","src":"40079:88:14"},"nodeType":"YulFunctionCall","src":"40079:93:14"},"nodeType":"YulExpressionStatement","src":"40079:93:14"},{"nodeType":"YulAssignment","src":"40181:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40192:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"40197:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40188:3:14"},"nodeType":"YulFunctionCall","src":"40188:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40181:3:14"}]}]},"name":"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39974:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39982:3:14","type":""}],"src":"39840:366:14"},{"body":{"nodeType":"YulBlock","src":"40383:248:14","statements":[{"nodeType":"YulAssignment","src":"40393:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40405:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"40416:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40401:3:14"},"nodeType":"YulFunctionCall","src":"40401:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40393:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40440:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"40451:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40436:3:14"},"nodeType":"YulFunctionCall","src":"40436:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40459:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"40465:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40455:3:14"},"nodeType":"YulFunctionCall","src":"40455:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40429:6:14"},"nodeType":"YulFunctionCall","src":"40429:47:14"},"nodeType":"YulExpressionStatement","src":"40429:47:14"},{"nodeType":"YulAssignment","src":"40485:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40619:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40493:124:14"},"nodeType":"YulFunctionCall","src":"40493:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40485:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40363:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40378:4:14","type":""}],"src":"40212:419:14"},{"body":{"nodeType":"YulBlock","src":"40743:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40765:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"40773:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40761:3:14"},"nodeType":"YulFunctionCall","src":"40761:14:14"},{"hexValue":"496e76616c696453656e646572466565526563697069656e74","kind":"string","nodeType":"YulLiteral","src":"40777:27:14","type":"","value":"InvalidSenderFeeRecipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40754:6:14"},"nodeType":"YulFunctionCall","src":"40754:51:14"},"nodeType":"YulExpressionStatement","src":"40754:51:14"}]},"name":"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40735:6:14","type":""}],"src":"40637:175:14"},{"body":{"nodeType":"YulBlock","src":"40964:220:14","statements":[{"nodeType":"YulAssignment","src":"40974:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41040:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"41045:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40981:58:14"},"nodeType":"YulFunctionCall","src":"40981:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40974:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41146:3:14"}],"functionName":{"name":"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","nodeType":"YulIdentifier","src":"41057:88:14"},"nodeType":"YulFunctionCall","src":"41057:93:14"},"nodeType":"YulExpressionStatement","src":"41057:93:14"},{"nodeType":"YulAssignment","src":"41159:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41170:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"41175:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41166:3:14"},"nodeType":"YulFunctionCall","src":"41166:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41159:3:14"}]}]},"name":"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40952:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40960:3:14","type":""}],"src":"40818:366:14"},{"body":{"nodeType":"YulBlock","src":"41361:248:14","statements":[{"nodeType":"YulAssignment","src":"41371:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41383:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"41394:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41379:3:14"},"nodeType":"YulFunctionCall","src":"41379:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41371:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41418:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"41429:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41414:3:14"},"nodeType":"YulFunctionCall","src":"41414:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41437:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"41443:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41433:3:14"},"nodeType":"YulFunctionCall","src":"41433:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41407:6:14"},"nodeType":"YulFunctionCall","src":"41407:47:14"},"nodeType":"YulExpressionStatement","src":"41407:47:14"},{"nodeType":"YulAssignment","src":"41463:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41597:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41471:124:14"},"nodeType":"YulFunctionCall","src":"41471:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41463:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41341:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41356:4:14","type":""}],"src":"41190:419:14"},{"body":{"nodeType":"YulBlock","src":"41721:124:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41743:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"41751:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41739:3:14"},"nodeType":"YulFunctionCall","src":"41739:14:14"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"41755:34:14","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41732:6:14"},"nodeType":"YulFunctionCall","src":"41732:58:14"},"nodeType":"YulExpressionStatement","src":"41732:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41811:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"41819:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41807:3:14"},"nodeType":"YulFunctionCall","src":"41807:15:14"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"41824:13:14","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41800:6:14"},"nodeType":"YulFunctionCall","src":"41800:38:14"},"nodeType":"YulExpressionStatement","src":"41800:38:14"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41713:6:14","type":""}],"src":"41615:230:14"},{"body":{"nodeType":"YulBlock","src":"41997:220:14","statements":[{"nodeType":"YulAssignment","src":"42007:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42073:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"42078:2:14","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42014:58:14"},"nodeType":"YulFunctionCall","src":"42014:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42007:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42179:3:14"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"42090:88:14"},"nodeType":"YulFunctionCall","src":"42090:93:14"},"nodeType":"YulExpressionStatement","src":"42090:93:14"},{"nodeType":"YulAssignment","src":"42192:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42203:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"42208:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42199:3:14"},"nodeType":"YulFunctionCall","src":"42199:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42192:3:14"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41985:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41993:3:14","type":""}],"src":"41851:366:14"},{"body":{"nodeType":"YulBlock","src":"42394:248:14","statements":[{"nodeType":"YulAssignment","src":"42404:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42416:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"42427:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42412:3:14"},"nodeType":"YulFunctionCall","src":"42412:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42404:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42451:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"42462:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42447:3:14"},"nodeType":"YulFunctionCall","src":"42447:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42470:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"42476:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42466:3:14"},"nodeType":"YulFunctionCall","src":"42466:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42440:6:14"},"nodeType":"YulFunctionCall","src":"42440:47:14"},"nodeType":"YulExpressionStatement","src":"42440:47:14"},{"nodeType":"YulAssignment","src":"42496:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42630:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42504:124:14"},"nodeType":"YulFunctionCall","src":"42504:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42496:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42374:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42389:4:14","type":""}],"src":"42223:419:14"},{"body":{"nodeType":"YulBlock","src":"42754:64:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42776:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"42784:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42772:3:14"},"nodeType":"YulFunctionCall","src":"42772:14:14"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"42788:22:14","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42765:6:14"},"nodeType":"YulFunctionCall","src":"42765:46:14"},"nodeType":"YulExpressionStatement","src":"42765:46:14"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42746:6:14","type":""}],"src":"42648:170:14"},{"body":{"nodeType":"YulBlock","src":"42970:220:14","statements":[{"nodeType":"YulAssignment","src":"42980:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43046:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"43051:2:14","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42987:58:14"},"nodeType":"YulFunctionCall","src":"42987:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42980:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43152:3:14"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"43063:88:14"},"nodeType":"YulFunctionCall","src":"43063:93:14"},"nodeType":"YulExpressionStatement","src":"43063:93:14"},{"nodeType":"YulAssignment","src":"43165:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43176:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"43181:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43172:3:14"},"nodeType":"YulFunctionCall","src":"43172:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43165:3:14"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42958:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42966:3:14","type":""}],"src":"42824:366:14"},{"body":{"nodeType":"YulBlock","src":"43367:248:14","statements":[{"nodeType":"YulAssignment","src":"43377:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43389:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"43400:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43385:3:14"},"nodeType":"YulFunctionCall","src":"43385:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43377:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43424:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"43435:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43420:3:14"},"nodeType":"YulFunctionCall","src":"43420:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43443:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"43449:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43439:3:14"},"nodeType":"YulFunctionCall","src":"43439:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43413:6:14"},"nodeType":"YulFunctionCall","src":"43413:47:14"},"nodeType":"YulExpressionStatement","src":"43413:47:14"},{"nodeType":"YulAssignment","src":"43469:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43603:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43477:124:14"},"nodeType":"YulFunctionCall","src":"43477:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43469:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43347:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43362:4:14","type":""}],"src":"43196:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256t_addresst_uint256t_addresst_addresst_uint96t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 256))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value8, value9 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint96_to_t_uint96(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    // struct IGateway.Order -> struct IGateway.Order\n    function abi_encode_t_struct$_Order_$2667_memory_ptr_to_t_struct$_Order_$2667_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // senderFeeRecipient\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // senderFee\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // protocolFee\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // isFulfilled\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // isRefunded\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // refundAddress\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // currentBPS\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint96_to_t_uint96(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Order_$2667_memory_ptr__to_t_struct$_Order_$2667_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_struct$_Order_$2667_memory_ptr_to_t_struct$_Order_$2667_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint96t_addresst_uint256t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 192))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnlyAggregator\")\n\n    }\n\n    function abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86(memPtr) {\n\n        mstore(add(memPtr, 0), \"OrderNotFulfilled\")\n\n    }\n\n    function abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_327aebe09e1c1fc814da421110a98581018f2049d4b0a032e4a60d08c40cfa86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"AmountIsZero\")\n\n    }\n\n    function abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07(memPtr) {\n\n        mstore(add(memPtr, 0), \"RecipientIsZeroAddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25ff499bda85eec3eae591e2b4804c74e78fe7b57f0c4fcaa47113ca3106de07_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61(memPtr) {\n\n        mstore(add(memPtr, 0), \"SenderFeeRecipientIsZeroAddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f827733fd5d89fb42500efa11f814d4b93a3644cc55b0e3e7908e9f35be7d61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_string_calldata_ptr__to_t_address_t_address_t_address_t_uint96_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: treasury address alread\")\n\n        mstore(add(memPtr, 32), \"y set\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: aggregator address alre\")\n\n        mstore(add(memPtr, 32), \"ady set\")\n\n    }\n\n    function abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"OrderFulfilled\")\n\n    }\n\n    function abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"OrderRefunded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de(memPtr) {\n\n        mstore(add(memPtr, 0), \"FeeExceedsProtocolFee\")\n\n    }\n\n    function abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"InvalidMessageHash\")\n\n    }\n\n    function abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value3, value4,  tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: invalid status\")\n\n    }\n\n    function abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function convert_t_uint64_to_t_uint96(value) -> converted {\n        converted := cleanup_t_uint96(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenNotSupported\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7(memPtr) {\n\n        mstore(add(memPtr, 0), \"ThrowZeroAddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"InvalidSenderFeeRecipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101215760003560e01c806379ba5097116100ad578063b810c63611610071578063b810c636146102bc578063cd992400146102db578063e30c3978146102f7578063f22ee70414610315578063f2fde38b1461034557610121565b806379ba509714610250578063809804f71461025a5780638129fc1c1461028a5780638456cb59146102945780638da5cb5b1461029e57610121565b80635c975abb116100f45780635c975abb14610198578063715018a6146101b657806371eedb88146101c057806375151b63146101f0578063768c6ec01461022057610121565b80633d3f14f4146101265780633f4ba83a1461015657806340ebc6771461016057806347094e2e1461017c575b600080fd5b610140600480360381019061013b9190612c87565b610361565b60405161014d9190612d8d565b60405180910390f35b61015e6109ba565b005b61017a60048036038101906101759190612da8565b6109cc565b005b61019660048036038101906101919190612e28565b610c94565b005b6101a0610cff565b6040516101ad9190612d8d565b60405180910390f35b6101be610d16565b005b6101da60048036038101906101d59190612e55565b610d2a565b6040516101e79190612d8d565b60405180910390f35b61020a60048036038101906102059190612e95565b6111a8565b6040516102179190612d8d565b60405180910390f35b61023a60048036038101906102359190612ec2565b611204565b6040516102479190612ff7565b60405180910390f35b61025861141c565b005b610274600480360381019061026f9190613013565b6114a9565b60405161028191906130e4565b60405180910390f35b6102926119a8565b005b61029c611af8565b005b6102a6611b0a565b6040516102b3919061310e565b60405180910390f35b6102c4611b34565b6040516102d2929190613147565b60405180910390f35b6102f560048036038101906102f09190613170565b611b59565b005b6102ff611cde565b60405161030c919061310e565b60405180910390f35b61032f600480360381019061032a91906131c3565b611d08565b60405161033c9190612d8d565b60405180910390f35b61035f600480360381019061035a9190612e95565b612375565b005b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea90613287565b60405180910390fd5b60ff60008c815260200190815260200160002060050160009054906101000a900460ff1615610457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044e906132f3565b60405180910390fd5b6000891161049a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104919061335f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610500906133cb565b60405180910390fd5b6000871461064457600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1603610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790613437565b60405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89896040518363ffffffff1660e01b81526004016105bb929190613457565b6020604051808303816000875af11580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe91906134ac565b50868873ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b6000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff168b6106759190613508565b61067f9190613579565b90506000818b61068f91906135aa565b9050600082111561073c578b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016106f7929190613457565b6020604051808303816000875af1158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a91906134ac565b505b8b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88836040518363ffffffff1660e01b8152600401610777929190613457565b6020604051808303816000875af1158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba91906134ac565b508660ff60008f815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b60ff60008f815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508960ff60008f815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860ff60008f8152602001908152602001600020600301819055508160ff60008f815260200190815260200160002060040181905550600160ff60008f815260200190815260200160002060050160006101000a81548160ff0219169083151502179055508a60ff60008f8152602001908152602001600020600701600082825461094591906135aa565b925050819055508673ffffffffffffffffffffffffffffffffffffffff168b8e7f8658aa8a4a6ef641d1fd3b5bb33205d173a5404ab1f7cd1a81d2828f94b8bf028f8e8d8c8c8c60405161099e9695949392919061363a565b60405180910390a46001925050509a9950505050505050505050565b6109c2612422565b6109ca6124a0565b565b6109d4612422565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a906136e2565b60405180910390fd5b60007f74726561737572790000000000000000000000000000000000000000000000008303610b46578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af390613774565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610c44565b7f61676772656761746f72000000000000000000000000000000000000000000008303610c43578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf490613806565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610c8f578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b610c9c612422565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b81604051610cf49190613826565b60405180910390a150565b600060cd60009054906101000a900460ff16905090565b610d1e612422565b610d286000612503565b565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db390613287565b60405180910390fd5b60ff600083815260200190815260200160002060050160009054906101000a900460ff1615610e20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e179061388d565b60405180910390fd5b60ff600083815260200190815260200160002060050160019054906101000a900460ff1615610e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7b906138f9565b60405180910390fd5b8260ff6000848152602001908152602001600020600401541015610edd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed490613965565b60405180910390fd5b6000831115610fbe5760ff600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610f79929190613457565b6020604051808303816000875af1158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbc91906134ac565b505b600160ff600084815260200190815260200160002060050160016101000a81548160ff021916908315150217905550600060ff600084815260200190815260200160002060060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060008360ff60008581526020019081526020016000206007015461105791906135aa565b905060ff600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60ff600086815260200190815260200160002060050160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff600087815260200190815260200160002060030154846111049190613985565b6040518363ffffffff1660e01b8152600401611121929190613457565b6020604051808303816000875af1158015611140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116491906134ac565b50827f0736fe428e1747ca8d387c2e6fa1a31a0cde62d3a167c40a46ade59a3cdc828e8560405161119591906139b9565b60405180910390a2600191505092915050565b60006001609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036111fa57600190506111ff565b600090505b919050565b61120c612a4d565b60ff6000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020016007820154815250509050919050565b6000611426612534565b90508073ffffffffffffffffffffffffffffffffffffffff16611447611cde565b73ffffffffffffffffffffffffffffffffffffffff161461149d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149490613a46565b60405180910390fd5b6114a681612503565b50565b60006114b361253c565b6114c08989868989612586565b60008383905003611506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fd90613ab2565b60405180910390fd5b8873ffffffffffffffffffffffffffffffffffffffff166323b872dd3330888c6115309190613985565b6040518463ffffffff1660e01b815260040161154e93929190613ad2565b6020604051808303816000875af115801561156d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159191906134ac565b5061010060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906115e390613b09565b91905055503361010060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405160200161163b929190613457565b6040516020818303038152906040528051906020012090506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff168a6116849190613508565b61168e9190613579565b90506040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018281526020016000151581526020016000151581526020018673ffffffffffffffffffffffffffffffffffffffff16815260200160975467ffffffffffffffff166bffffffffffffffffffffffff1681526020018a81525060ff600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550610120820151816007015590505060ff6000838152602001908152602001600020600701548a73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f40ccd1ceb111a3c186ef9911e1b876dc1f789ed331b86097b3b8851055b6a13784868d8a8a604051611993959493929190613b8c565b60405180910390a45098975050505050505050565b60008060019054906101000a900460ff161590508080156119d95750600160008054906101000a900460ff1660ff16105b80611a0657506119e830612739565b158015611a055750600160008054906101000a900460ff1660ff16145b5b611a45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3c90613c4c565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611a82576001600060016101000a81548160ff0219169083151502179055505b620186a0609781905550611a9461275c565b611a9c6127b5565b8015611af55760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051611aec9190613cb4565b60405180910390a15b50565b611b00612422565b611b0861280e565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080609860009054906101000a900467ffffffffffffffff16609754915091509091565b611b61612422565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc7906136e2565b60405180910390fd5b6001811480611bdf5750600281145b611c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1590613d1b565b60405180910390fd5b7f746f6b656e0000000000000000000000000000000000000000000000000000008303611cd95780609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c83604051611cd091906139b9565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9190613287565b60405180910390fd5b60ff600085815260200190815260200160002060050160009054906101000a900460ff1615611dfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df59061388d565b60405180910390fd5b60ff600085815260200190815260200160002060050160019054906101000a900460ff1615611e62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e59906138f9565b60405180910390fd5b600060ff600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508267ffffffffffffffff1660ff600087815260200190815260200160002060060160008282829054906101000a90046bffffffffffffffffffffffff16611ee49190613d3b565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600060ff600087815260200190815260200160002060060160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff160361213657600160ff600087815260200190815260200160002060050160006101000a81548160ff021916908315150217905550600060ff600087815260200190815260200160002060030154146121355760ff600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60ff600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff6000898152602001908152602001600020600301546040518363ffffffff1660e01b8152600401612060929190613457565b6020604051808303816000875af115801561207f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a391906134ac565b5060ff60008681526020019081526020016000206003015460ff600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b5b60006097548467ffffffffffffffff1660ff6000898152602001908152602001600020600701546121679190613508565b6121719190613579565b90508060ff6000888152602001908152602001600020600701600082825461219991906135aa565b925050819055506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff16836121d19190613508565b6121db9190613579565b905080826121e991906135aa565b91506000811115612296578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401612251929190613457565b6020604051808303816000875af1158015612270573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229491906134ac565b505b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87846040518363ffffffff1660e01b81526004016122d1929190613457565b6020604051808303816000875af11580156122f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231491906134ac565b508573ffffffffffffffffffffffffffffffffffffffff16877f98ece21e01a01cbe1d1c0dad3b053c8fbd368f99be78be958fcf1d1d13fd249a8a8860405161235e929190613dac565b60405180910390a360019350505050949350505050565b61237d612422565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166123dd611b0a565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61242a612534565b73ffffffffffffffffffffffffffffffffffffffff16612448611b0a565b73ffffffffffffffffffffffffffffffffffffffff161461249e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249590613e21565b60405180910390fd5b565b6124a8612871565b600060cd60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6124ec612534565b6040516124f9919061310e565b60405180910390a1565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055612531816128ba565b50565b600033905090565b612544610cff565b15612584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161257b90613e8d565b60405180910390fd5b565b6001609a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125ff90613ef9565b60405180910390fd5b6000840361264b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126429061335f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036126ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126b190613f65565b60405180910390fd5b6000811461273257600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272890613fd1565b60405180910390fd5b5b5050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166127ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127a290614063565b60405180910390fd5b6127b3612980565b565b600060019054906101000a900460ff16612804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127fb90614063565b60405180910390fd5b61280c6129e1565b565b61281661253c565b600160cd60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861285a612534565b604051612867919061310e565b60405180910390a1565b612879610cff565b6128b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128af906140cf565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff166129cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129c690614063565b60405180910390fd5b6129df6129da612534565b612503565b565b600060019054906101000a900460ff16612a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a2790614063565b60405180910390fd5b600060cd60006101000a81548160ff021916908315150217905550565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600081525090565b600080fd5b600080fd5b6000819050919050565b612b2781612b14565b8114612b3257600080fd5b50565b600081359050612b4481612b1e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b7582612b4a565b9050919050565b612b8581612b6a565b8114612b9057600080fd5b50565b600081359050612ba281612b7c565b92915050565b6000819050919050565b612bbb81612ba8565b8114612bc657600080fd5b50565b600081359050612bd881612bb2565b92915050565b60006bffffffffffffffffffffffff82169050919050565b612bff81612bde565b8114612c0a57600080fd5b50565b600081359050612c1c81612bf6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612c4757612c46612c22565b5b8235905067ffffffffffffffff811115612c6457612c63612c27565b5b602083019150836001820283011115612c8057612c7f612c2c565b5b9250929050565b6000806000806000806000806000806101208b8d031215612cab57612caa612b0a565b5b6000612cb98d828e01612b35565b9a50506020612cca8d828e01612b93565b9950506040612cdb8d828e01612bc9565b9850506060612cec8d828e01612b93565b9750506080612cfd8d828e01612bc9565b96505060a0612d0e8d828e01612b93565b95505060c0612d1f8d828e01612b93565b94505060e0612d308d828e01612c0d565b9350506101008b013567ffffffffffffffff811115612d5257612d51612b0f565b5b612d5e8d828e01612c31565b92509250509295989b9194979a5092959850565b60008115159050919050565b612d8781612d72565b82525050565b6000602082019050612da26000830184612d7e565b92915050565b60008060408385031215612dbf57612dbe612b0a565b5b6000612dcd85828601612b35565b9250506020612dde85828601612b93565b9150509250929050565b600067ffffffffffffffff82169050919050565b612e0581612de8565b8114612e1057600080fd5b50565b600081359050612e2281612dfc565b92915050565b600060208284031215612e3e57612e3d612b0a565b5b6000612e4c84828501612e13565b91505092915050565b60008060408385031215612e6c57612e6b612b0a565b5b6000612e7a85828601612bc9565b9250506020612e8b85828601612b35565b9150509250929050565b600060208284031215612eab57612eaa612b0a565b5b6000612eb984828501612b93565b91505092915050565b600060208284031215612ed857612ed7612b0a565b5b6000612ee684828501612b35565b91505092915050565b612ef881612b6a565b82525050565b612f0781612ba8565b82525050565b612f1681612d72565b82525050565b612f2581612bde565b82525050565b61014082016000820151612f426000850182612eef565b506020820151612f556020850182612eef565b506040820151612f686040850182612eef565b506060820151612f7b6060850182612efe565b506080820151612f8e6080850182612efe565b5060a0820151612fa160a0850182612f0d565b5060c0820151612fb460c0850182612f0d565b5060e0820151612fc760e0850182612eef565b50610100820151612fdc610100850182612f1c565b50610120820151612ff1610120850182612efe565b50505050565b60006101408201905061300d6000830184612f2b565b92915050565b60008060008060008060008060e0898b03121561303357613032612b0a565b5b60006130418b828c01612b93565b98505060206130528b828c01612bc9565b97505060406130638b828c01612c0d565b96505060606130748b828c01612b93565b95505060806130858b828c01612bc9565b94505060a06130968b828c01612b93565b93505060c089013567ffffffffffffffff8111156130b7576130b6612b0f565b5b6130c38b828c01612c31565b92509250509295985092959890939650565b6130de81612b14565b82525050565b60006020820190506130f960008301846130d5565b92915050565b61310881612b6a565b82525050565b600060208201905061312360008301846130ff565b92915050565b61313281612de8565b82525050565b61314181612ba8565b82525050565b600060408201905061315c6000830185613129565b6131696020830184613138565b9392505050565b60008060006060848603121561318957613188612b0a565b5b600061319786828701612b35565b93505060206131a886828701612b93565b92505060406131b986828701612bc9565b9150509250925092565b600080600080608085870312156131dd576131dc612b0a565b5b60006131eb87828801612b35565b94505060206131fc87828801612b35565b935050604061320d87828801612b93565b925050606061321e87828801612e13565b91505092959194509250565b600082825260208201905092915050565b7f4f6e6c7941676772656761746f72000000000000000000000000000000000000600082015250565b6000613271600e8361322a565b915061327c8261323b565b602082019050919050565b600060208201905081810360008301526132a081613264565b9050919050565b7f4f726465724e6f7446756c66696c6c6564000000000000000000000000000000600082015250565b60006132dd60118361322a565b91506132e8826132a7565b602082019050919050565b6000602082019050818103600083015261330c816132d0565b9050919050565b7f416d6f756e7449735a65726f0000000000000000000000000000000000000000600082015250565b6000613349600c8361322a565b915061335482613313565b602082019050919050565b600060208201905081810360008301526133788161333c565b9050919050565b7f526563697069656e7449735a65726f4164647265737300000000000000000000600082015250565b60006133b560168361322a565b91506133c08261337f565b602082019050919050565b600060208201905081810360008301526133e4816133a8565b9050919050565b7f53656e646572466565526563697069656e7449735a65726f4164647265737300600082015250565b6000613421601f8361322a565b915061342c826133eb565b602082019050919050565b6000602082019050818103600083015261345081613414565b9050919050565b600060408201905061346c60008301856130ff565b6134796020830184613138565b9392505050565b61348981612d72565b811461349457600080fd5b50565b6000815190506134a681613480565b92915050565b6000602082840312156134c2576134c1612b0a565b5b60006134d084828501613497565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061351382612ba8565b915061351e83612ba8565b925082820261352c81612ba8565b91508282048414831517613543576135426134d9565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061358482612ba8565b915061358f83612ba8565b92508261359f5761359e61354a565b5b828204905092915050565b60006135b582612ba8565b91506135c083612ba8565b92508282039050818111156135d8576135d76134d9565b5b92915050565b6135e781612bde565b82525050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000613619838561322a565b93506136268385846135ed565b61362f836135fc565b840190509392505050565b600060a08201905061364f60008301896130ff565b61365c60208301886130ff565b61366960408301876130ff565b61367660608301866135de565b818103608083015261368981848661360d565b9050979650505050505050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b60006136cc60158361322a565b91506136d782613696565b602082019050919050565b600060208201905081810360008301526136fb816136bf565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b600061375e60258361322a565b915061376982613702565b604082019050919050565b6000602082019050818103600083015261378d81613751565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b60006137f060278361322a565b91506137fb82613794565b604082019050919050565b6000602082019050818103600083015261381f816137e3565b9050919050565b600060208201905061383b6000830184613129565b92915050565b7f4f7264657246756c66696c6c6564000000000000000000000000000000000000600082015250565b6000613877600e8361322a565b915061388282613841565b602082019050919050565b600060208201905081810360008301526138a68161386a565b9050919050565b7f4f72646572526566756e64656400000000000000000000000000000000000000600082015250565b60006138e3600d8361322a565b91506138ee826138ad565b602082019050919050565b60006020820190508181036000830152613912816138d6565b9050919050565b7f4665654578636565647350726f746f636f6c4665650000000000000000000000600082015250565b600061394f60158361322a565b915061395a82613919565b602082019050919050565b6000602082019050818103600083015261397e81613942565b9050919050565b600061399082612ba8565b915061399b83612ba8565b92508282019050808211156139b3576139b26134d9565b5b92915050565b60006020820190506139ce6000830184613138565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000613a3060298361322a565b9150613a3b826139d4565b604082019050919050565b60006020820190508181036000830152613a5f81613a23565b9050919050565b7f496e76616c69644d657373616765486173680000000000000000000000000000600082015250565b6000613a9c60128361322a565b9150613aa782613a66565b602082019050919050565b60006020820190508181036000830152613acb81613a8f565b9050919050565b6000606082019050613ae760008301866130ff565b613af460208301856130ff565b613b016040830184613138565b949350505050565b6000613b1482612ba8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613b4657613b456134d9565b5b600182019050919050565b6000819050919050565b6000613b76613b71613b6c84612bde565b613b51565b612ba8565b9050919050565b613b8681613b5b565b82525050565b6000608082019050613ba16000830188613138565b613bae60208301876130d5565b613bbb6040830186613b7d565b8181036060830152613bce81848661360d565b90509695505050505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613c36602e8361322a565b9150613c4182613bda565b604082019050919050565b60006020820190508181036000830152613c6581613c29565b9050919050565b6000819050919050565b600060ff82169050919050565b6000613c9e613c99613c9484613c6c565b613b51565b613c76565b9050919050565b613cae81613c83565b82525050565b6000602082019050613cc96000830184613ca5565b92915050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b6000613d0560178361322a565b9150613d1082613ccf565b602082019050919050565b60006020820190508181036000830152613d3481613cf8565b9050919050565b6000613d4682612bde565b9150613d5183612bde565b925082820390506bffffffffffffffffffffffff811115613d7557613d746134d9565b5b92915050565b6000613d96613d91613d8c84612de8565b613b51565b612bde565b9050919050565b613da681613d7b565b82525050565b6000604082019050613dc160008301856130d5565b613dce6020830184613d9d565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613e0b60208361322a565b9150613e1682613dd5565b602082019050919050565b60006020820190508181036000830152613e3a81613dfe565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613e7760108361322a565b9150613e8282613e41565b602082019050919050565b60006020820190508181036000830152613ea681613e6a565b9050919050565b7f546f6b656e4e6f74537570706f72746564000000000000000000000000000000600082015250565b6000613ee360118361322a565b9150613eee82613ead565b602082019050919050565b60006020820190508181036000830152613f1281613ed6565b9050919050565b7f5468726f775a65726f4164647265737300000000000000000000000000000000600082015250565b6000613f4f60108361322a565b9150613f5a82613f19565b602082019050919050565b60006020820190508181036000830152613f7e81613f42565b9050919050565b7f496e76616c696453656e646572466565526563697069656e7400000000000000600082015250565b6000613fbb60198361322a565b9150613fc682613f85565b602082019050919050565b60006020820190508181036000830152613fea81613fae565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061404d602b8361322a565b915061405882613ff1565b604082019050919050565b6000602082019050818103600083015261407c81614040565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006140b960148361322a565b91506140c482614083565b602082019050919050565b600060208201905081810360008301526140e8816140ac565b905091905056fea2646970667358221220d97ab7eca82a9cbc2521f0e20328feaaaf5117bfceee752b34247ec6a0a8791964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB810C636 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB810C636 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF22EE704 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x809804F7 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x71EEDB88 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x75151B63 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x768C6EC0 EQ PUSH2 0x220 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x3D3F14F4 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2C87 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x9BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x2DA8 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH2 0xD16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x2E95 JUMP JUMPDEST PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2EC2 JUMP JUMPDEST PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x141C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x30E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x19A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH2 0x1AF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP3 SWAP2 SWAP1 PUSH2 0x3147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST PUSH2 0x1B59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FF PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2E95 JUMP JUMPDEST PUSH2 0x2375 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x3287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x457 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44E SWAP1 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x491 SWAP1 PUSH2 0x335F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP1 PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 EQ PUSH2 0x644 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP1 PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP12 PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x73C JUMPI DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP9 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x796 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP DUP7 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0xFF PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 DUP15 PUSH32 0x8658AA8A4A6EF641D1FD3B5BB33205D173A5404AB1F7CD1A81D2828F94B8BF02 DUP16 DUP15 DUP14 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x99E SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x363A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP3 POP POP POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x9CA PUSH2 0x24A0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3A SWAP1 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0xB46 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP1 PUSH2 0x3774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xC44 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0xC43 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x3806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0xC8F JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC9C PUSH2 0x2422 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x3826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD1E PUSH2 0x2422 JUMP JUMPDEST PUSH2 0xD28 PUSH1 0x0 PUSH2 0x2503 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB3 SWAP1 PUSH2 0x3287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE17 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP1 PUSH2 0x38F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED4 SWAP1 PUSH2 0x3965 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xFBE JUMPI PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF79 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x1057 SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP1 POP PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x3985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1121 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1140 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1164 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP DUP3 PUSH32 0x736FE428E1747CA8D387C2E6FA1A31A0CDE62D3A167C40A46ADE59A3CDC828E DUP6 PUSH1 0x40 MLOAD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x39B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x11FA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C PUSH2 0x2A4D JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1426 PUSH2 0x2534 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1447 PUSH2 0x1CDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1494 SWAP1 PUSH2 0x3A46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A6 DUP2 PUSH2 0x2503 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B3 PUSH2 0x253C JUMP JUMPDEST PUSH2 0x14C0 DUP10 DUP10 DUP7 DUP10 DUP10 PUSH2 0x2586 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FD SWAP1 PUSH2 0x3AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP13 PUSH2 0x1530 SWAP2 SWAP1 PUSH2 0x3985 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3AD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x156D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1591 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15E3 SWAP1 PUSH2 0x3B09 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH2 0x100 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x163B SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x1684 SWAP2 SWAP1 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x168E SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x97 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE POP PUSH1 0xFF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0xFF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40CCD1CEB111A3C186EF9911E1B876DC1F789ED331B86097B3B8851055B6A137 DUP5 DUP7 DUP14 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1993 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x19D9 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1A06 JUMPI POP PUSH2 0x19E8 ADDRESS PUSH2 0x2739 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1A05 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1A45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3C SWAP1 PUSH2 0x3C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH3 0x186A0 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x1A94 PUSH2 0x275C JUMP JUMPDEST PUSH2 0x1A9C PUSH2 0x27B5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1AEC SWAP2 SWAP1 PUSH2 0x3CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B00 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x1B08 PUSH2 0x280E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x97 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1B61 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC7 SWAP1 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x1BDF JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x1C1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C15 SWAP1 PUSH2 0x3D1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x1CD9 JUMPI DUP1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CD0 SWAP2 SWAP1 PUSH2 0x39B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D91 SWAP1 PUSH2 0x3287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF5 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E59 SWAP1 PUSH2 0x38F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EE4 SWAP2 SWAP1 PUSH2 0x3D3B JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2136 JUMPI PUSH1 0x1 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x2135 JUMPI PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xFF PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2060 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x207F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20A3 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x2167 SWAP2 SWAP1 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x2171 SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2199 SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x21D1 SWAP2 SWAP1 PUSH2 0x3508 JUMP JUMPDEST PUSH2 0x21DB SWAP2 SWAP1 PUSH2 0x3579 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x35AA JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2296 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2251 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2270 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2294 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D1 SWAP3 SWAP2 SWAP1 PUSH2 0x3457 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2314 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH32 0x98ECE21E01A01CBE1D1C0DAD3B053C8FBD368F99BE78BE958FCF1D1D13FD249A DUP11 DUP9 PUSH1 0x40 MLOAD PUSH2 0x235E SWAP3 SWAP2 SWAP1 PUSH2 0x3DAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x237D PUSH2 0x2422 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23DD PUSH2 0x1B0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x242A PUSH2 0x2534 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2448 PUSH2 0x1B0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x249E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2495 SWAP1 PUSH2 0x3E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x24A8 PUSH2 0x2871 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x24EC PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F9 SWAP2 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x2531 DUP2 PUSH2 0x28BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2544 PUSH2 0xCFF JUMP JUMPDEST ISZERO PUSH2 0x2584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257B SWAP1 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9A PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25FF SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SUB PUSH2 0x264B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2642 SWAP1 PUSH2 0x335F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B1 SWAP1 PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x2732 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2728 SWAP1 PUSH2 0x3FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A2 SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27B3 PUSH2 0x2980 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2804 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27FB SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x280C PUSH2 0x29E1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2816 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x285A PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2867 SWAP2 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2879 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x28B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28AF SWAP1 PUSH2 0x40CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x29CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C6 SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29DF PUSH2 0x29DA PUSH2 0x2534 JUMP JUMPDEST PUSH2 0x2503 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2A30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A27 SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xCD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B27 DUP2 PUSH2 0x2B14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B44 DUP2 PUSH2 0x2B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B75 DUP3 PUSH2 0x2B4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B85 DUP2 PUSH2 0x2B6A JUMP JUMPDEST DUP2 EQ PUSH2 0x2B90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BA2 DUP2 PUSH2 0x2B7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BBB DUP2 PUSH2 0x2BA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BD8 DUP2 PUSH2 0x2BB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BFF DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP2 EQ PUSH2 0x2C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C1C DUP2 PUSH2 0x2BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2C47 JUMPI PUSH2 0x2C46 PUSH2 0x2C22 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C64 JUMPI PUSH2 0x2C63 PUSH2 0x2C27 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2C80 JUMPI PUSH2 0x2C7F PUSH2 0x2C2C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x120 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x2CAB JUMPI PUSH2 0x2CAA PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB9 DUP14 DUP3 DUP15 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH2 0x2CCA DUP14 DUP3 DUP15 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH2 0x2CDB DUP14 DUP3 DUP15 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH2 0x2CEC DUP14 DUP3 DUP15 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH2 0x2CFD DUP14 DUP3 DUP15 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH2 0x2D0E DUP14 DUP3 DUP15 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH2 0x2D1F DUP14 DUP3 DUP15 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH2 0x2D30 DUP14 DUP3 DUP15 ADD PUSH2 0x2C0D JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 DUP12 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D52 JUMPI PUSH2 0x2D51 PUSH2 0x2B0F JUMP JUMPDEST JUMPDEST PUSH2 0x2D5E DUP14 DUP3 DUP15 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D87 DUP2 PUSH2 0x2D72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DA2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DBF JUMPI PUSH2 0x2DBE PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DCD DUP6 DUP3 DUP7 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DDE DUP6 DUP3 DUP7 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E05 DUP2 PUSH2 0x2DE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E22 DUP2 PUSH2 0x2DFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E3E JUMPI PUSH2 0x2E3D PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E4C DUP5 DUP3 DUP6 ADD PUSH2 0x2E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E6C JUMPI PUSH2 0x2E6B PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E7A DUP6 DUP3 DUP7 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E8B DUP6 DUP3 DUP7 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EAB JUMPI PUSH2 0x2EAA PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EB9 DUP5 DUP3 DUP6 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ED8 JUMPI PUSH2 0x2ED7 PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EE6 DUP5 DUP3 DUP6 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EF8 DUP2 PUSH2 0x2B6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F07 DUP2 PUSH2 0x2BA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F16 DUP2 PUSH2 0x2D72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F25 DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2F42 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2EEF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2F55 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2EEF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2F68 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2EEF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2F7B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2EFE JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2F8E PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2EFE JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2FA1 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2F0D JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2FB4 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2F0D JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2FC7 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2EEF JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2FDC PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2F1C JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2FF1 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2EFE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x300D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3033 JUMPI PUSH2 0x3032 PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3041 DUP12 DUP3 DUP13 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x3052 DUP12 DUP3 DUP13 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x3063 DUP12 DUP3 DUP13 ADD PUSH2 0x2C0D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x3074 DUP12 DUP3 DUP13 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x3085 DUP12 DUP3 DUP13 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x3096 DUP12 DUP3 DUP13 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30B7 JUMPI PUSH2 0x30B6 PUSH2 0x2B0F JUMP JUMPDEST JUMPDEST PUSH2 0x30C3 DUP12 DUP3 DUP13 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x30DE DUP2 PUSH2 0x2B14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3108 DUP2 PUSH2 0x2B6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3123 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3132 DUP2 PUSH2 0x2DE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3141 DUP2 PUSH2 0x2BA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x315C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3129 JUMP JUMPDEST PUSH2 0x3169 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3138 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3189 JUMPI PUSH2 0x3188 PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3197 DUP7 DUP3 DUP8 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31A8 DUP7 DUP3 DUP8 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31B9 DUP7 DUP3 DUP8 ADD PUSH2 0x2BC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31DD JUMPI PUSH2 0x31DC PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31EB DUP8 DUP3 DUP9 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x31FC DUP8 DUP3 DUP9 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x320D DUP8 DUP3 DUP9 ADD PUSH2 0x2B93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x321E DUP8 DUP3 DUP9 ADD PUSH2 0x2E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7941676772656761746F72000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3271 PUSH1 0xE DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x327C DUP3 PUSH2 0x323B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32A0 DUP2 PUSH2 0x3264 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465724E6F7446756C66696C6C6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DD PUSH1 0x11 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x32E8 DUP3 PUSH2 0x32A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x330C DUP2 PUSH2 0x32D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7449735A65726F0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3349 PUSH1 0xC DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3354 DUP3 PUSH2 0x3313 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3378 DUP2 PUSH2 0x333C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E7449735A65726F4164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B5 PUSH1 0x16 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x33C0 DUP3 PUSH2 0x337F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33E4 DUP2 PUSH2 0x33A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572466565526563697069656E7449735A65726F4164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3421 PUSH1 0x1F DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x342C DUP3 PUSH2 0x33EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3450 DUP2 PUSH2 0x3414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x346C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3479 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3138 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3489 DUP2 PUSH2 0x2D72 JUMP JUMPDEST DUP2 EQ PUSH2 0x3494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x34A6 DUP2 PUSH2 0x3480 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34C2 JUMPI PUSH2 0x34C1 PUSH2 0x2B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34D0 DUP5 DUP3 DUP6 ADD PUSH2 0x3497 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3513 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x351E DUP4 PUSH2 0x2BA8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x352C DUP2 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3543 JUMPI PUSH2 0x3542 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3584 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x358F DUP4 PUSH2 0x2BA8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x359F JUMPI PUSH2 0x359E PUSH2 0x354A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B5 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x35C0 DUP4 PUSH2 0x2BA8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x35D8 JUMPI PUSH2 0x35D7 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35E7 DUP2 PUSH2 0x2BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3619 DUP4 DUP6 PUSH2 0x322A JUMP JUMPDEST SWAP4 POP PUSH2 0x3626 DUP4 DUP6 DUP5 PUSH2 0x35ED JUMP JUMPDEST PUSH2 0x362F DUP4 PUSH2 0x35FC JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x364F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x365C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3669 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3676 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x35DE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3689 DUP2 DUP5 DUP7 PUSH2 0x360D JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36CC PUSH1 0x15 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x36D7 DUP3 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36FB DUP2 PUSH2 0x36BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x375E PUSH1 0x25 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3769 DUP3 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x378D DUP2 PUSH2 0x3751 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F0 PUSH1 0x27 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x37FB DUP3 PUSH2 0x3794 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x381F DUP2 PUSH2 0x37E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x383B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F7264657246756C66696C6C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3877 PUSH1 0xE DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3882 DUP3 PUSH2 0x3841 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38A6 DUP2 PUSH2 0x386A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F72646572526566756E64656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E3 PUSH1 0xD DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x38EE DUP3 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3912 DUP2 PUSH2 0x38D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665654578636565647350726F746F636F6C4665650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x394F PUSH1 0x15 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x395A DUP3 PUSH2 0x3919 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x397E DUP2 PUSH2 0x3942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3990 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x399B DUP4 PUSH2 0x2BA8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x39B3 JUMPI PUSH2 0x39B2 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A30 PUSH1 0x29 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3A3B DUP3 PUSH2 0x39D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A5F DUP2 PUSH2 0x3A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69644D657373616765486173680000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9C PUSH1 0x12 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA7 DUP3 PUSH2 0x3A66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACB DUP2 PUSH2 0x3A8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3AE7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3AF4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x3B01 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3138 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B14 DUP3 PUSH2 0x2BA8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3B46 JUMPI PUSH2 0x3B45 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B76 PUSH2 0x3B71 PUSH2 0x3B6C DUP5 PUSH2 0x2BDE JUMP JUMPDEST PUSH2 0x3B51 JUMP JUMPDEST PUSH2 0x2BA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B86 DUP2 PUSH2 0x3B5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3BA1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3138 JUMP JUMPDEST PUSH2 0x3BAE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x30D5 JUMP JUMPDEST PUSH2 0x3BBB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3B7D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3BCE DUP2 DUP5 DUP7 PUSH2 0x360D JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C36 PUSH1 0x2E DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3C41 DUP3 PUSH2 0x3BDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C65 DUP2 PUSH2 0x3C29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C9E PUSH2 0x3C99 PUSH2 0x3C94 DUP5 PUSH2 0x3C6C JUMP JUMPDEST PUSH2 0x3B51 JUMP JUMPDEST PUSH2 0x3C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CAE DUP2 PUSH2 0x3C83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D05 PUSH1 0x17 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3D10 DUP3 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D34 DUP2 PUSH2 0x3CF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D46 DUP3 PUSH2 0x2BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x3D51 DUP4 PUSH2 0x2BDE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D75 JUMPI PUSH2 0x3D74 PUSH2 0x34D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D96 PUSH2 0x3D91 PUSH2 0x3D8C DUP5 PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x3B51 JUMP JUMPDEST PUSH2 0x2BDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DA6 DUP2 PUSH2 0x3D7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DC1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30D5 JUMP JUMPDEST PUSH2 0x3DCE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D9D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E0B PUSH1 0x20 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E16 DUP3 PUSH2 0x3DD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E3A DUP2 PUSH2 0x3DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E77 PUSH1 0x10 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E82 DUP3 PUSH2 0x3E41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA6 DUP2 PUSH2 0x3E6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E4E6F74537570706F72746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE3 PUSH1 0x11 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3EEE DUP3 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F12 DUP2 PUSH2 0x3ED6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726F775A65726F4164647265737300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4F PUSH1 0x10 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3F5A DUP3 PUSH2 0x3F19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F7E DUP2 PUSH2 0x3F42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696453656E646572466565526563697069656E7400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBB PUSH1 0x19 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x3FC6 DUP3 PUSH2 0x3F85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FEA DUP2 PUSH2 0x3FAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404D PUSH1 0x2B DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x4058 DUP3 PUSH2 0x3FF1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x407C DUP2 PUSH2 0x4040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B9 PUSH1 0x14 DUP4 PUSH2 0x322A JUMP JUMPDEST SWAP2 POP PUSH2 0x40C4 DUP3 PUSH2 0x4083 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40E8 DUP2 PUSH2 0x40AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PUSH27 0xB7ECA82A9CBC2521F0E20328FEAAAF5117BFCEEE752B34247EC6A0 0xA8 PUSH26 0x1964736F6C634300081200330000000000000000000000000000 ","sourceMap":"390:8533:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6674:1561;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1421:56;;;:::i;:::-;;2293:551:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1894:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1879:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:101:1;;;:::i;:::-;;5704:920:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8624:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8468:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2031:212:0;;;:::i;:::-;;1709:1324:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;795:114;;;:::i;:::-;;1325:52;;;:::i;:::-;;1462:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8812:109:10;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1426:335:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1144:99:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4090:1575:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1436:178:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6674:1561:10;7004:4;1044:18;;;;;;;;;;;1030:32;;:10;:32;;;1022:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;7023:5:::1;:15;7029:8;7023:15;;;;;;;;;;;:27;;;;;;;;;;;;7022:28;7014:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7094:1;7084:7;:11;7076:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;7146:1;7124:24;;:10;:24;;::::0;7116:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7197:1;7183:10;:15;7180:259;;7244:1;7213:33;;:19;:33;;::::0;7205:77:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7295:6;7288:23;;;7317:19;7342:10;7288:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7419:10;7394:19;7368:66;;;;;;;;;;;;7180:259;7443:19;7498:7;;7476:18;;;;;;;;;;;7466:28;;:7;:28;;;;:::i;:::-;7465:40;;;;:::i;:::-;7443:62;;7509:31;7553:11;7543:7;:21;;;;:::i;:::-;7509:55;;7587:1;7573:11;:15;7569:74;;;7597:6;7590:23;;;7614:15;;;;;;;;;;;7631:11;7590:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7569:74;7655:6;7648:23;;;7672:10;7684:23;7648:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7766:10;7741:5;:15;7747:8;7741:15;;;;;;;;;;;:22;;;:35;;;;;;;;;;;;;;;;;;7804:6;7780:5;:15;7786:8;7780:15;;;;;;;;;;;:21;;;:30;;;;;;;;;;;;;;;;;;7851:19;7814:5;:15;7820:8;7814:15;;;;;;;;;;;:34;;;:56;;;;;;;;;;;;;;;;;;7902:10;7874:5;:15;7880:8;7874:15;;;;;;;;;;;:25;;:38;;;;7946:11;7916:5;:15;7922:8;7916:15;;;;;;;;;;;:27;;:41;;;;7991:4;7961:5;:15;7967:8;7961:15;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;8025:7;7999:5;:15;8005:8;7999:15;;;;;;;;;;;:22;;;:33;;;;;;;:::i;:::-;;;;;;;;8116:10;8069:146;;8104:7;8091:8;8069:146;8131:6;8142:19;8166:18;8189:5;8199:12;;8069:146;;;;;;;;;;;:::i;:::-;;;;;;;;8227:4;8220:11;;;;6674:1561:::0;;;;;;;;;;;;:::o;1421:56::-;1355:13:1;:11;:13::i;:::-;1463:10:10::1;:8;:10::i;:::-;1421:56::o:0;2293:551:11:-;1355:13:1;:11;:13::i;:::-;2401:1:11::1;2384:19;;:5;:19;;::::0;2376:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2433:12;2453:18;:4;:18:::0;2449:326:::1;;2505:5;2486:24;;:15;;;;;;;;;;;:24;;::::0;2478:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2575:5;2557:15;;:23;;;;;;;;;;;;;;;;;;2595:4;2585:14;;2449:326;;;2614:20;:4;:20:::0;2610:165:::1;;2671:5;2649:27;;:18;;;;;;;;;;;:27;;::::0;2641:79:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2746:5;2725:18;;:26;;;;;;;;;;;;;;;;;;2766:4;2756:14;;2610:165;2449:326;2782:7;2778:63;;;2830:5;2801:35;;2824:4;2801:35;;;;;;;;;;2778:63;2372:472;2293:551:::0;;:::o;1894:170::-;1355:13:1;:11;:13::i;:::-;1993:19:11::1;1972:18;;:40;;;;;;;;;;;;;;;;;;2021:39;2040:19;2021:39;;;;;;:::i;:::-;;;;;;;;1894:170:::0;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;5704:920:10:-;5785:4;1044:18;;;;;;;;;;;1030:32;;:10;:32;;;1022:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5855:5:::1;:15;5861:8;5855:15;;;;;;;;;;;:27;;;;;;;;;;;;5854:28;5846:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5914:5;:15;5920:8;5914:15;;;;;;;;;;;:26;;;;;;;;;;;;5913:27;5905:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;6001:4;5970:5;:15;5976:8;5970:15;;;;;;;;;;;:27;;;:35;;5962:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6047:1;6040:4;:8;6036:127;;;6104:5;:15;6110:8;6104:15;;;;;;;;;;;:21;;;;;;;;;;;;6097:38;;;6136:15;;;;;;;;;;;6153:4;6097:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6036:127;6220:4;6191:5;:15;6197:8;6191:15;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;6257:1;6228:5;:15;6234:8;6228:15;;;;;;;;;;;:26;;;:30;;;;;;;;;;;;;;;;;;6297:20;6345:4;6320:5;:15;6326:8;6320:15;;;;;;;;;;;:22;;;:29;;;;:::i;:::-;6297:52;;6426:5;:15;6432:8;6426:15;;;;;;;;;;;:21;;;;;;;;;;;;6419:38;;;6462:5;:15;6468:8;6462:15;;;;;;;;;;;:29;;;;;;;;;;;;6511:5;:15;6517:8;6511:15;;;;;;;;;;;:25;;;6496:12;:40;;;;:::i;:::-;6419:121;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6595:8;6575:29;6589:4;6575:29;;;;;;:::i;:::-;;;;;;;;6616:4;6609:11;;;5704:920:::0;;;;:::o;8624:142::-;8689:4;8732:1;8703:17;:25;8721:6;8703:25;;;;;;;;;;;;;;;;:30;8699:47;;8742:4;8735:11;;;;8699:47;8757:5;8750:12;;8624:142;;;;:::o;8468:107::-;8531:12;;:::i;:::-;8556:5;:15;8562:8;8556:15;;;;;;;;;;;8549:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8468:107;;;:::o;2031:212:0:-;2083:14;2100:12;:10;:12::i;:::-;2083:29;;2148:6;2130:24;;:14;:12;:14::i;:::-;:24;;;2122:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2210:26;2229:6;2210:18;:26::i;:::-;2073:170;2031:212::o;1709:1324:10:-;1928:15;1503:19:3;:17;:19::i;:::-;1979:74:10::1;1988:6;1996:7;2005:14;2021:19;2042:10;1979:8;:74::i;:::-;2121:1;2098:11;;2092:25;;:30:::0;2084:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2205:6;2198:27;;;2226:10;2246:4;2263:10;2253:7;:20;;;;:::i;:::-;2198:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2329:6;:18;2336:10;2329:18;;;;;;;;;;;;;;;;:20;;;;;;;;;:::i;:::-;;;;;;2434:10;2446:6;:18;2453:10;2446:18;;;;;;;;;;;;;;;;2423:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2413:53;;;;;;2403:63;;2495:20;2551:7;;2529:18;;;;;;;;;;;2519:28;;:7;:28;;;;:::i;:::-;2518:40;;;;:::i;:::-;2495:63;;2579:283;;;;;;;;2598:10;2579:283;;;;;;2620:6;2579:283;;;;;;2651:19;2579:283;;;;;;2686:10;2579:283;;;;2714:12;2579:283;;;;2744:5;2579:283;;;;;;2766:5;2579:283;;;;;;2791:14;2579:283;;;;;;2829:7;;2579:283;;;;;;;;2850:7;2579:283;;::::0;2562:5:::1;:14;2568:7;2562:14;;;;;;;;;;;:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2949:5;:14;2955:7;2949:14;;;;;;;;;;;:21;;;2938:6;2902:127;;2919:14;2902:127;;;2975:12;2992:7;3004:5;3014:11;;2902:127;;;;;;;;;;:::i;:::-;;;;;;;;1945:1088;1709:1324:::0;;;;;;;;;;:::o;795:114::-;3279:19:2;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;852:7:10::1;842;:17;;;;863:21;:19;:21::i;:::-;888:17;:15;:17::i;:::-;3651:14:2::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;795:114:10:o;1325:52::-;1355:13:1;:11;:13::i;:::-;1365:8:10::1;:6;:8::i;:::-;1325:52::o:0;1462:85:1:-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;8812:109:10:-;8860:6;8868:7;8889:18;;;;;;;;;;;8909:7;;8881:36;;;;8812:109;;:::o;1426:335:11:-;1355:13:1;:11;:13::i;:::-;1547:1:11::1;1530:19;;:5;:19;;::::0;1522:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:1;1587:6;:11;:26;;;;1612:1;1602:6;:11;1587:26;1579:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:15;:4;:15:::0;1645:113:::1;;1698:6;1671:17;:24;1689:5;1671:24;;;;;;;;;;;;;;;:33;;;;1739:5;1714:39;;1733:4;1714:39;1746:6;1714:39;;;;;;:::i;:::-;;;;;;;;1645:113;1426:335:::0;;;:::o;1144:99:0:-;1197:7;1223:13;;;;;;;;;;;1216:20;;1144:99;:::o;4090:1575:10:-;4242:4;1044:18;;;;;;;;;;;1030:32;;:10;:32;;;1022:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4312:5:::1;:15;4318:8;4312:15;;;;;;;;;;;:27;;;;;;;;;;;;4311:28;4303:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4371:5;:15;4377:8;4371:15;;;;;;;;;;;:26;;;;;;;;;;;;4370:27;4362:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4452:13;4468:5;:15;4474:8;4468:15;;;;;;;;;;;:21;;;;;;;;;;;;4452:37;;4586:14;4556:44;;:5;:15;4562:8;4556:15;;;;;;;;;;;:26;;;:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4639:1;4609:5;:15;4615:8;4609:15;;;;;;;;;;;:26;;;;;;;;;;;;:31;;::::0;4605:453:::1;;4722:4;4692:5;:15;4698:8;4692:15;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;4765:1;4736:5;:15;4742:8;4736:15;;;;;;;;;;;:25;;;:30;4732:321;;4808:5;:15;4814:8;4808:15;;;;;;;;;;;:21;;;;;;;;;;;;4801:38;;;4846:5;:15;4852:8;4846:15;;;;;;;;;;;:34;;;;;;;;;;;;4887:5;:15;4893:8;4887:15;;;;;;;;;;;:25;;;4801:117;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5016:5;:15;5022:8;5016:15;;;;;;;;;;;:25;;;4975:5;:15;4981:8;4975:15;;;;;;;;;;;:34;;;;;;;;;;;;4948:99;;;;;;;;;;;;4732:321;4605:453;5098:31;5176:7;;5158:14;5133:39;;:5;:15;5139:8;5133:15;;;;;;;;;;;:22;;;:39;;;;:::i;:::-;5132:51;;;;:::i;:::-;5098:85;;5213:23;5187:5;:15;5193:8;5187:15;;;;;;;;;;;:22;;;:49;;;;;;;:::i;:::-;;;;;;;;5241:19;5312:7;;5290:18;;;;;;;;;;;5264:44;;:23;:44;;;;:::i;:::-;5263:56;;;;:::i;:::-;5241:78;;5350:11;5323:38;;;;;:::i;:::-;;;5411:1;5397:11;:15;5393:73;;;5421:5;5414:22;;;5437:15;;;;;;;;;;;5454:11;5414:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5393:73;5478:5;5471:22;;;5494:18;5514:23;5471:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5610:18;5572:73;;5600:8;5572:73;5585:13;5630:14;5572:73;;;;;;;:::i;:::-;;;;;;;;5657:4;5650:11;;;;;4090:1575:::0;;;;;;:::o;1436:178:0:-;1355:13:1;:11;:13::i;:::-;1541:8:0::1;1525:13;;:24;;;;;;;;;;;;;;;;;;1598:8;1564:43;;1589:7;:5;:7::i;:::-;1564:43;;;;;;;;;;;;1436:178:::0;:::o;1620:130:1:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7;;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;1798:153:0:-;1887:13;;1880:20;;;;;;;;;;;1910:34;1935:8;1910:24;:34::i;:::-;1798:153;:::o;886:96:5:-;939:7;965:10;958:17;;886:96;:::o;2031:106:3:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;3426:427:10:-;3618:1;3589:17;:25;3607:6;3589:25;;;;;;;;;;;;;;;;:30;3581:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3664:1;3653:7;:12;3645:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;3720:1;3694:28;;:14;:28;;;3686:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3766:1;3752:10;:15;3748:102;;3813:1;3782:33;;:19;:33;;;3774:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3748:102;3426:427;;;;;:::o;1423:320:4:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;889:100:0:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;956:26:0::1;:24;:26::i;:::-;889:100::o:0;1084:97:3:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;2450:115::-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;;:14;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;2209:106::-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;2687:187:1:-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;1125:111::-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:32:1::1;1216:12;:10;:12::i;:::-;1197:18;:32::i;:::-;1125:111::o:0;1187:95:3:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1270:5:3::1;1260:7;;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:14:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:77::-;1234:7;1263:5;1252:16;;1197:77;;;:::o;1280:122::-;1353:24;1371:5;1353:24;:::i;:::-;1346:5;1343:35;1333:63;;1392:1;1389;1382:12;1333:63;1280:122;:::o;1408:139::-;1454:5;1492:6;1479:20;1470:29;;1508:33;1535:5;1508:33;:::i;:::-;1408:139;;;;:::o;1553:109::-;1589:7;1629:26;1622:5;1618:38;1607:49;;1553:109;;;:::o;1668:120::-;1740:23;1757:5;1740:23;:::i;:::-;1733:5;1730:34;1720:62;;1778:1;1775;1768:12;1720:62;1668:120;:::o;1794:137::-;1839:5;1877:6;1864:20;1855:29;;1893:32;1919:5;1893:32;:::i;:::-;1794:137;;;;:::o;1937:117::-;2046:1;2043;2036:12;2060:117;2169:1;2166;2159:12;2183:117;2292:1;2289;2282:12;2320:553;2378:8;2388:6;2438:3;2431:4;2423:6;2419:17;2415:27;2405:122;;2446:79;;:::i;:::-;2405:122;2559:6;2546:20;2536:30;;2589:18;2581:6;2578:30;2575:117;;;2611:79;;:::i;:::-;2575:117;2725:4;2717:6;2713:17;2701:29;;2779:3;2771:4;2763:6;2759:17;2749:8;2745:32;2742:41;2739:128;;;2786:79;;:::i;:::-;2739:128;2320:553;;;;;:::o;2879:1693::-;3021:6;3029;3037;3045;3053;3061;3069;3077;3085;3093;3142:3;3130:9;3121:7;3117:23;3113:33;3110:120;;;3149:79;;:::i;:::-;3110:120;3269:1;3294:53;3339:7;3330:6;3319:9;3315:22;3294:53;:::i;:::-;3284:63;;3240:117;3396:2;3422:53;3467:7;3458:6;3447:9;3443:22;3422:53;:::i;:::-;3412:63;;3367:118;3524:2;3550:53;3595:7;3586:6;3575:9;3571:22;3550:53;:::i;:::-;3540:63;;3495:118;3652:2;3678:53;3723:7;3714:6;3703:9;3699:22;3678:53;:::i;:::-;3668:63;;3623:118;3780:3;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3751:119;3909:3;3936:53;3981:7;3972:6;3961:9;3957:22;3936:53;:::i;:::-;3926:63;;3880:119;4038:3;4065:53;4110:7;4101:6;4090:9;4086:22;4065:53;:::i;:::-;4055:63;;4009:119;4167:3;4194:52;4238:7;4229:6;4218:9;4214:22;4194:52;:::i;:::-;4184:62;;4138:118;4323:3;4312:9;4308:19;4295:33;4355:18;4347:6;4344:30;4341:117;;;4377:79;;:::i;:::-;4341:117;4490:65;4547:7;4538:6;4527:9;4523:22;4490:65;:::i;:::-;4472:83;;;;4266:299;2879:1693;;;;;;;;;;;;;:::o;4578:90::-;4612:7;4655:5;4648:13;4641:21;4630:32;;4578:90;;;:::o;4674:109::-;4755:21;4770:5;4755:21;:::i;:::-;4750:3;4743:34;4674:109;;:::o;4789:210::-;4876:4;4914:2;4903:9;4899:18;4891:26;;4927:65;4989:1;4978:9;4974:17;4965:6;4927:65;:::i;:::-;4789:210;;;;:::o;5005:474::-;5073:6;5081;5130:2;5118:9;5109:7;5105:23;5101:32;5098:119;;;5136:79;;:::i;:::-;5098:119;5256:1;5281:53;5326:7;5317:6;5306:9;5302:22;5281:53;:::i;:::-;5271:63;;5227:117;5383:2;5409:53;5454:7;5445:6;5434:9;5430:22;5409:53;:::i;:::-;5399:63;;5354:118;5005:474;;;;;:::o;5485:101::-;5521:7;5561:18;5554:5;5550:30;5539:41;;5485:101;;;:::o;5592:120::-;5664:23;5681:5;5664:23;:::i;:::-;5657:5;5654:34;5644:62;;5702:1;5699;5692:12;5644:62;5592:120;:::o;5718:137::-;5763:5;5801:6;5788:20;5779:29;;5817:32;5843:5;5817:32;:::i;:::-;5718:137;;;;:::o;5861:327::-;5919:6;5968:2;5956:9;5947:7;5943:23;5939:32;5936:119;;;5974:79;;:::i;:::-;5936:119;6094:1;6119:52;6163:7;6154:6;6143:9;6139:22;6119:52;:::i;:::-;6109:62;;6065:116;5861:327;;;;:::o;6194:474::-;6262:6;6270;6319:2;6307:9;6298:7;6294:23;6290:32;6287:119;;;6325:79;;:::i;:::-;6287:119;6445:1;6470:53;6515:7;6506:6;6495:9;6491:22;6470:53;:::i;:::-;6460:63;;6416:117;6572:2;6598:53;6643:7;6634:6;6623:9;6619:22;6598:53;:::i;:::-;6588:63;;6543:118;6194:474;;;;;:::o;6674:329::-;6733:6;6782:2;6770:9;6761:7;6757:23;6753:32;6750:119;;;6788:79;;:::i;:::-;6750:119;6908:1;6933:53;6978:7;6969:6;6958:9;6954:22;6933:53;:::i;:::-;6923:63;;6879:117;6674:329;;;;:::o;7009:::-;7068:6;7117:2;7105:9;7096:7;7092:23;7088:32;7085:119;;;7123:79;;:::i;:::-;7085:119;7243:1;7268:53;7313:7;7304:6;7293:9;7289:22;7268:53;:::i;:::-;7258:63;;7214:117;7009:329;;;;:::o;7344:108::-;7421:24;7439:5;7421:24;:::i;:::-;7416:3;7409:37;7344:108;;:::o;7458:::-;7535:24;7553:5;7535:24;:::i;:::-;7530:3;7523:37;7458:108;;:::o;7572:99::-;7643:21;7658:5;7643:21;:::i;:::-;7638:3;7631:34;7572:99;;:::o;7677:105::-;7752:23;7769:5;7752:23;:::i;:::-;7747:3;7740:36;7677:105;;:::o;7842:1950::-;7985:6;7980:3;7976:16;8076:4;8069:5;8065:16;8059:23;8095:63;8152:4;8147:3;8143:14;8129:12;8095:63;:::i;:::-;8002:166;8251:4;8244:5;8240:16;8234:23;8270:63;8327:4;8322:3;8318:14;8304:12;8270:63;:::i;:::-;8178:165;8439:4;8432:5;8428:16;8422:23;8458:63;8515:4;8510:3;8506:14;8492:12;8458:63;:::i;:::-;8353:178;8618:4;8611:5;8607:16;8601:23;8637:63;8694:4;8689:3;8685:14;8671:12;8637:63;:::i;:::-;8541:169;8799:4;8792:5;8788:16;8782:23;8818:63;8875:4;8870:3;8866:14;8852:12;8818:63;:::i;:::-;8720:171;8980:4;8973:5;8969:16;8963:23;8999:57;9050:4;9045:3;9041:14;9027:12;8999:57;:::i;:::-;8901:165;9154:4;9147:5;9143:16;9137:23;9173:57;9224:4;9219:3;9215:14;9201:12;9173:57;:::i;:::-;9076:164;9331:4;9324:5;9320:16;9314:23;9350:63;9407:4;9402:3;9398:14;9384:12;9350:63;:::i;:::-;9250:173;9511:6;9504:5;9500:18;9494:25;9532:63;9587:6;9582:3;9578:16;9564:12;9532:63;:::i;:::-;9433:172;9689:6;9682:5;9678:18;9672:25;9710:65;9767:6;9762:3;9758:16;9744:12;9710:65;:::i;:::-;9615:170;7954:1838;7842:1950;;:::o;9798:315::-;9937:4;9975:3;9964:9;9960:19;9952:27;;9989:117;10103:1;10092:9;10088:17;10079:6;9989:117;:::i;:::-;9798:315;;;;:::o;10119:1401::-;10243:6;10251;10259;10267;10275;10283;10291;10299;10348:3;10336:9;10327:7;10323:23;10319:33;10316:120;;;10355:79;;:::i;:::-;10316:120;10475:1;10500:53;10545:7;10536:6;10525:9;10521:22;10500:53;:::i;:::-;10490:63;;10446:117;10602:2;10628:53;10673:7;10664:6;10653:9;10649:22;10628:53;:::i;:::-;10618:63;;10573:118;10730:2;10756:52;10800:7;10791:6;10780:9;10776:22;10756:52;:::i;:::-;10746:62;;10701:117;10857:2;10883:53;10928:7;10919:6;10908:9;10904:22;10883:53;:::i;:::-;10873:63;;10828:118;10985:3;11012:53;11057:7;11048:6;11037:9;11033:22;11012:53;:::i;:::-;11002:63;;10956:119;11114:3;11141:53;11186:7;11177:6;11166:9;11162:22;11141:53;:::i;:::-;11131:63;;11085:119;11271:3;11260:9;11256:19;11243:33;11303:18;11295:6;11292:30;11289:117;;;11325:79;;:::i;:::-;11289:117;11438:65;11495:7;11486:6;11475:9;11471:22;11438:65;:::i;:::-;11420:83;;;;11214:299;10119:1401;;;;;;;;;;;:::o;11526:118::-;11613:24;11631:5;11613:24;:::i;:::-;11608:3;11601:37;11526:118;;:::o;11650:222::-;11743:4;11781:2;11770:9;11766:18;11758:26;;11794:71;11862:1;11851:9;11847:17;11838:6;11794:71;:::i;:::-;11650:222;;;;:::o;11878:118::-;11965:24;11983:5;11965:24;:::i;:::-;11960:3;11953:37;11878:118;;:::o;12002:222::-;12095:4;12133:2;12122:9;12118:18;12110:26;;12146:71;12214:1;12203:9;12199:17;12190:6;12146:71;:::i;:::-;12002:222;;;;:::o;12230:115::-;12315:23;12332:5;12315:23;:::i;:::-;12310:3;12303:36;12230:115;;:::o;12351:118::-;12438:24;12456:5;12438:24;:::i;:::-;12433:3;12426:37;12351:118;;:::o;12475:328::-;12594:4;12632:2;12621:9;12617:18;12609:26;;12645:69;12711:1;12700:9;12696:17;12687:6;12645:69;:::i;:::-;12724:72;12792:2;12781:9;12777:18;12768:6;12724:72;:::i;:::-;12475:328;;;;;:::o;12809:619::-;12886:6;12894;12902;12951:2;12939:9;12930:7;12926:23;12922:32;12919:119;;;12957:79;;:::i;:::-;12919:119;13077:1;13102:53;13147:7;13138:6;13127:9;13123:22;13102:53;:::i;:::-;13092:63;;13048:117;13204:2;13230:53;13275:7;13266:6;13255:9;13251:22;13230:53;:::i;:::-;13220:63;;13175:118;13332:2;13358:53;13403:7;13394:6;13383:9;13379:22;13358:53;:::i;:::-;13348:63;;13303:118;12809:619;;;;;:::o;13434:763::-;13519:6;13527;13535;13543;13592:3;13580:9;13571:7;13567:23;13563:33;13560:120;;;13599:79;;:::i;:::-;13560:120;13719:1;13744:53;13789:7;13780:6;13769:9;13765:22;13744:53;:::i;:::-;13734:63;;13690:117;13846:2;13872:53;13917:7;13908:6;13897:9;13893:22;13872:53;:::i;:::-;13862:63;;13817:118;13974:2;14000:53;14045:7;14036:6;14025:9;14021:22;14000:53;:::i;:::-;13990:63;;13945:118;14102:2;14128:52;14172:7;14163:6;14152:9;14148:22;14128:52;:::i;:::-;14118:62;;14073:117;13434:763;;;;;;;:::o;14203:169::-;14287:11;14321:6;14316:3;14309:19;14361:4;14356:3;14352:14;14337:29;;14203:169;;;;:::o;14378:164::-;14518:16;14514:1;14506:6;14502:14;14495:40;14378:164;:::o;14548:366::-;14690:3;14711:67;14775:2;14770:3;14711:67;:::i;:::-;14704:74;;14787:93;14876:3;14787:93;:::i;:::-;14905:2;14900:3;14896:12;14889:19;;14548:366;;;:::o;14920:419::-;15086:4;15124:2;15113:9;15109:18;15101:26;;15173:9;15167:4;15163:20;15159:1;15148:9;15144:17;15137:47;15201:131;15327:4;15201:131;:::i;:::-;15193:139;;14920:419;;;:::o;15345:167::-;15485:19;15481:1;15473:6;15469:14;15462:43;15345:167;:::o;15518:366::-;15660:3;15681:67;15745:2;15740:3;15681:67;:::i;:::-;15674:74;;15757:93;15846:3;15757:93;:::i;:::-;15875:2;15870:3;15866:12;15859:19;;15518:366;;;:::o;15890:419::-;16056:4;16094:2;16083:9;16079:18;16071:26;;16143:9;16137:4;16133:20;16129:1;16118:9;16114:17;16107:47;16171:131;16297:4;16171:131;:::i;:::-;16163:139;;15890:419;;;:::o;16315:162::-;16455:14;16451:1;16443:6;16439:14;16432:38;16315:162;:::o;16483:366::-;16625:3;16646:67;16710:2;16705:3;16646:67;:::i;:::-;16639:74;;16722:93;16811:3;16722:93;:::i;:::-;16840:2;16835:3;16831:12;16824:19;;16483:366;;;:::o;16855:419::-;17021:4;17059:2;17048:9;17044:18;17036:26;;17108:9;17102:4;17098:20;17094:1;17083:9;17079:17;17072:47;17136:131;17262:4;17136:131;:::i;:::-;17128:139;;16855:419;;;:::o;17280:172::-;17420:24;17416:1;17408:6;17404:14;17397:48;17280:172;:::o;17458:366::-;17600:3;17621:67;17685:2;17680:3;17621:67;:::i;:::-;17614:74;;17697:93;17786:3;17697:93;:::i;:::-;17815:2;17810:3;17806:12;17799:19;;17458:366;;;:::o;17830:419::-;17996:4;18034:2;18023:9;18019:18;18011:26;;18083:9;18077:4;18073:20;18069:1;18058:9;18054:17;18047:47;18111:131;18237:4;18111:131;:::i;:::-;18103:139;;17830:419;;;:::o;18255:181::-;18395:33;18391:1;18383:6;18379:14;18372:57;18255:181;:::o;18442:366::-;18584:3;18605:67;18669:2;18664:3;18605:67;:::i;:::-;18598:74;;18681:93;18770:3;18681:93;:::i;:::-;18799:2;18794:3;18790:12;18783:19;;18442:366;;;:::o;18814:419::-;18980:4;19018:2;19007:9;19003:18;18995:26;;19067:9;19061:4;19057:20;19053:1;19042:9;19038:17;19031:47;19095:131;19221:4;19095:131;:::i;:::-;19087:139;;18814:419;;;:::o;19239:332::-;19360:4;19398:2;19387:9;19383:18;19375:26;;19411:71;19479:1;19468:9;19464:17;19455:6;19411:71;:::i;:::-;19492:72;19560:2;19549:9;19545:18;19536:6;19492:72;:::i;:::-;19239:332;;;;;:::o;19577:116::-;19647:21;19662:5;19647:21;:::i;:::-;19640:5;19637:32;19627:60;;19683:1;19680;19673:12;19627:60;19577:116;:::o;19699:137::-;19753:5;19784:6;19778:13;19769:22;;19800:30;19824:5;19800:30;:::i;:::-;19699:137;;;;:::o;19842:345::-;19909:6;19958:2;19946:9;19937:7;19933:23;19929:32;19926:119;;;19964:79;;:::i;:::-;19926:119;20084:1;20109:61;20162:7;20153:6;20142:9;20138:22;20109:61;:::i;:::-;20099:71;;20055:125;19842:345;;;;:::o;20193:180::-;20241:77;20238:1;20231:88;20338:4;20335:1;20328:15;20362:4;20359:1;20352:15;20379:410;20419:7;20442:20;20460:1;20442:20;:::i;:::-;20437:25;;20476:20;20494:1;20476:20;:::i;:::-;20471:25;;20531:1;20528;20524:9;20553:30;20571:11;20553:30;:::i;:::-;20542:41;;20732:1;20723:7;20719:15;20716:1;20713:22;20693:1;20686:9;20666:83;20643:139;;20762:18;;:::i;:::-;20643:139;20427:362;20379:410;;;;:::o;20795:180::-;20843:77;20840:1;20833:88;20940:4;20937:1;20930:15;20964:4;20961:1;20954:15;20981:185;21021:1;21038:20;21056:1;21038:20;:::i;:::-;21033:25;;21072:20;21090:1;21072:20;:::i;:::-;21067:25;;21111:1;21101:35;;21116:18;;:::i;:::-;21101:35;21158:1;21155;21151:9;21146:14;;20981:185;;;;:::o;21172:194::-;21212:4;21232:20;21250:1;21232:20;:::i;:::-;21227:25;;21266:20;21284:1;21266:20;:::i;:::-;21261:25;;21310:1;21307;21303:9;21295:17;;21334:1;21328:4;21325:11;21322:37;;;21339:18;;:::i;:::-;21322:37;21172:194;;;;:::o;21372:115::-;21457:23;21474:5;21457:23;:::i;:::-;21452:3;21445:36;21372:115;;:::o;21493:146::-;21590:6;21585:3;21580;21567:30;21631:1;21622:6;21617:3;21613:16;21606:27;21493:146;;;:::o;21645:102::-;21686:6;21737:2;21733:7;21728:2;21721:5;21717:14;21713:28;21703:38;;21645:102;;;:::o;21777:317::-;21875:3;21896:71;21960:6;21955:3;21896:71;:::i;:::-;21889:78;;21977:56;22026:6;22021:3;22014:5;21977:56;:::i;:::-;22058:29;22080:6;22058:29;:::i;:::-;22053:3;22049:39;22042:46;;21777:317;;;;;:::o;22100:771::-;22333:4;22371:3;22360:9;22356:19;22348:27;;22385:71;22453:1;22442:9;22438:17;22429:6;22385:71;:::i;:::-;22466:72;22534:2;22523:9;22519:18;22510:6;22466:72;:::i;:::-;22548;22616:2;22605:9;22601:18;22592:6;22548:72;:::i;:::-;22630:70;22696:2;22685:9;22681:18;22672:6;22630:70;:::i;:::-;22748:9;22742:4;22738:20;22732:3;22721:9;22717:19;22710:49;22776:88;22859:4;22850:6;22842;22776:88;:::i;:::-;22768:96;;22100:771;;;;;;;;;:::o;22877:171::-;23017:23;23013:1;23005:6;23001:14;22994:47;22877:171;:::o;23054:366::-;23196:3;23217:67;23281:2;23276:3;23217:67;:::i;:::-;23210:74;;23293:93;23382:3;23293:93;:::i;:::-;23411:2;23406:3;23402:12;23395:19;;23054:366;;;:::o;23426:419::-;23592:4;23630:2;23619:9;23615:18;23607:26;;23679:9;23673:4;23669:20;23665:1;23654:9;23650:17;23643:47;23707:131;23833:4;23707:131;:::i;:::-;23699:139;;23426:419;;;:::o;23851:224::-;23991:34;23987:1;23979:6;23975:14;23968:58;24060:7;24055:2;24047:6;24043:15;24036:32;23851:224;:::o;24081:366::-;24223:3;24244:67;24308:2;24303:3;24244:67;:::i;:::-;24237:74;;24320:93;24409:3;24320:93;:::i;:::-;24438:2;24433:3;24429:12;24422:19;;24081:366;;;:::o;24453:419::-;24619:4;24657:2;24646:9;24642:18;24634:26;;24706:9;24700:4;24696:20;24692:1;24681:9;24677:17;24670:47;24734:131;24860:4;24734:131;:::i;:::-;24726:139;;24453:419;;;:::o;24878:226::-;25018:34;25014:1;25006:6;25002:14;24995:58;25087:9;25082:2;25074:6;25070:15;25063:34;24878:226;:::o;25110:366::-;25252:3;25273:67;25337:2;25332:3;25273:67;:::i;:::-;25266:74;;25349:93;25438:3;25349:93;:::i;:::-;25467:2;25462:3;25458:12;25451:19;;25110:366;;;:::o;25482:419::-;25648:4;25686:2;25675:9;25671:18;25663:26;;25735:9;25729:4;25725:20;25721:1;25710:9;25706:17;25699:47;25763:131;25889:4;25763:131;:::i;:::-;25755:139;;25482:419;;;:::o;25907:218::-;25998:4;26036:2;26025:9;26021:18;26013:26;;26049:69;26115:1;26104:9;26100:17;26091:6;26049:69;:::i;:::-;25907:218;;;;:::o;26131:164::-;26271:16;26267:1;26259:6;26255:14;26248:40;26131:164;:::o;26301:366::-;26443:3;26464:67;26528:2;26523:3;26464:67;:::i;:::-;26457:74;;26540:93;26629:3;26540:93;:::i;:::-;26658:2;26653:3;26649:12;26642:19;;26301:366;;;:::o;26673:419::-;26839:4;26877:2;26866:9;26862:18;26854:26;;26926:9;26920:4;26916:20;26912:1;26901:9;26897:17;26890:47;26954:131;27080:4;26954:131;:::i;:::-;26946:139;;26673:419;;;:::o;27098:163::-;27238:15;27234:1;27226:6;27222:14;27215:39;27098:163;:::o;27267:366::-;27409:3;27430:67;27494:2;27489:3;27430:67;:::i;:::-;27423:74;;27506:93;27595:3;27506:93;:::i;:::-;27624:2;27619:3;27615:12;27608:19;;27267:366;;;:::o;27639:419::-;27805:4;27843:2;27832:9;27828:18;27820:26;;27892:9;27886:4;27882:20;27878:1;27867:9;27863:17;27856:47;27920:131;28046:4;27920:131;:::i;:::-;27912:139;;27639:419;;;:::o;28064:171::-;28204:23;28200:1;28192:6;28188:14;28181:47;28064:171;:::o;28241:366::-;28383:3;28404:67;28468:2;28463:3;28404:67;:::i;:::-;28397:74;;28480:93;28569:3;28480:93;:::i;:::-;28598:2;28593:3;28589:12;28582:19;;28241:366;;;:::o;28613:419::-;28779:4;28817:2;28806:9;28802:18;28794:26;;28866:9;28860:4;28856:20;28852:1;28841:9;28837:17;28830:47;28894:131;29020:4;28894:131;:::i;:::-;28886:139;;28613:419;;;:::o;29038:191::-;29078:3;29097:20;29115:1;29097:20;:::i;:::-;29092:25;;29131:20;29149:1;29131:20;:::i;:::-;29126:25;;29174:1;29171;29167:9;29160:16;;29195:3;29192:1;29189:10;29186:36;;;29202:18;;:::i;:::-;29186:36;29038:191;;;;:::o;29235:222::-;29328:4;29366:2;29355:9;29351:18;29343:26;;29379:71;29447:1;29436:9;29432:17;29423:6;29379:71;:::i;:::-;29235:222;;;;:::o;29463:228::-;29603:34;29599:1;29591:6;29587:14;29580:58;29672:11;29667:2;29659:6;29655:15;29648:36;29463:228;:::o;29697:366::-;29839:3;29860:67;29924:2;29919:3;29860:67;:::i;:::-;29853:74;;29936:93;30025:3;29936:93;:::i;:::-;30054:2;30049:3;30045:12;30038:19;;29697:366;;;:::o;30069:419::-;30235:4;30273:2;30262:9;30258:18;30250:26;;30322:9;30316:4;30312:20;30308:1;30297:9;30293:17;30286:47;30350:131;30476:4;30350:131;:::i;:::-;30342:139;;30069:419;;;:::o;30494:168::-;30634:20;30630:1;30622:6;30618:14;30611:44;30494:168;:::o;30668:366::-;30810:3;30831:67;30895:2;30890:3;30831:67;:::i;:::-;30824:74;;30907:93;30996:3;30907:93;:::i;:::-;31025:2;31020:3;31016:12;31009:19;;30668:366;;;:::o;31040:419::-;31206:4;31244:2;31233:9;31229:18;31221:26;;31293:9;31287:4;31283:20;31279:1;31268:9;31264:17;31257:47;31321:131;31447:4;31321:131;:::i;:::-;31313:139;;31040:419;;;:::o;31465:442::-;31614:4;31652:2;31641:9;31637:18;31629:26;;31665:71;31733:1;31722:9;31718:17;31709:6;31665:71;:::i;:::-;31746:72;31814:2;31803:9;31799:18;31790:6;31746:72;:::i;:::-;31828;31896:2;31885:9;31881:18;31872:6;31828:72;:::i;:::-;31465:442;;;;;;:::o;31913:233::-;31952:3;31975:24;31993:5;31975:24;:::i;:::-;31966:33;;32021:66;32014:5;32011:77;32008:103;;32091:18;;:::i;:::-;32008:103;32138:1;32131:5;32127:13;32120:20;;31913:233;;;:::o;32152:60::-;32180:3;32201:5;32194:12;;32152:60;;;:::o;32218:140::-;32267:9;32300:52;32318:33;32327:23;32344:5;32327:23;:::i;:::-;32318:33;:::i;:::-;32300:52;:::i;:::-;32287:65;;32218:140;;;:::o;32364:129::-;32450:36;32480:5;32450:36;:::i;:::-;32445:3;32438:49;32364:129;;:::o;32499:662::-;32705:4;32743:3;32732:9;32728:19;32720:27;;32757:71;32825:1;32814:9;32810:17;32801:6;32757:71;:::i;:::-;32838:72;32906:2;32895:9;32891:18;32882:6;32838:72;:::i;:::-;32920:71;32987:2;32976:9;32972:18;32963:6;32920:71;:::i;:::-;33038:9;33032:4;33028:20;33023:2;33012:9;33008:18;33001:48;33066:88;33149:4;33140:6;33132;33066:88;:::i;:::-;33058:96;;32499:662;;;;;;;;:::o;33167:233::-;33307:34;33303:1;33295:6;33291:14;33284:58;33376:16;33371:2;33363:6;33359:15;33352:41;33167:233;:::o;33406:366::-;33548:3;33569:67;33633:2;33628:3;33569:67;:::i;:::-;33562:74;;33645:93;33734:3;33645:93;:::i;:::-;33763:2;33758:3;33754:12;33747:19;;33406:366;;;:::o;33778:419::-;33944:4;33982:2;33971:9;33967:18;33959:26;;34031:9;34025:4;34021:20;34017:1;34006:9;34002:17;33995:47;34059:131;34185:4;34059:131;:::i;:::-;34051:139;;33778:419;;;:::o;34203:85::-;34248:7;34277:5;34266:16;;34203:85;;;:::o;34294:86::-;34329:7;34369:4;34362:5;34358:16;34347:27;;34294:86;;;:::o;34386:154::-;34442:9;34475:59;34491:42;34500:32;34526:5;34500:32;:::i;:::-;34491:42;:::i;:::-;34475:59;:::i;:::-;34462:72;;34386:154;;;:::o;34546:143::-;34639:43;34676:5;34639:43;:::i;:::-;34634:3;34627:56;34546:143;;:::o;34695:234::-;34794:4;34832:2;34821:9;34817:18;34809:26;;34845:77;34919:1;34908:9;34904:17;34895:6;34845:77;:::i;:::-;34695:234;;;;:::o;34935:173::-;35075:25;35071:1;35063:6;35059:14;35052:49;34935:173;:::o;35114:366::-;35256:3;35277:67;35341:2;35336:3;35277:67;:::i;:::-;35270:74;;35353:93;35442:3;35353:93;:::i;:::-;35471:2;35466:3;35462:12;35455:19;;35114:366;;;:::o;35486:419::-;35652:4;35690:2;35679:9;35675:18;35667:26;;35739:9;35733:4;35729:20;35725:1;35714:9;35710:17;35703:47;35767:131;35893:4;35767:131;:::i;:::-;35759:139;;35486:419;;;:::o;35911:216::-;35950:4;35970:19;35987:1;35970:19;:::i;:::-;35965:24;;36003:19;36020:1;36003:19;:::i;:::-;35998:24;;36046:1;36043;36039:9;36031:17;;36070:26;36064:4;36061:36;36058:62;;;36100:18;;:::i;:::-;36058:62;35911:216;;;;:::o;36133:138::-;36181:9;36214:51;36231:33;36240:23;36257:5;36240:23;:::i;:::-;36231:33;:::i;:::-;36214:51;:::i;:::-;36201:64;;36133:138;;;:::o;36277:127::-;36362:35;36391:5;36362:35;:::i;:::-;36357:3;36350:48;36277:127;;:::o;36410:328::-;36529:4;36567:2;36556:9;36552:18;36544:26;;36580:71;36648:1;36637:9;36633:17;36624:6;36580:71;:::i;:::-;36661:70;36727:2;36716:9;36712:18;36703:6;36661:70;:::i;:::-;36410:328;;;;;:::o;36744:182::-;36884:34;36880:1;36872:6;36868:14;36861:58;36744:182;:::o;36932:366::-;37074:3;37095:67;37159:2;37154:3;37095:67;:::i;:::-;37088:74;;37171:93;37260:3;37171:93;:::i;:::-;37289:2;37284:3;37280:12;37273:19;;36932:366;;;:::o;37304:419::-;37470:4;37508:2;37497:9;37493:18;37485:26;;37557:9;37551:4;37547:20;37543:1;37532:9;37528:17;37521:47;37585:131;37711:4;37585:131;:::i;:::-;37577:139;;37304:419;;;:::o;37729:166::-;37869:18;37865:1;37857:6;37853:14;37846:42;37729:166;:::o;37901:366::-;38043:3;38064:67;38128:2;38123:3;38064:67;:::i;:::-;38057:74;;38140:93;38229:3;38140:93;:::i;:::-;38258:2;38253:3;38249:12;38242:19;;37901:366;;;:::o;38273:419::-;38439:4;38477:2;38466:9;38462:18;38454:26;;38526:9;38520:4;38516:20;38512:1;38501:9;38497:17;38490:47;38554:131;38680:4;38554:131;:::i;:::-;38546:139;;38273:419;;;:::o;38698:167::-;38838:19;38834:1;38826:6;38822:14;38815:43;38698:167;:::o;38871:366::-;39013:3;39034:67;39098:2;39093:3;39034:67;:::i;:::-;39027:74;;39110:93;39199:3;39110:93;:::i;:::-;39228:2;39223:3;39219:12;39212:19;;38871:366;;;:::o;39243:419::-;39409:4;39447:2;39436:9;39432:18;39424:26;;39496:9;39490:4;39486:20;39482:1;39471:9;39467:17;39460:47;39524:131;39650:4;39524:131;:::i;:::-;39516:139;;39243:419;;;:::o;39668:166::-;39808:18;39804:1;39796:6;39792:14;39785:42;39668:166;:::o;39840:366::-;39982:3;40003:67;40067:2;40062:3;40003:67;:::i;:::-;39996:74;;40079:93;40168:3;40079:93;:::i;:::-;40197:2;40192:3;40188:12;40181:19;;39840:366;;;:::o;40212:419::-;40378:4;40416:2;40405:9;40401:18;40393:26;;40465:9;40459:4;40455:20;40451:1;40440:9;40436:17;40429:47;40493:131;40619:4;40493:131;:::i;:::-;40485:139;;40212:419;;;:::o;40637:175::-;40777:27;40773:1;40765:6;40761:14;40754:51;40637:175;:::o;40818:366::-;40960:3;40981:67;41045:2;41040:3;40981:67;:::i;:::-;40974:74;;41057:93;41146:3;41057:93;:::i;:::-;41175:2;41170:3;41166:12;41159:19;;40818:366;;;:::o;41190:419::-;41356:4;41394:2;41383:9;41379:18;41371:26;;41443:9;41437:4;41433:20;41429:1;41418:9;41414:17;41407:47;41471:131;41597:4;41471:131;:::i;:::-;41463:139;;41190:419;;;:::o;41615:230::-;41755:34;41751:1;41743:6;41739:14;41732:58;41824:13;41819:2;41811:6;41807:15;41800:38;41615:230;:::o;41851:366::-;41993:3;42014:67;42078:2;42073:3;42014:67;:::i;:::-;42007:74;;42090:93;42179:3;42090:93;:::i;:::-;42208:2;42203:3;42199:12;42192:19;;41851:366;;;:::o;42223:419::-;42389:4;42427:2;42416:9;42412:18;42404:26;;42476:9;42470:4;42466:20;42462:1;42451:9;42447:17;42440:47;42504:131;42630:4;42504:131;:::i;:::-;42496:139;;42223:419;;;:::o;42648:170::-;42788:22;42784:1;42776:6;42772:14;42765:46;42648:170;:::o;42824:366::-;42966:3;42987:67;43051:2;43046:3;42987:67;:::i;:::-;42980:74;;43063:93;43152:3;43063:93;:::i;:::-;43181:2;43176:3;43172:12;43165:19;;42824:366;;;:::o;43196:419::-;43362:4;43400:2;43389:9;43385:18;43377:26;;43449:9;43443:4;43439:20;43435:1;43424:9;43420:17;43413:47;43477:131;43603:4;43477:131;:::i;:::-;43469:139;;43196:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3335400","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54681","createOrder(address,uint256,uint96,address,uint256,address,string)":"infinite","getFeeDetails()":"4715","getOrderInfo(bytes32)":"infinite","initialize()":"191300","isTokenSupported(address)":"2970","owner()":"2633","pause()":"infinite","paused()":"2502","pendingOwner()":"2588","processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)":"infinite","refund(uint256,bytes32)":"infinite","renounceOwnership()":"54714","settingManagerBool(bytes32,address,uint256)":"infinite","settle(bytes32,bytes32,address,uint64)":"infinite","transferOwnership(address)":"infinite","unpause()":"infinite","updateProtocolAddress(bytes32,address)":"31139","updateProtocolFee(uint64)":"infinite"},"internal":{"_handler(address,uint256,address,address,uint256)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","createOrder(address,uint256,uint96,address,uint256,address,string)":"809804f7","getFeeDetails()":"b810c636","getOrderInfo(bytes32)":"768c6ec0","initialize()":"8129fc1c","isTokenSupported(address)":"75151b63","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","pendingOwner()":"e30c3978","processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)":"3d3f14f4","refund(uint256,bytes32)":"71eedb88","renounceOwnership()":"715018a6","settingManagerBool(bytes32,address,uint256)":"cd992400","settle(bytes32,bytes32,address,uint64)":"f22ee704","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateProtocolAddress(bytes32,address)":"40ebc677","updateProtocolFee(uint64)":"47094e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"splitOrderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"settlePercent\",\"type\":\"uint96\"}],\"name\":\"OrderSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"senderFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"rate\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"ProcessSettlement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"ProtocolAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"protocolFee\",\"type\":\"uint64\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SenderFeeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"SetFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"SettingManagerBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_senderFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDetails\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"currentBPS\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGateway.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_senderFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"string\",\"name\":\"_messageHash\",\"type\":\"string\"}],\"name\":\"processSettlement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"settingManagerBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_splitOrderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_settlePercent\",\"type\":\"uint64\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"updateProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_protocolFeePercent\",\"type\":\"uint64\"}],\"name\":\"updateProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OrderCreated(address,address,uint256,uint256,bytes32,uint256,string)\":{\"details\":\"Emitted when a deposit is made.\",\"params\":{\"amount\":\"The amount of the deposit.\",\"messageHash\":\"The hash of the message.\",\"orderId\":\"The ID of the order.\",\"rate\":\"The rate at which the deposit is made.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"OrderRefunded(uint256,bytes32)\":{\"details\":\"Emitted when an aggregator refunds a transaction.\",\"params\":{\"fee\":\"The fee deducted from the refund amount.\",\"orderId\":\"The ID of the order.\"}},\"OrderSettled(bytes32,bytes32,address,uint96)\":{\"details\":\"Emitted when an aggregator settles a transaction.\",\"params\":{\"liquidityProvider\":\"The address of the liquidity provider.\",\"orderId\":\"The ID of the order.\",\"settlePercent\":\"The percentage at which the transaction is settled.\",\"splitOrderId\":\"The ID of the split order.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"ProcessSettlement(bytes32,uint256,address,address,address,address,uint96,string)\":{\"details\":\"Emitted when an onramp order is successfully processed\"},\"SenderFeeTransferred(address,uint256)\":{\"details\":\"Emitted when the sender's fee is transferred.\",\"params\":{\"amount\":\"The amount of the fee transferred.\",\"sender\":\"The address of the sender.\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createOrder(address,uint256,uint96,address,uint256,address,string)\":{\"details\":\"See {createOrder-IGateway}. \"},\"getFeeDetails()\":{\"details\":\"See {getFeeDetails-IGateway}. \"},\"getOrderInfo(bytes32)\":{\"details\":\"See {getOrderInfo-IGateway}. \"},\"initialize()\":{\"details\":\"Initialize function.\"},\"isTokenSupported(address)\":{\"details\":\"See {isTokenSupported-IGateway}. \"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)\":{\"details\":\"See {processSettlement-IGateway}. \"},\"refund(uint256,bytes32)\":{\"details\":\"See {refund-IGateway}. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"settingManagerBool(bytes32,address,uint256)\":{\"details\":\"Sets the boolean value for a specific setting.\",\"params\":{\"status\":\"The boolean value to be set. Requirements: - The value must not be a zero address.\",\"value\":\"The address or value associated with the setting.\",\"what\":\"The setting to be updated.\"}},\"settle(bytes32,bytes32,address,uint64)\":{\"details\":\"See {settle-IGateway}. \"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause the contract.\"},\"updateProtocolAddress(bytes32,address)\":{\"details\":\"Updates a protocol address.\",\"params\":{\"value\":\"The new address to be set. Requirements: - The value must not be a zero address.\",\"what\":\"The address type to be updated (treasury or aggregator).\"}},\"updateProtocolFee(uint64)\":{\"details\":\"Updates the protocol fee percentage.\",\"params\":{\"_protocolFeePercent\":\"The new protocol fee percentage to be set.\"}}},\"title\":\"Gateway\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract serves as a gateway for creating orders and managing settlements.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gateway.sol\":\"Gateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Gateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\\n\\nimport {GatewaySettingManager} from './GatewaySettingManager.sol';\\nimport {IGateway, IERC20} from './interfaces/IGateway.sol';\\n\\n/**\\n * @title Gateway\\n * @notice This contract serves as a gateway for creating orders and managing settlements.\\n */\\ncontract Gateway is IGateway, GatewaySettingManager, PausableUpgradeable {\\n\\tstruct fee {\\n\\t\\tuint256 protocolFee;\\n\\t\\tuint256 liquidityProviderAmount;\\n\\t}\\n\\n\\tmapping(bytes32 => Order) private order;\\n\\tmapping(address => uint256) private _nonce;\\n\\tuint256[50] private __gap;\\n\\n\\t/// @custom:oz-upgrades-unsafe-allow constructor\\n\\tconstructor() {\\n\\t\\t_disableInitializers();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Initialize function.\\n\\t */\\n\\tfunction initialize() external initializer {\\n\\t\\tMAX_BPS = 100_000;\\n\\t\\t__Ownable2Step_init();\\n\\t\\t__Pausable_init();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Modifier that allows only the aggregator to call a function.\\n\\t */\\n\\tmodifier onlyAggregator() {\\n\\t\\trequire(msg.sender == _aggregatorAddress, 'OnlyAggregator');\\n\\t\\t_;\\n\\t}\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\t/**\\n\\t * @dev Pause the contract.\\n\\t */\\n\\tfunction pause() external onlyOwner {\\n\\t\\t_pause();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Unpause the contract.\\n\\t */\\n\\tfunction unpause() external onlyOwner {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\t/* ##################################################################\\n                                USER CALLS\\n    ################################################################## */\\n\\t/** @dev See {createOrder-IGateway}. */\\n\\tfunction createOrder(\\n\\t\\taddress _token,\\n\\t\\tuint256 _amount,\\n\\t\\tuint96 _rate,\\n\\t\\taddress _senderFeeRecipient,\\n\\t\\tuint256 _senderFee,\\n\\t\\taddress _refundAddress,\\n\\t\\tstring calldata messageHash\\n\\t) external whenNotPaused returns (bytes32 orderId) {\\n\\t\\t// checks that are required\\n\\t\\t_handler(_token, _amount, _refundAddress, _senderFeeRecipient, _senderFee);\\n\\n\\t\\t// validate messageHash\\n\\t\\trequire(bytes(messageHash).length != 0, 'InvalidMessageHash');\\n\\n\\t\\t// transfer token from msg.sender to contract\\n\\t\\tIERC20(_token).transferFrom(msg.sender, address(this), _amount + _senderFee);\\n\\n\\t\\t// increase users nonce to avoid replay attacks\\n\\t\\t_nonce[msg.sender]++;\\n\\n\\t\\t// generate transaction id for the transaction\\n\\t\\torderId = keccak256(abi.encode(msg.sender, _nonce[msg.sender]));\\n\\n\\t\\t// update transaction\\n\\t\\tuint256 _protocolFee = (_amount * protocolFeePercent) / MAX_BPS;\\n\\t\\torder[orderId] = Order({\\n\\t\\t\\tsender: msg.sender,\\n\\t\\t\\ttoken: _token,\\n\\t\\t\\tsenderFeeRecipient: _senderFeeRecipient,\\n\\t\\t\\tsenderFee: _senderFee,\\n\\t\\t\\tprotocolFee: _protocolFee,\\n\\t\\t\\tisFulfilled: false,\\n\\t\\t\\tisRefunded: false,\\n\\t\\t\\trefundAddress: _refundAddress,\\n\\t\\t\\tcurrentBPS: uint64(MAX_BPS),\\n\\t\\t\\tamount: _amount\\n\\t\\t});\\n\\n\\t\\t// emit order created event\\n\\t\\temit OrderCreated(\\n\\t\\t\\t_refundAddress,\\n\\t\\t\\t_token,\\n\\t\\t\\torder[orderId].amount,\\n\\t\\t\\t_protocolFee,\\n\\t\\t\\torderId,\\n\\t\\t\\t_rate,\\n\\t\\t\\tmessageHash\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Internal function to handle order creation.\\n\\t * @param _token The address of the token being traded.\\n\\t * @param _amount The amount of tokens being traded.\\n\\t * @param _refundAddress The address to refund the tokens in case of cancellation.\\n\\t * @param _senderFeeRecipient The address of the recipient for the sender fee.\\n\\t * @param _senderFee The amount of the sender fee.\\n\\t */\\n\\tfunction _handler(\\n\\t\\taddress _token,\\n\\t\\tuint256 _amount,\\n\\t\\taddress _refundAddress,\\n\\t\\taddress _senderFeeRecipient,\\n\\t\\tuint256 _senderFee\\n\\t) internal view {\\n\\t\\trequire(_isTokenSupported[_token] == 1, 'TokenNotSupported');\\n\\t\\trequire(_amount != 0, 'AmountIsZero');\\n\\t\\trequire(_refundAddress != address(0), 'ThrowZeroAddress');\\n\\n\\t\\tif (_senderFee != 0) {\\n\\t\\t\\trequire(_senderFeeRecipient != address(0), 'InvalidSenderFeeRecipient');\\n\\t\\t}\\n\\t}\\n\\n\\t/* ##################################################################\\n                                AGGREGATOR FUNCTIONS\\n    ################################################################## */\\n\\t/** @dev See {settle-IGateway}. */\\n\\tfunction settle(\\n\\t\\tbytes32 _splitOrderId,\\n\\t\\tbytes32 _orderId,\\n\\t\\taddress _liquidityProvider,\\n\\t\\tuint64 _settlePercent\\n\\t) external onlyAggregator returns (bool) {\\n\\t\\t// ensure the transaction has not been fulfilled\\n\\t\\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\\n\\t\\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\\n\\n\\t\\t// load the token into memory\\n\\t\\taddress token = order[_orderId].token;\\n\\n\\t\\t// subtract sum of amount based on the input _settlePercent\\n\\t\\torder[_orderId].currentBPS -= _settlePercent;\\n\\n\\t\\tif (order[_orderId].currentBPS == 0) {\\n\\t\\t\\t// update the transaction to be fulfilled\\n\\t\\t\\torder[_orderId].isFulfilled = true;\\n\\n\\t\\t\\tif (order[_orderId].senderFee != 0) {\\n\\t\\t\\t\\t// transfer sender fee\\n\\t\\t\\t\\tIERC20(order[_orderId].token).transfer(\\n\\t\\t\\t\\t\\torder[_orderId].senderFeeRecipient,\\n\\t\\t\\t\\t\\torder[_orderId].senderFee\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// emit event\\n\\t\\t\\t\\temit SenderFeeTransferred(\\n\\t\\t\\t\\t\\torder[_orderId].senderFeeRecipient,\\n\\t\\t\\t\\t\\torder[_orderId].senderFee\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// transfer to liquidity provider\\n\\t\\tuint256 liquidityProviderAmount = (order[_orderId].amount * _settlePercent) / MAX_BPS;\\n\\t\\torder[_orderId].amount -= liquidityProviderAmount;\\n\\n\\t\\tuint256 protocolFee = (liquidityProviderAmount * protocolFeePercent) / MAX_BPS;\\n\\t\\tliquidityProviderAmount -= protocolFee;\\n\\n\\t\\t// transfer protocol fee\\n\\t\\tif (protocolFee > 0) IERC20(token).transfer(treasuryAddress, protocolFee);\\n\\n\\t\\tIERC20(token).transfer(_liquidityProvider, liquidityProviderAmount);\\n\\n\\t\\t// emit settled event\\n\\t\\temit OrderSettled(_splitOrderId, _orderId, _liquidityProvider, _settlePercent);\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/** @dev See {refund-IGateway}. */\\n\\tfunction refund(uint256 _fee, bytes32 _orderId) external onlyAggregator returns (bool) {\\n\\t\\t// ensure the transaction has not been fulfilled\\n\\t\\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\\n\\t\\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\\n\\t\\trequire(order[_orderId].protocolFee >= _fee, 'FeeExceedsProtocolFee');\\n\\n\\t\\tif (_fee > 0) {\\n\\t\\t\\t// transfer refund fee to the treasury\\n\\t\\t\\tIERC20(order[_orderId].token).transfer(treasuryAddress, _fee);\\n\\t\\t}\\n\\n\\t\\t// reset state values\\n\\t\\torder[_orderId].isRefunded = true;\\n\\t\\torder[_orderId].currentBPS = 0;\\n\\n\\t\\t// deduct fee from order amount\\n\\t\\tuint256 refundAmount = order[_orderId].amount - _fee;\\n\\n\\t\\t// transfer refund amount and sender fee to the refund address\\n\\t\\tIERC20(order[_orderId].token).transfer(\\n\\t\\t\\torder[_orderId].refundAddress,\\n\\t\\t\\trefundAmount + order[_orderId].senderFee\\n\\t\\t);\\n\\n\\t\\t// emit refunded event\\n\\t\\temit OrderRefunded(_fee, _orderId);\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/** @dev See {processSettlement-IGateway}. */\\n\\tfunction processSettlement(\\n        bytes32 _orderId,\\n        address _token,\\n        uint256 _amount,\\n        address _senderFeeRecipient,\\n        uint256 _senderFee,\\n        address _liquidityProvider,\\n        address _recipient,\\n        uint96 _rate,\\n        string calldata _messageHash\\n    ) external onlyAggregator returns (bool) {\\n\\t\\trequire(!order[_orderId].isFulfilled, 'OrderNotFulfilled');\\n\\t\\trequire(_amount > 0, 'AmountIsZero');\\n\\t\\trequire(_recipient != address(0), 'RecipientIsZeroAddress');\\n\\n\\t\\tif(_senderFee != 0) {\\n\\t\\t\\trequire(_senderFeeRecipient != address(0), \\\"SenderFeeRecipientIsZeroAddress\\\");\\n\\n\\t\\t\\tIERC20(_token).transfer(\\n\\t\\t\\t\\t_senderFeeRecipient,\\n\\t\\t\\t\\t_senderFee\\n\\t\\t\\t);\\n\\n\\t\\t\\temit SenderFeeTransferred(\\n\\t\\t\\t\\t_senderFeeRecipient,\\n\\t\\t\\t\\t_senderFee\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tuint256 protocolFee = (_amount * protocolFeePercent) / MAX_BPS;\\n\\t\\tuint256 liquidityProviderAmount = _amount - protocolFee;\\n\\n\\t\\tif (protocolFee > 0) IERC20(_token).transfer(treasuryAddress, protocolFee);\\n\\n\\t\\tIERC20(_token).transfer(_recipient, liquidityProviderAmount);\\n\\n\\t\\t// update the order state\\n\\t\\torder[_orderId].sender = _recipient;\\n\\t\\torder[_orderId].token = _token;\\n\\t\\torder[_orderId].senderFeeRecipient = _senderFeeRecipient;\\n\\t\\torder[_orderId].senderFee = _senderFee;\\n\\t\\torder[_orderId].protocolFee = protocolFee;\\n\\t\\torder[_orderId].isFulfilled = true;\\n\\t\\torder[_orderId].amount -= _amount;\\n\\n\\t\\t// emit settlement event\\n\\t\\temit ProcessSettlement(\\n\\t\\t\\t_orderId,\\n\\t\\t\\t_amount,\\n\\t\\t\\t_recipient,\\n\\t\\t\\t_token,\\n\\t\\t\\t_senderFeeRecipient,\\n\\t\\t\\t_liquidityProvider,\\n\\t\\t\\t_rate,\\n\\t\\t\\t_messageHash\\n\\t\\t);\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/* ##################################################################\\n                                VIEW CALLS\\n    ################################################################## */\\n\\t/** @dev See {getOrderInfo-IGateway}. */\\n\\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory) {\\n\\t\\treturn order[_orderId];\\n\\t}\\n\\n\\t/** @dev See {isTokenSupported-IGateway}. */\\n\\tfunction isTokenSupported(address _token) external view returns (bool) {\\n\\t\\tif (_isTokenSupported[_token] == 1) return true;\\n\\t\\treturn false;\\n\\t}\\n\\n\\t/** @dev See {getFeeDetails-IGateway}. */\\n\\tfunction getFeeDetails() external view returns (uint64, uint256) {\\n\\t\\treturn (protocolFeePercent, MAX_BPS);\\n\\t}\\n}\\n\",\"keccak256\":\"0x6be18a566dbe2ab2fe094339566c62067b802f3bb1411f31b2b437245a5b7eed\",\"license\":\"UNLICENSED\"},\"contracts/GatewaySettingManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\n/**\\n * @title GatewaySettingManager\\n * @dev This contract manages the settings and configurations for the Gateway protocol.\\n */\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\\n\\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\\n\\tuint256 internal MAX_BPS;\\n\\tuint64 internal protocolFeePercent;\\n\\taddress internal treasuryAddress;\\n\\taddress internal _aggregatorAddress;\\n\\tmapping(address => uint256) internal _isTokenSupported;\\n\\n\\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\\n\\tuint256[50] private __gap;\\n\\n\\n\\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\\n\\tevent ProtocolFeeUpdated(uint64 protocolFee);\\n\\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\\n\\tevent SetFeeRecipient(address indexed treasuryAddress);\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\n\\t/**\\n\\t * @dev Sets the boolean value for a specific setting.\\n\\t * @param what The setting to be updated.\\n\\t * @param value The address or value associated with the setting.\\n\\t * @param status The boolean value to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\trequire(status == 1 || status == 2, 'Gateway: invalid status');\\n\\t\\tif (what == 'token') {\\n\\t\\t\\t_isTokenSupported[value] = status;\\n\\t\\t\\temit SettingManagerBool(what, value, status);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates the protocol fee percentage.\\n\\t * @param _protocolFeePercent The new protocol fee percentage to be set.\\n\\t */\\n\\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\\n\\t\\tprotocolFeePercent = _protocolFeePercent;\\n\\t\\temit ProtocolFeeUpdated(_protocolFeePercent);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates a protocol address.\\n\\t * @param what The address type to be updated (treasury or aggregator).\\n\\t * @param value The new address to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\tbool updated;\\n\\t\\tif (what == 'treasury') {\\n\\t\\t\\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\\n\\t\\t\\ttreasuryAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t} else if (what == 'aggregator') {\\n\\t\\t\\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\\n\\t\\t\\t_aggregatorAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t}\\n\\t\\tif (updated) {\\n\\t\\t\\temit ProtocolAddressUpdated(what, value);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xa6bc7df8377942cbbcd340f9fddad581486e8842ab71e5109b4d71ea1e148059\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IGateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title IGateway\\n * @notice Interface for the Gateway contract.\\n */\\ninterface IGateway {\\n    /* ##################################################################\\n                                EVENTS\\n    ################################################################## */\\n    /**\\n     * @dev Emitted when a deposit is made.\\n     * @param sender The address of the sender.\\n     * @param token The address of the deposited token.\\n     * @param amount The amount of the deposit.\\n     * @param orderId The ID of the order.\\n     * @param rate The rate at which the deposit is made.\\n     * @param messageHash The hash of the message.\\n     */\\n    event OrderCreated(\\n        address indexed sender,\\n        address indexed token,\\n        uint256 indexed amount,\\n        uint256 protocolFee,\\n        bytes32 orderId,\\n        uint256 rate,\\n        string messageHash\\n    );\\n\\n    /**\\n     * @dev Emitted when an aggregator settles a transaction.\\n     * @param splitOrderId The ID of the split order.\\n     * @param orderId The ID of the order.\\n     * @param liquidityProvider The address of the liquidity provider.\\n     * @param settlePercent The percentage at which the transaction is settled.\\n     */\\n    event OrderSettled(\\n        bytes32 splitOrderId,\\n        bytes32 indexed orderId,\\n        address indexed liquidityProvider,\\n        uint96 settlePercent\\n    );\\n\\n    /**\\n     * @dev Emitted when an aggregator refunds a transaction.\\n     * @param fee The fee deducted from the refund amount.\\n     * @param orderId The ID of the order.\\n     */\\n    event OrderRefunded(uint256 fee, bytes32 indexed orderId);\\n\\n    /**\\n     * @dev Emitted when an onramp order is successfully processed\\n     */\\n    event ProcessSettlement(\\n        bytes32 indexed orderId,\\n        uint256 indexed amount,\\n        address indexed recipient,\\n        address token,\\n        address senderFee,\\n\\t\\taddress liquidityProvider,\\n\\t\\tuint96 rate,\\n\\t\\tstring messageHash\\n    );\\n\\n    /**\\n     * @dev Emitted when the sender's fee is transferred.\\n     * @param sender The address of the sender.\\n     * @param amount The amount of the fee transferred.\\n     */\\n    event SenderFeeTransferred(address indexed sender, uint256 indexed amount);\\n\\n    /* ##################################################################\\n                                STRUCTS\\n    ################################################################## */\\n    /**\\n     * @dev Struct representing an order.\\n     * @param sender The address of the sender.\\n     * @param token The address of the token.\\n     * @param senderFeeRecipient The address of the sender fee recipient.\\n     * @param senderFee The fee to be paid to the sender fee recipient.\\n     * @param protocolFee The protocol fee to be paid.\\n     * @param isFulfilled Whether the order is fulfilled.\\n     * @param isRefunded Whether the order is refunded.\\n     * @param refundAddress The address to which the refund is made.\\n     * @param currentBPS The current basis points.\\n     * @param amount The amount of the order.\\n     */\\n    struct Order {\\n        address sender;\\n        address token;\\n        address senderFeeRecipient;\\n        uint256 senderFee;\\n        uint256 protocolFee;\\n        bool isFulfilled;\\n        bool isRefunded;\\n        address refundAddress;\\n        uint96 currentBPS;\\n        uint256 amount;\\n    }\\n\\n    /* ##################################################################\\n                                EXTERNAL CALLS\\n    ################################################################## */\\n    /**\\n     * @notice Locks the sender's amount of token into Gateway.\\n     * @dev Requirements:\\n     * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\\n     * - `_token` must be an acceptable token. See {isTokenSupported}.\\n     * - `amount` must be greater than minimum.\\n     * - `_refundAddress` refund address must not be zero address.\\n     * @param _token The address of the token.\\n     * @param _amount The amount in the decimal of `_token` to be locked.\\n     * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\\n     * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\\n     * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\\n     * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\\n     * @param messageHash The hash of the message.\\n     * @return _orderId The ID of the order.\\n     */\\n    function createOrder(\\n        address _token,\\n        uint256 _amount,\\n        uint96 _rate,\\n        address _senderFeeRecipient,\\n        uint256 _senderFee,\\n        address _refundAddress,\\n        string calldata messageHash\\n    ) external returns (bytes32 _orderId);\\n\\n    /**\\n     * @notice Settles a transaction and distributes rewards accordingly.\\n     * @param _splitOrderId The ID of the split order.\\n     * @param _orderId The ID of the transaction.\\n     * @param _liquidityProvider The address of the liquidity provider.\\n     * @param _settlePercent The rate at which the transaction is settled.\\n     * @return bool the settlement is successful.\\n     */\\n    function settle(\\n        bytes32 _splitOrderId,\\n        bytes32 _orderId,\\n        address _liquidityProvider,\\n        uint64 _settlePercent\\n    ) external returns (bool);\\n\\n    /**\\n     * @notice Refunds to the specified refundable address.\\n     * @dev Requirements:\\n     * - Only aggregators can call this function.\\n     * @param _fee The amount to be deducted from the amount to be refunded.\\n     * @param _orderId The ID of the transaction.\\n     * @return bool the refund is successful.\\n     */\\n    function refund(uint256 _fee, bytes32 _orderId) external returns (bool);\\n\\n    /**\\n     * @notice Process an onramp order for cryptocurrency purchase\\n     * @dev This function is restricted to be called only by an authorized aggregator\\n     * @dev It processes an onramp orders and transfers tokens to the user\\n     * @param _orderId Unique identifier for the order being processed\\n     * @param _token Address of the token to be sent to the user\\n     * @param _amount Amount of tokens to be sent to the user\\n     * @param _senderFeeRecipient Address that will receive the sender fee\\n     * @param _senderFee Amount of fee to be paid to the sender fee recipient\\n     * @param _liquidityProvider Address of the liquidity provider\\n     * @param _recipient Address of the recipient who will receive the tokens\\n     * @param _rate Rate at which the tokens are being sent\\n     * @param _messageHash Hash of the message associated with the order\\n     * @return success Boolean indicating if the operation was successful\\n     */\\n    function processSettlement(\\n        bytes32 _orderId,\\n        address _token,\\n        uint256 _amount,\\n        address _senderFeeRecipient,\\n        uint256 _senderFee,\\n        address _liquidityProvider,\\n        address _recipient,\\n        uint96 _rate,\\n        string calldata _messageHash\\n    ) external returns (bool);\\n\\n    /**\\n     * @notice Checks if a token is supported by Gateway.\\n     * @param _token The address of the token to check.\\n     * @return bool the token is supported.\\n     */\\n    function isTokenSupported(address _token) external view returns (bool);\\n\\n    /**\\n     * @notice Gets the details of an order.\\n     * @param _orderId The ID of the order.\\n     * @return Order The order details.\\n     */\\n    function getOrderInfo(\\n        bytes32 _orderId\\n    ) external view returns (Order memory);\\n\\n    /**\\n     * @notice Gets the fee details of Gateway.\\n     * @return protocolReward The protocol reward amount.\\n     * @return max_bps The maximum basis points.\\n     */\\n    function getFeeDetails()\\n        external\\n        view\\n        returns (uint64 protocolReward, uint256 max_bps);\\n}\\n\",\"keccak256\":\"0x59024bca0024d693328f4d25d8ba38fdb8d729f117738fae04925ac723eedea3\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"contracts/Gateway.sol:Gateway","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"contracts/Gateway.sol:Gateway","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"contracts/Gateway.sol:Gateway","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"contracts/Gateway.sol:Gateway","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":2403,"contract":"contracts/Gateway.sol:Gateway","label":"MAX_BPS","offset":0,"slot":"151","type":"t_uint256"},{"astId":2405,"contract":"contracts/Gateway.sol:Gateway","label":"protocolFeePercent","offset":0,"slot":"152","type":"t_uint64"},{"astId":2407,"contract":"contracts/Gateway.sol:Gateway","label":"treasuryAddress","offset":8,"slot":"152","type":"t_address"},{"astId":2409,"contract":"contracts/Gateway.sol:Gateway","label":"_aggregatorAddress","offset":0,"slot":"153","type":"t_address"},{"astId":2413,"contract":"contracts/Gateway.sol:Gateway","label":"_isTokenSupported","offset":0,"slot":"154","type":"t_mapping(t_address,t_uint256)"},{"astId":2417,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)50_storage"},{"astId":430,"contract":"contracts/Gateway.sol:Gateway","label":"_paused","offset":0,"slot":"205","type":"t_bool"},{"astId":535,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"206","type":"t_array(t_uint256)49_storage"},{"astId":1662,"contract":"contracts/Gateway.sol:Gateway","label":"order","offset":0,"slot":"255","type":"t_mapping(t_bytes32,t_struct(Order)2667_storage)"},{"astId":1666,"contract":"contracts/Gateway.sol:Gateway","label":"_nonce","offset":0,"slot":"256","type":"t_mapping(t_address,t_uint256)"},{"astId":1670,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"257","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(Order)2667_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct IGateway.Order)","numberOfBytes":"32","value":"t_struct(Order)2667_storage"},"t_struct(Order)2667_storage":{"encoding":"inplace","label":"struct IGateway.Order","members":[{"astId":2648,"contract":"contracts/Gateway.sol:Gateway","label":"sender","offset":0,"slot":"0","type":"t_address"},{"astId":2650,"contract":"contracts/Gateway.sol:Gateway","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":2652,"contract":"contracts/Gateway.sol:Gateway","label":"senderFeeRecipient","offset":0,"slot":"2","type":"t_address"},{"astId":2654,"contract":"contracts/Gateway.sol:Gateway","label":"senderFee","offset":0,"slot":"3","type":"t_uint256"},{"astId":2656,"contract":"contracts/Gateway.sol:Gateway","label":"protocolFee","offset":0,"slot":"4","type":"t_uint256"},{"astId":2658,"contract":"contracts/Gateway.sol:Gateway","label":"isFulfilled","offset":0,"slot":"5","type":"t_bool"},{"astId":2660,"contract":"contracts/Gateway.sol:Gateway","label":"isRefunded","offset":1,"slot":"5","type":"t_bool"},{"astId":2662,"contract":"contracts/Gateway.sol:Gateway","label":"refundAddress","offset":2,"slot":"5","type":"t_address"},{"astId":2664,"contract":"contracts/Gateway.sol:Gateway","label":"currentBPS","offset":0,"slot":"6","type":"t_uint96"},{"astId":2666,"contract":"contracts/Gateway.sol:Gateway","label":"amount","offset":0,"slot":"7","type":"t_uint256"}],"numberOfBytes":"256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{},"notice":"This contract serves as a gateway for creating orders and managing settlements.","version":1}}},"contracts/GatewaySettingManager.sol":{"GatewaySettingManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"ProtocolAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"protocolFee","type":"uint64"}],"name":"ProtocolFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"value","type":"address"},{"indexed":false,"internalType":"uint256","name":"status","type":"uint256"}],"name":"SettingManagerBool","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"},{"internalType":"uint256","name":"status","type":"uint256"}],"name":"settingManagerBool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"}],"name":"updateProtocolAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_protocolFeePercent","type":"uint64"}],"name":"updateProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"settingManagerBool(bytes32,address,uint256)":{"details":"Sets the boolean value for a specific setting.","params":{"status":"The boolean value to be set. Requirements: - The value must not be a zero address.","value":"The address or value associated with the setting.","what":"The setting to be updated."}},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"updateProtocolAddress(bytes32,address)":{"details":"Updates a protocol address.","params":{"value":"The new address to be set. Requirements: - The value must not be a zero address.","what":"The address type to be updated (treasury or aggregator)."}},"updateProtocolFee(uint64)":{"details":"Updates the protocol fee percentage.","params":{"_protocolFeePercent":"The new protocol fee percentage to be set."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610edf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d9578063cd992400146100f7578063e30c397814610113578063f2fde38b1461013157610088565b806340ebc6771461008d57806347094e2e146100a9578063715018a6146100c557806379ba5097146100cf575b600080fd5b6100a760048036038101906100a291906109bd565b61014d565b005b6100c360048036038101906100be9190610a3d565b610415565b005b6100cd610480565b005b6100d7610494565b005b6100e1610521565b6040516100ee9190610a79565b60405180910390f35b610111600480360381019061010c9190610aca565b61054b565b005b61011b6106d0565b6040516101289190610a79565b60405180910390f35b61014b60048036038101906101469190610b1d565b6106fa565b005b6101556107a7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb90610ba7565b60405180910390fd5b60007f747265617375727900000000000000000000000000000000000000000000000083036102c7578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027490610c39565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506103c5565b7f61676772656761746f720000000000000000000000000000000000000000000083036103c4578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610ccb565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610410578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b61041d6107a7565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b816040516104759190610cfa565b60405180910390a150565b6104886107a7565b6104926000610825565b565b600061049e610856565b90508073ffffffffffffffffffffffffffffffffffffffff166104bf6106d0565b73ffffffffffffffffffffffffffffffffffffffff1614610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610d87565b60405180910390fd5b61051e81610825565b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105536107a7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610ba7565b60405180910390fd5b60018114806105d15750600281145b610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610df3565b60405180910390fd5b7f746f6b656e00000000000000000000000000000000000000000000000000000083036106cb5780609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c836040516106c29190610e22565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107026107a7565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610762610521565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107af610856565b73ffffffffffffffffffffffffffffffffffffffff166107cd610521565b73ffffffffffffffffffffffffffffffffffffffff1614610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081a90610e89565b60405180910390fd5b565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556108538161085e565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61093c81610929565b811461094757600080fd5b50565b60008135905061095981610933565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098a8261095f565b9050919050565b61099a8161097f565b81146109a557600080fd5b50565b6000813590506109b781610991565b92915050565b600080604083850312156109d4576109d3610924565b5b60006109e28582860161094a565b92505060206109f3858286016109a8565b9150509250929050565b600067ffffffffffffffff82169050919050565b610a1a816109fd565b8114610a2557600080fd5b50565b600081359050610a3781610a11565b92915050565b600060208284031215610a5357610a52610924565b5b6000610a6184828501610a28565b91505092915050565b610a738161097f565b82525050565b6000602082019050610a8e6000830184610a6a565b92915050565b6000819050919050565b610aa781610a94565b8114610ab257600080fd5b50565b600081359050610ac481610a9e565b92915050565b600080600060608486031215610ae357610ae2610924565b5b6000610af18682870161094a565b9350506020610b02868287016109a8565b9250506040610b1386828701610ab5565b9150509250925092565b600060208284031215610b3357610b32610924565b5b6000610b41848285016109a8565b91505092915050565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b6000610b91601583610b4a565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b6000610c23602583610b4a565b9150610c2e82610bc7565b604082019050919050565b60006020820190508181036000830152610c5281610c16565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b6000610cb5602783610b4a565b9150610cc082610c59565b604082019050919050565b60006020820190508181036000830152610ce481610ca8565b9050919050565b610cf4816109fd565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000610d71602983610b4a565b9150610d7c82610d15565b604082019050919050565b60006020820190508181036000830152610da081610d64565b9050919050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b6000610ddd601783610b4a565b9150610de882610da7565b602082019050919050565b60006020820190508181036000830152610e0c81610dd0565b9050919050565b610e1c81610a94565b82525050565b6000602082019050610e376000830184610e13565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e73602083610b4a565b9150610e7e82610e3d565b602082019050919050565b60006020820190508181036000830152610ea281610e66565b905091905056fea264697066735822122081a5d6584d68533dd564cd3881f4d239736bf0f05a86d786e63e89ce2a2d220664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEDF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x131 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x2C7 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3C5 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x3C4 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x375 SWAP1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x410 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x41D PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x488 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x492 PUSH1 0x0 PUSH2 0x825 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E PUSH2 0x856 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BF PUSH2 0x6D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E DUP2 PUSH2 0x825 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x5D1 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x6CB JUMPI DUP1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x702 PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x762 PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x856 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CD PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81A SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x853 DUP2 PUSH2 0x85E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93C DUP2 PUSH2 0x929 JUMP JUMPDEST DUP2 EQ PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x959 DUP2 PUSH2 0x933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98A DUP3 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99A DUP2 PUSH2 0x97F JUMP JUMPDEST DUP2 EQ PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B7 DUP2 PUSH2 0x991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9D4 JUMPI PUSH2 0x9D3 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E2 DUP6 DUP3 DUP7 ADD PUSH2 0x94A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9F3 DUP6 DUP3 DUP7 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1A DUP2 PUSH2 0x9FD JUMP JUMPDEST DUP2 EQ PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA37 DUP2 PUSH2 0xA11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA52 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP5 DUP3 DUP6 ADD PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA73 DUP2 PUSH2 0x97F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA94 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC4 DUP2 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF1 DUP7 DUP3 DUP8 ADD PUSH2 0x94A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB02 DUP7 DUP3 DUP8 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB13 DUP7 DUP3 DUP8 ADD PUSH2 0xAB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB41 DUP5 DUP3 DUP6 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB91 PUSH1 0x15 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC0 DUP2 PUSH2 0xB84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC23 PUSH1 0x25 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xC2E DUP3 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC52 DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB5 PUSH1 0x27 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xCC0 DUP3 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE4 DUP2 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0x9FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD71 PUSH1 0x29 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xD7C DUP3 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDA0 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD PUSH1 0x17 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xDE8 DUP3 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0C DUP2 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xA94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE73 PUSH1 0x20 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xE7E DUP3 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEA2 DUP2 PUSH2 0xE66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xA5 0xD6 PC 0x4D PUSH9 0x533DD564CD3881F4D2 CODECOPY PUSH20 0x6BF0F05A86D786E63E89CE2A2D220664736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"276:2570:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_176":{"entryPoint":1959,"id":176,"parameterSlots":0,"returnSlots":0},"@_msgSender_894":{"entryPoint":2134,"id":894,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_233":{"entryPoint":2142,"id":233,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_78":{"entryPoint":2085,"id":78,"parameterSlots":1,"returnSlots":0},"@acceptOwnership_100":{"entryPoint":1172,"id":100,"parameterSlots":0,"returnSlots":0},"@owner_162":{"entryPoint":1313,"id":162,"parameterSlots":0,"returnSlots":1},"@pendingOwner_41":{"entryPoint":1744,"id":41,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_190":{"entryPoint":1152,"id":190,"parameterSlots":0,"returnSlots":0},"@settingManagerBool_2490":{"entryPoint":1355,"id":2490,"parameterSlots":3,"returnSlots":0},"@transferOwnership_61":{"entryPoint":1786,"id":61,"parameterSlots":1,"returnSlots":0},"@updateProtocolAddress_2579":{"entryPoint":333,"id":2579,"parameterSlots":2,"returnSlots":0},"@updateProtocolFee_2507":{"entryPoint":1045,"id":2507,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2378,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":2600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":2493,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_uint256":{"entryPoint":2762,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint64":{"entryPoint":2621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2666,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack":{"entryPoint":2948,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack":{"entryPoint":3428,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack":{"entryPoint":3536,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3686,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack":{"entryPoint":3094,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack":{"entryPoint":3240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3603,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":3307,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2983,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3721,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3275,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2890,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2431,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2345,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2399,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2708,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":2557,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2340,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf":{"entryPoint":2907,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":3349,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338":{"entryPoint":3495,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3645,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead":{"entryPoint":3015,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4":{"entryPoint":3161,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2449,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2355,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2718,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":2577,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10945:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:32:14","statements":[{"nodeType":"YulAssignment","src":"389:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:77:14"},{"body":{"nodeType":"YulBlock","src":"460:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:14"},"nodeType":"YulFunctionCall","src":"519:12:14"},"nodeType":"YulExpressionStatement","src":"519:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"490:17:14"},"nodeType":"YulFunctionCall","src":"490:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:14"},"nodeType":"YulFunctionCall","src":"480:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:14"},"nodeType":"YulFunctionCall","src":"473:43:14"},"nodeType":"YulIf","src":"470:63:14"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:14","type":""}],"src":"417:122:14"},{"body":{"nodeType":"YulBlock","src":"597:87:14","statements":[{"nodeType":"YulAssignment","src":"607:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:14"},"nodeType":"YulFunctionCall","src":"616:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:14"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"645:26:14"},"nodeType":"YulFunctionCall","src":"645:33:14"},"nodeType":"YulExpressionStatement","src":"645:33:14"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:14","type":""}],"src":"545:139:14"},{"body":{"nodeType":"YulBlock","src":"735:81:14","statements":[{"nodeType":"YulAssignment","src":"745:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"760:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"767:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:14"},"nodeType":"YulFunctionCall","src":"756:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"745:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"717:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"727:7:14","type":""}],"src":"690:126:14"},{"body":{"nodeType":"YulBlock","src":"867:51:14","statements":[{"nodeType":"YulAssignment","src":"877:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"906:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"888:17:14"},"nodeType":"YulFunctionCall","src":"888:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"877:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"849:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"859:7:14","type":""}],"src":"822:96:14"},{"body":{"nodeType":"YulBlock","src":"967:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:14"},"nodeType":"YulFunctionCall","src":"1026:12:14"},"nodeType":"YulExpressionStatement","src":"1026:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"997:17:14"},"nodeType":"YulFunctionCall","src":"997:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:14"},"nodeType":"YulFunctionCall","src":"987:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:14"},"nodeType":"YulFunctionCall","src":"980:43:14"},"nodeType":"YulIf","src":"977:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:14","type":""}],"src":"924:122:14"},{"body":{"nodeType":"YulBlock","src":"1104:87:14","statements":[{"nodeType":"YulAssignment","src":"1114:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:14"},"nodeType":"YulFunctionCall","src":"1123:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1152:26:14"},"nodeType":"YulFunctionCall","src":"1152:33:14"},"nodeType":"YulExpressionStatement","src":"1152:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:14","type":""}],"src":"1052:139:14"},{"body":{"nodeType":"YulBlock","src":"1280:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:14"},"nodeType":"YulFunctionCall","src":"1328:79:14"},"nodeType":"YulExpressionStatement","src":"1328:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:14"},"nodeType":"YulFunctionCall","src":"1297:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:14"},"nodeType":"YulFunctionCall","src":"1293:32:14"},"nodeType":"YulIf","src":"1290:119:14"},{"nodeType":"YulBlock","src":"1419:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:14"},"nodeType":"YulFunctionCall","src":"1494:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1473:20:14"},"nodeType":"YulFunctionCall","src":"1473:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:14"}]}]},{"nodeType":"YulBlock","src":"1546:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:14"},"nodeType":"YulFunctionCall","src":"1622:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1601:20:14"},"nodeType":"YulFunctionCall","src":"1601:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:14","type":""}],"src":"1197:474:14"},{"body":{"nodeType":"YulBlock","src":"1721:57:14","statements":[{"nodeType":"YulAssignment","src":"1731:41:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1753:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:14"},"nodeType":"YulFunctionCall","src":"1742:30:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:14"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:14","type":""}],"src":"1677:101:14"},{"body":{"nodeType":"YulBlock","src":"1826:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"1882:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1891:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1894:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1884:6:14"},"nodeType":"YulFunctionCall","src":"1884:12:14"},"nodeType":"YulExpressionStatement","src":"1884:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1849:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1873:5:14"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1856:16:14"},"nodeType":"YulFunctionCall","src":"1856:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1846:2:14"},"nodeType":"YulFunctionCall","src":"1846:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1839:6:14"},"nodeType":"YulFunctionCall","src":"1839:42:14"},"nodeType":"YulIf","src":"1836:62:14"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1819:5:14","type":""}],"src":"1784:120:14"},{"body":{"nodeType":"YulBlock","src":"1961:86:14","statements":[{"nodeType":"YulAssignment","src":"1971:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1993:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1980:12:14"},"nodeType":"YulFunctionCall","src":"1980:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1971:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2035:5:14"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"2009:25:14"},"nodeType":"YulFunctionCall","src":"2009:32:14"},"nodeType":"YulExpressionStatement","src":"2009:32:14"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1939:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1947:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1955:5:14","type":""}],"src":"1910:137:14"},{"body":{"nodeType":"YulBlock","src":"2118:262:14","statements":[{"body":{"nodeType":"YulBlock","src":"2164:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2166:77:14"},"nodeType":"YulFunctionCall","src":"2166:79:14"},"nodeType":"YulExpressionStatement","src":"2166:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2139:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2135:3:14"},"nodeType":"YulFunctionCall","src":"2135:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2160:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2131:3:14"},"nodeType":"YulFunctionCall","src":"2131:32:14"},"nodeType":"YulIf","src":"2128:119:14"},{"nodeType":"YulBlock","src":"2257:116:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2272:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2286:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2276:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2301:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2335:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2346:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:14"},"nodeType":"YulFunctionCall","src":"2331:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2355:7:14"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"2311:19:14"},"nodeType":"YulFunctionCall","src":"2311:52:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2301:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2088:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2099:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2111:6:14","type":""}],"src":"2053:327:14"},{"body":{"nodeType":"YulBlock","src":"2451:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2468:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2491:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2473:17:14"},"nodeType":"YulFunctionCall","src":"2473:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2461:6:14"},"nodeType":"YulFunctionCall","src":"2461:37:14"},"nodeType":"YulExpressionStatement","src":"2461:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2439:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2446:3:14","type":""}],"src":"2386:118:14"},{"body":{"nodeType":"YulBlock","src":"2608:124:14","statements":[{"nodeType":"YulAssignment","src":"2618:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2630:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2641:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:14"},"nodeType":"YulFunctionCall","src":"2626:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2618:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2698:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2711:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2722:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:14"},"nodeType":"YulFunctionCall","src":"2707:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2654:43:14"},"nodeType":"YulFunctionCall","src":"2654:71:14"},"nodeType":"YulExpressionStatement","src":"2654:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2580:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2592:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2603:4:14","type":""}],"src":"2510:222:14"},{"body":{"nodeType":"YulBlock","src":"2783:32:14","statements":[{"nodeType":"YulAssignment","src":"2793:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2804:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2793:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2765:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2775:7:14","type":""}],"src":"2738:77:14"},{"body":{"nodeType":"YulBlock","src":"2864:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2921:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2930:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2933:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2923:6:14"},"nodeType":"YulFunctionCall","src":"2923:12:14"},"nodeType":"YulExpressionStatement","src":"2923:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2887:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2912:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2894:17:14"},"nodeType":"YulFunctionCall","src":"2894:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2884:2:14"},"nodeType":"YulFunctionCall","src":"2884:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2877:6:14"},"nodeType":"YulFunctionCall","src":"2877:43:14"},"nodeType":"YulIf","src":"2874:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2857:5:14","type":""}],"src":"2821:122:14"},{"body":{"nodeType":"YulBlock","src":"3001:87:14","statements":[{"nodeType":"YulAssignment","src":"3011:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3033:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3020:12:14"},"nodeType":"YulFunctionCall","src":"3020:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3011:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3049:26:14"},"nodeType":"YulFunctionCall","src":"3049:33:14"},"nodeType":"YulExpressionStatement","src":"3049:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2979:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2987:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2995:5:14","type":""}],"src":"2949:139:14"},{"body":{"nodeType":"YulBlock","src":"3194:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"3240:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3242:77:14"},"nodeType":"YulFunctionCall","src":"3242:79:14"},"nodeType":"YulExpressionStatement","src":"3242:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3215:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3224:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:14"},"nodeType":"YulFunctionCall","src":"3211:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3236:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3207:3:14"},"nodeType":"YulFunctionCall","src":"3207:32:14"},"nodeType":"YulIf","src":"3204:119:14"},{"nodeType":"YulBlock","src":"3333:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3348:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3352:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:14"},"nodeType":"YulFunctionCall","src":"3408:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3387:20:14"},"nodeType":"YulFunctionCall","src":"3387:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3377:6:14"}]}]},{"nodeType":"YulBlock","src":"3460:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:14"},"nodeType":"YulFunctionCall","src":"3536:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3515:20:14"},"nodeType":"YulFunctionCall","src":"3515:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3505:6:14"}]}]},{"nodeType":"YulBlock","src":"3588:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3617:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3633:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3668:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3679:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3664:3:14"},"nodeType":"YulFunctionCall","src":"3664:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3688:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3643:20:14"},"nodeType":"YulFunctionCall","src":"3643:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3633:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3148:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3159:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3171:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3179:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3187:6:14","type":""}],"src":"3094:619:14"},{"body":{"nodeType":"YulBlock","src":"3785:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"3831:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3833:77:14"},"nodeType":"YulFunctionCall","src":"3833:79:14"},"nodeType":"YulExpressionStatement","src":"3833:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3806:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3815:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3802:3:14"},"nodeType":"YulFunctionCall","src":"3802:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3827:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3798:3:14"},"nodeType":"YulFunctionCall","src":"3798:32:14"},"nodeType":"YulIf","src":"3795:119:14"},{"nodeType":"YulBlock","src":"3924:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3939:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3953:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3943:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3968:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4003:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4014:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:14"},"nodeType":"YulFunctionCall","src":"3999:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4023:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3978:20:14"},"nodeType":"YulFunctionCall","src":"3978:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3968:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3755:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3766:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3778:6:14","type":""}],"src":"3719:329:14"},{"body":{"nodeType":"YulBlock","src":"4150:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4167:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4172:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4160:6:14"},"nodeType":"YulFunctionCall","src":"4160:19:14"},"nodeType":"YulExpressionStatement","src":"4160:19:14"},{"nodeType":"YulAssignment","src":"4188:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4207:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4212:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4203:3:14"},"nodeType":"YulFunctionCall","src":"4203:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4188:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4122:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"4127:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4138:11:14","type":""}],"src":"4054:169:14"},{"body":{"nodeType":"YulBlock","src":"4335:65:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4357:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4365:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4353:3:14"},"nodeType":"YulFunctionCall","src":"4353:14:14"},{"hexValue":"476174657761793a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"4369:23:14","type":"","value":"Gateway: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4346:6:14"},"nodeType":"YulFunctionCall","src":"4346:47:14"},"nodeType":"YulExpressionStatement","src":"4346:47:14"}]},"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4327:6:14","type":""}],"src":"4229:171:14"},{"body":{"nodeType":"YulBlock","src":"4552:220:14","statements":[{"nodeType":"YulAssignment","src":"4562:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4628:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4633:2:14","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4569:58:14"},"nodeType":"YulFunctionCall","src":"4569:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4562:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4734:3:14"}],"functionName":{"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulIdentifier","src":"4645:88:14"},"nodeType":"YulFunctionCall","src":"4645:93:14"},"nodeType":"YulExpressionStatement","src":"4645:93:14"},{"nodeType":"YulAssignment","src":"4747:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4758:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4763:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4754:3:14"},"nodeType":"YulFunctionCall","src":"4754:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4747:3:14"}]}]},"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4540:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4548:3:14","type":""}],"src":"4406:366:14"},{"body":{"nodeType":"YulBlock","src":"4949:248:14","statements":[{"nodeType":"YulAssignment","src":"4959:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4971:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4982:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4967:3:14"},"nodeType":"YulFunctionCall","src":"4967:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4959:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5006:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5017:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5002:3:14"},"nodeType":"YulFunctionCall","src":"5002:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5025:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5031:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5021:3:14"},"nodeType":"YulFunctionCall","src":"5021:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4995:6:14"},"nodeType":"YulFunctionCall","src":"4995:47:14"},"nodeType":"YulExpressionStatement","src":"4995:47:14"},{"nodeType":"YulAssignment","src":"5051:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5185:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5059:124:14"},"nodeType":"YulFunctionCall","src":"5059:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5051:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4929:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4944:4:14","type":""}],"src":"4778:419:14"},{"body":{"nodeType":"YulBlock","src":"5309:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5331:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5339:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5327:3:14"},"nodeType":"YulFunctionCall","src":"5327:14:14"},{"hexValue":"476174657761793a207472656173757279206164647265737320616c72656164","kind":"string","nodeType":"YulLiteral","src":"5343:34:14","type":"","value":"Gateway: treasury address alread"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5320:6:14"},"nodeType":"YulFunctionCall","src":"5320:58:14"},"nodeType":"YulExpressionStatement","src":"5320:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5399:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5407:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:14"},"nodeType":"YulFunctionCall","src":"5395:15:14"},{"hexValue":"7920736574","kind":"string","nodeType":"YulLiteral","src":"5412:7:14","type":"","value":"y set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5388:6:14"},"nodeType":"YulFunctionCall","src":"5388:32:14"},"nodeType":"YulExpressionStatement","src":"5388:32:14"}]},"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5301:6:14","type":""}],"src":"5203:224:14"},{"body":{"nodeType":"YulBlock","src":"5579:220:14","statements":[{"nodeType":"YulAssignment","src":"5589:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5655:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5660:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5596:58:14"},"nodeType":"YulFunctionCall","src":"5596:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5589:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5761:3:14"}],"functionName":{"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulIdentifier","src":"5672:88:14"},"nodeType":"YulFunctionCall","src":"5672:93:14"},"nodeType":"YulExpressionStatement","src":"5672:93:14"},{"nodeType":"YulAssignment","src":"5774:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5785:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5790:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5781:3:14"},"nodeType":"YulFunctionCall","src":"5781:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5774:3:14"}]}]},"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5567:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5575:3:14","type":""}],"src":"5433:366:14"},{"body":{"nodeType":"YulBlock","src":"5976:248:14","statements":[{"nodeType":"YulAssignment","src":"5986:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5998:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6009:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5994:3:14"},"nodeType":"YulFunctionCall","src":"5994:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5986:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6033:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6044:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6029:3:14"},"nodeType":"YulFunctionCall","src":"6029:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6052:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6058:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6048:3:14"},"nodeType":"YulFunctionCall","src":"6048:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6022:6:14"},"nodeType":"YulFunctionCall","src":"6022:47:14"},"nodeType":"YulExpressionStatement","src":"6022:47:14"},{"nodeType":"YulAssignment","src":"6078:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6212:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6086:124:14"},"nodeType":"YulFunctionCall","src":"6086:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6078:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5956:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5971:4:14","type":""}],"src":"5805:419:14"},{"body":{"nodeType":"YulBlock","src":"6336:120:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6358:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6366:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6354:3:14"},"nodeType":"YulFunctionCall","src":"6354:14:14"},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c7265","kind":"string","nodeType":"YulLiteral","src":"6370:34:14","type":"","value":"Gateway: aggregator address alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6347:6:14"},"nodeType":"YulFunctionCall","src":"6347:58:14"},"nodeType":"YulExpressionStatement","src":"6347:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6426:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6434:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6422:3:14"},"nodeType":"YulFunctionCall","src":"6422:15:14"},{"hexValue":"61647920736574","kind":"string","nodeType":"YulLiteral","src":"6439:9:14","type":"","value":"ady set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6415:6:14"},"nodeType":"YulFunctionCall","src":"6415:34:14"},"nodeType":"YulExpressionStatement","src":"6415:34:14"}]},"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6328:6:14","type":""}],"src":"6230:226:14"},{"body":{"nodeType":"YulBlock","src":"6608:220:14","statements":[{"nodeType":"YulAssignment","src":"6618:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6684:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6689:2:14","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6625:58:14"},"nodeType":"YulFunctionCall","src":"6625:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6618:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6790:3:14"}],"functionName":{"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulIdentifier","src":"6701:88:14"},"nodeType":"YulFunctionCall","src":"6701:93:14"},"nodeType":"YulExpressionStatement","src":"6701:93:14"},{"nodeType":"YulAssignment","src":"6803:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6814:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6819:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6810:3:14"},"nodeType":"YulFunctionCall","src":"6810:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6803:3:14"}]}]},"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6596:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6604:3:14","type":""}],"src":"6462:366:14"},{"body":{"nodeType":"YulBlock","src":"7005:248:14","statements":[{"nodeType":"YulAssignment","src":"7015:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7027:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7038:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7023:3:14"},"nodeType":"YulFunctionCall","src":"7023:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7015:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7062:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7073:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7058:3:14"},"nodeType":"YulFunctionCall","src":"7058:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7081:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7087:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7077:3:14"},"nodeType":"YulFunctionCall","src":"7077:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7051:6:14"},"nodeType":"YulFunctionCall","src":"7051:47:14"},"nodeType":"YulExpressionStatement","src":"7051:47:14"},{"nodeType":"YulAssignment","src":"7107:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7241:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7115:124:14"},"nodeType":"YulFunctionCall","src":"7115:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7107:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6985:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7000:4:14","type":""}],"src":"6834:419:14"},{"body":{"nodeType":"YulBlock","src":"7322:52:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7339:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7361:5:14"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"7344:16:14"},"nodeType":"YulFunctionCall","src":"7344:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7332:6:14"},"nodeType":"YulFunctionCall","src":"7332:36:14"},"nodeType":"YulExpressionStatement","src":"7332:36:14"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7310:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7317:3:14","type":""}],"src":"7259:115:14"},{"body":{"nodeType":"YulBlock","src":"7476:122:14","statements":[{"nodeType":"YulAssignment","src":"7486:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7498:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7509:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7494:3:14"},"nodeType":"YulFunctionCall","src":"7494:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7486:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7564:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7588:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:14"},"nodeType":"YulFunctionCall","src":"7573:17:14"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"7522:41:14"},"nodeType":"YulFunctionCall","src":"7522:69:14"},"nodeType":"YulExpressionStatement","src":"7522:69:14"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7448:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7460:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7471:4:14","type":""}],"src":"7380:218:14"},{"body":{"nodeType":"YulBlock","src":"7710:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7732:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7740:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7728:3:14"},"nodeType":"YulFunctionCall","src":"7728:14:14"},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"7744:34:14","type":"","value":"Ownable2Step: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7721:6:14"},"nodeType":"YulFunctionCall","src":"7721:58:14"},"nodeType":"YulExpressionStatement","src":"7721:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7800:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7808:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7796:3:14"},"nodeType":"YulFunctionCall","src":"7796:15:14"},{"hexValue":"6e6577206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7813:11:14","type":"","value":"new owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7789:6:14"},"nodeType":"YulFunctionCall","src":"7789:36:14"},"nodeType":"YulExpressionStatement","src":"7789:36:14"}]},"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7702:6:14","type":""}],"src":"7604:228:14"},{"body":{"nodeType":"YulBlock","src":"7984:220:14","statements":[{"nodeType":"YulAssignment","src":"7994:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8060:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8065:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8001:58:14"},"nodeType":"YulFunctionCall","src":"8001:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7994:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8166:3:14"}],"functionName":{"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulIdentifier","src":"8077:88:14"},"nodeType":"YulFunctionCall","src":"8077:93:14"},"nodeType":"YulExpressionStatement","src":"8077:93:14"},{"nodeType":"YulAssignment","src":"8179:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8190:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8195:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8186:3:14"},"nodeType":"YulFunctionCall","src":"8186:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8179:3:14"}]}]},"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7972:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7980:3:14","type":""}],"src":"7838:366:14"},{"body":{"nodeType":"YulBlock","src":"8381:248:14","statements":[{"nodeType":"YulAssignment","src":"8391:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8403:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8414:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8399:3:14"},"nodeType":"YulFunctionCall","src":"8399:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8391:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8438:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8449:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8434:3:14"},"nodeType":"YulFunctionCall","src":"8434:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8457:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8463:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8453:3:14"},"nodeType":"YulFunctionCall","src":"8453:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8427:6:14"},"nodeType":"YulFunctionCall","src":"8427:47:14"},"nodeType":"YulExpressionStatement","src":"8427:47:14"},{"nodeType":"YulAssignment","src":"8483:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8617:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8491:124:14"},"nodeType":"YulFunctionCall","src":"8491:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8483:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8361:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8376:4:14","type":""}],"src":"8210:419:14"},{"body":{"nodeType":"YulBlock","src":"8741:67:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8763:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8771:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8759:3:14"},"nodeType":"YulFunctionCall","src":"8759:14:14"},{"hexValue":"476174657761793a20696e76616c696420737461747573","kind":"string","nodeType":"YulLiteral","src":"8775:25:14","type":"","value":"Gateway: invalid status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8752:6:14"},"nodeType":"YulFunctionCall","src":"8752:49:14"},"nodeType":"YulExpressionStatement","src":"8752:49:14"}]},"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8733:6:14","type":""}],"src":"8635:173:14"},{"body":{"nodeType":"YulBlock","src":"8960:220:14","statements":[{"nodeType":"YulAssignment","src":"8970:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9036:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9041:2:14","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8977:58:14"},"nodeType":"YulFunctionCall","src":"8977:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8970:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9142:3:14"}],"functionName":{"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulIdentifier","src":"9053:88:14"},"nodeType":"YulFunctionCall","src":"9053:93:14"},"nodeType":"YulExpressionStatement","src":"9053:93:14"},{"nodeType":"YulAssignment","src":"9155:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9166:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9171:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9162:3:14"},"nodeType":"YulFunctionCall","src":"9162:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9155:3:14"}]}]},"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8948:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8956:3:14","type":""}],"src":"8814:366:14"},{"body":{"nodeType":"YulBlock","src":"9357:248:14","statements":[{"nodeType":"YulAssignment","src":"9367:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9379:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9390:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9375:3:14"},"nodeType":"YulFunctionCall","src":"9375:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9367:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9425:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:14"},"nodeType":"YulFunctionCall","src":"9410:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9433:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9439:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9429:3:14"},"nodeType":"YulFunctionCall","src":"9429:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9403:6:14"},"nodeType":"YulFunctionCall","src":"9403:47:14"},"nodeType":"YulExpressionStatement","src":"9403:47:14"},{"nodeType":"YulAssignment","src":"9459:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9593:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9467:124:14"},"nodeType":"YulFunctionCall","src":"9467:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9459:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9337:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9352:4:14","type":""}],"src":"9186:419:14"},{"body":{"nodeType":"YulBlock","src":"9676:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9693:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9716:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9698:17:14"},"nodeType":"YulFunctionCall","src":"9698:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9686:6:14"},"nodeType":"YulFunctionCall","src":"9686:37:14"},"nodeType":"YulExpressionStatement","src":"9686:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9664:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9671:3:14","type":""}],"src":"9611:118:14"},{"body":{"nodeType":"YulBlock","src":"9833:124:14","statements":[{"nodeType":"YulAssignment","src":"9843:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9855:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9866:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9851:3:14"},"nodeType":"YulFunctionCall","src":"9851:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9843:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9923:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9936:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9947:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9932:3:14"},"nodeType":"YulFunctionCall","src":"9932:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9879:43:14"},"nodeType":"YulFunctionCall","src":"9879:71:14"},"nodeType":"YulExpressionStatement","src":"9879:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9805:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9817:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9828:4:14","type":""}],"src":"9735:222:14"},{"body":{"nodeType":"YulBlock","src":"10069:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10091:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10099:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10087:3:14"},"nodeType":"YulFunctionCall","src":"10087:14:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10103:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10080:6:14"},"nodeType":"YulFunctionCall","src":"10080:58:14"},"nodeType":"YulExpressionStatement","src":"10080:58:14"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10061:6:14","type":""}],"src":"9963:182:14"},{"body":{"nodeType":"YulBlock","src":"10297:220:14","statements":[{"nodeType":"YulAssignment","src":"10307:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10373:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10378:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10314:58:14"},"nodeType":"YulFunctionCall","src":"10314:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10307:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10479:3:14"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"10390:88:14"},"nodeType":"YulFunctionCall","src":"10390:93:14"},"nodeType":"YulExpressionStatement","src":"10390:93:14"},{"nodeType":"YulAssignment","src":"10492:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10503:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10508:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10499:3:14"},"nodeType":"YulFunctionCall","src":"10499:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10492:3:14"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10285:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10293:3:14","type":""}],"src":"10151:366:14"},{"body":{"nodeType":"YulBlock","src":"10694:248:14","statements":[{"nodeType":"YulAssignment","src":"10704:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10716:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10727:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10712:3:14"},"nodeType":"YulFunctionCall","src":"10712:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10704:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10751:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10762:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10747:3:14"},"nodeType":"YulFunctionCall","src":"10747:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10770:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10776:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10766:3:14"},"nodeType":"YulFunctionCall","src":"10766:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10740:6:14"},"nodeType":"YulFunctionCall","src":"10740:47:14"},"nodeType":"YulExpressionStatement","src":"10740:47:14"},{"nodeType":"YulAssignment","src":"10796:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10930:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10804:124:14"},"nodeType":"YulFunctionCall","src":"10804:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10796:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10674:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10689:4:14","type":""}],"src":"10523:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: treasury address alread\")\n\n        mstore(add(memPtr, 32), \"y set\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: aggregator address alre\")\n\n        mstore(add(memPtr, 32), \"ady set\")\n\n    }\n\n    function abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: invalid status\")\n\n    }\n\n    function abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d9578063cd992400146100f7578063e30c397814610113578063f2fde38b1461013157610088565b806340ebc6771461008d57806347094e2e146100a9578063715018a6146100c557806379ba5097146100cf575b600080fd5b6100a760048036038101906100a291906109bd565b61014d565b005b6100c360048036038101906100be9190610a3d565b610415565b005b6100cd610480565b005b6100d7610494565b005b6100e1610521565b6040516100ee9190610a79565b60405180910390f35b610111600480360381019061010c9190610aca565b61054b565b005b61011b6106d0565b6040516101289190610a79565b60405180910390f35b61014b60048036038101906101469190610b1d565b6106fa565b005b6101556107a7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb90610ba7565b60405180910390fd5b60007f747265617375727900000000000000000000000000000000000000000000000083036102c7578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027490610c39565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506103c5565b7f61676772656761746f720000000000000000000000000000000000000000000083036103c4578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610ccb565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610410578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b61041d6107a7565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b816040516104759190610cfa565b60405180910390a150565b6104886107a7565b6104926000610825565b565b600061049e610856565b90508073ffffffffffffffffffffffffffffffffffffffff166104bf6106d0565b73ffffffffffffffffffffffffffffffffffffffff1614610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610d87565b60405180910390fd5b61051e81610825565b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105536107a7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610ba7565b60405180910390fd5b60018114806105d15750600281145b610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610df3565b60405180910390fd5b7f746f6b656e00000000000000000000000000000000000000000000000000000083036106cb5780609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c836040516106c29190610e22565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107026107a7565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610762610521565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107af610856565b73ffffffffffffffffffffffffffffffffffffffff166107cd610521565b73ffffffffffffffffffffffffffffffffffffffff1614610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081a90610e89565b60405180910390fd5b565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556108538161085e565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61093c81610929565b811461094757600080fd5b50565b60008135905061095981610933565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061098a8261095f565b9050919050565b61099a8161097f565b81146109a557600080fd5b50565b6000813590506109b781610991565b92915050565b600080604083850312156109d4576109d3610924565b5b60006109e28582860161094a565b92505060206109f3858286016109a8565b9150509250929050565b600067ffffffffffffffff82169050919050565b610a1a816109fd565b8114610a2557600080fd5b50565b600081359050610a3781610a11565b92915050565b600060208284031215610a5357610a52610924565b5b6000610a6184828501610a28565b91505092915050565b610a738161097f565b82525050565b6000602082019050610a8e6000830184610a6a565b92915050565b6000819050919050565b610aa781610a94565b8114610ab257600080fd5b50565b600081359050610ac481610a9e565b92915050565b600080600060608486031215610ae357610ae2610924565b5b6000610af18682870161094a565b9350506020610b02868287016109a8565b9250506040610b1386828701610ab5565b9150509250925092565b600060208284031215610b3357610b32610924565b5b6000610b41848285016109a8565b91505092915050565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b6000610b91601583610b4a565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b6000610c23602583610b4a565b9150610c2e82610bc7565b604082019050919050565b60006020820190508181036000830152610c5281610c16565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b6000610cb5602783610b4a565b9150610cc082610c59565b604082019050919050565b60006020820190508181036000830152610ce481610ca8565b9050919050565b610cf4816109fd565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000610d71602983610b4a565b9150610d7c82610d15565b604082019050919050565b60006020820190508181036000830152610da081610d64565b9050919050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b6000610ddd601783610b4a565b9150610de882610da7565b602082019050919050565b60006020820190508181036000830152610e0c81610dd0565b9050919050565b610e1c81610a94565b82525050565b6000602082019050610e376000830184610e13565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e73602083610b4a565b9150610e7e82610e3d565b602082019050919050565b60006020820190508181036000830152610ea281610e66565b905091905056fea264697066735822122081a5d6584d68533dd564cd3881f4d239736bf0f05a86d786e63e89ce2a2d220664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x131 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x2C7 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3C5 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x3C4 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x375 SWAP1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x410 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x41D PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x488 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x492 PUSH1 0x0 PUSH2 0x825 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E PUSH2 0x856 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BF PUSH2 0x6D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51E DUP2 PUSH2 0x825 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x5D1 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x6CB JUMPI DUP1 PUSH1 0x9A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x702 PUSH2 0x7A7 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x762 PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x856 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CD PUSH2 0x521 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81A SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x853 DUP2 PUSH2 0x85E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93C DUP2 PUSH2 0x929 JUMP JUMPDEST DUP2 EQ PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x959 DUP2 PUSH2 0x933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98A DUP3 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99A DUP2 PUSH2 0x97F JUMP JUMPDEST DUP2 EQ PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B7 DUP2 PUSH2 0x991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9D4 JUMPI PUSH2 0x9D3 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E2 DUP6 DUP3 DUP7 ADD PUSH2 0x94A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9F3 DUP6 DUP3 DUP7 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1A DUP2 PUSH2 0x9FD JUMP JUMPDEST DUP2 EQ PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA37 DUP2 PUSH2 0xA11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA52 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP5 DUP3 DUP6 ADD PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA73 DUP2 PUSH2 0x97F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 DUP2 PUSH2 0xA94 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC4 DUP2 PUSH2 0xA9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF1 DUP7 DUP3 DUP8 ADD PUSH2 0x94A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB02 DUP7 DUP3 DUP8 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB13 DUP7 DUP3 DUP8 ADD PUSH2 0xAB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB41 DUP5 DUP3 DUP6 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB91 PUSH1 0x15 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC0 DUP2 PUSH2 0xB84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC23 PUSH1 0x25 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xC2E DUP3 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC52 DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB5 PUSH1 0x27 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xCC0 DUP3 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE4 DUP2 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0x9FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD71 PUSH1 0x29 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xD7C DUP3 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDA0 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD PUSH1 0x17 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xDE8 DUP3 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0C DUP2 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xA94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE73 PUSH1 0x20 DUP4 PUSH2 0xB4A JUMP JUMPDEST SWAP2 POP PUSH2 0xE7E DUP3 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEA2 DUP2 PUSH2 0xE66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xA5 0xD6 PC 0x4D PUSH9 0x533DD564CD3881F4D2 CODECOPY PUSH20 0x6BF0F05A86D786E63E89CE2A2D220664736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"276:2570:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1894:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2085:101:1;;;:::i;:::-;;2031:212:0;;;:::i;:::-;;1462:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1426:335:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1144:99:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1436:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:551:11;1355:13:1;:11;:13::i;:::-;2401:1:11::1;2384:19;;:5;:19;;::::0;2376:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2433:12;2453:18;:4;:18:::0;2449:326:::1;;2505:5;2486:24;;:15;;;;;;;;;;;:24;;::::0;2478:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2575:5;2557:15;;:23;;;;;;;;;;;;;;;;;;2595:4;2585:14;;2449:326;;;2614:20;:4;:20:::0;2610:165:::1;;2671:5;2649:27;;:18;;;;;;;;;;;:27;;::::0;2641:79:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2746:5;2725:18;;:26;;;;;;;;;;;;;;;;;;2766:4;2756:14;;2610:165;2449:326;2782:7;2778:63;;;2830:5;2801:35;;2824:4;2801:35;;;;;;;;;;2778:63;2372:472;2293:551:::0;;:::o;1894:170::-;1355:13:1;:11;:13::i;:::-;1993:19:11::1;1972:18;;:40;;;;;;;;;;;;;;;;;;2021:39;2040:19;2021:39;;;;;;:::i;:::-;;;;;;;;1894:170:::0;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;2031:212:0:-;2083:14;2100:12;:10;:12::i;:::-;2083:29;;2148:6;2130:24;;:14;:12;:14::i;:::-;:24;;;2122:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2210:26;2229:6;2210:18;:26::i;:::-;2073:170;2031:212::o;1462:85:1:-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;1426:335:11:-;1355:13:1;:11;:13::i;:::-;1547:1:11::1;1530:19;;:5;:19;;::::0;1522:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:1;1587:6;:11;:26;;;;1612:1;1602:6;:11;1587:26;1579:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:15;:4;:15:::0;1645:113:::1;;1698:6;1671:17;:24;1689:5;1671:24;;;;;;;;;;;;;;;:33;;;;1739:5;1714:39;;1733:4;1714:39;1746:6;1714:39;;;;;;:::i;:::-;;;;;;;;1645:113;1426:335:::0;;;:::o;1144:99:0:-;1197:7;1223:13;;;;;;;;;;;1216:20;;1144:99;:::o;1436:178::-;1355:13:1;:11;:13::i;:::-;1541:8:0::1;1525:13;;:24;;;;;;;;;;;;;;;;;;1598:8;1564:43;;1589:7;:5;:7::i;:::-;1564:43;;;;;;;;;;;;1436:178:::0;:::o;1620:130:1:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;1798:153:0:-;1887:13;;1880:20;;;;;;;;;;;1910:34;1935:8;1910:24;:34::i;:::-;1798:153;:::o;886:96:5:-;939:7;965:10;958:17;;886:96;:::o;2687:187:1:-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;88:117:14:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:101::-;1713:7;1753:18;1746:5;1742:30;1731:41;;1677:101;;;:::o;1784:120::-;1856:23;1873:5;1856:23;:::i;:::-;1849:5;1846:34;1836:62;;1894:1;1891;1884:12;1836:62;1784:120;:::o;1910:137::-;1955:5;1993:6;1980:20;1971:29;;2009:32;2035:5;2009:32;:::i;:::-;1910:137;;;;:::o;2053:327::-;2111:6;2160:2;2148:9;2139:7;2135:23;2131:32;2128:119;;;2166:79;;:::i;:::-;2128:119;2286:1;2311:52;2355:7;2346:6;2335:9;2331:22;2311:52;:::i;:::-;2301:62;;2257:116;2053:327;;;;:::o;2386:118::-;2473:24;2491:5;2473:24;:::i;:::-;2468:3;2461:37;2386:118;;:::o;2510:222::-;2603:4;2641:2;2630:9;2626:18;2618:26;;2654:71;2722:1;2711:9;2707:17;2698:6;2654:71;:::i;:::-;2510:222;;;;:::o;2738:77::-;2775:7;2804:5;2793:16;;2738:77;;;:::o;2821:122::-;2894:24;2912:5;2894:24;:::i;:::-;2887:5;2884:35;2874:63;;2933:1;2930;2923:12;2874:63;2821:122;:::o;2949:139::-;2995:5;3033:6;3020:20;3011:29;;3049:33;3076:5;3049:33;:::i;:::-;2949:139;;;;:::o;3094:619::-;3171:6;3179;3187;3236:2;3224:9;3215:7;3211:23;3207:32;3204:119;;;3242:79;;:::i;:::-;3204:119;3362:1;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3333:117;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3617:2;3643:53;3688:7;3679:6;3668:9;3664:22;3643:53;:::i;:::-;3633:63;;3588:118;3094:619;;;;;:::o;3719:329::-;3778:6;3827:2;3815:9;3806:7;3802:23;3798:32;3795:119;;;3833:79;;:::i;:::-;3795:119;3953:1;3978:53;4023:7;4014:6;4003:9;3999:22;3978:53;:::i;:::-;3968:63;;3924:117;3719:329;;;;:::o;4054:169::-;4138:11;4172:6;4167:3;4160:19;4212:4;4207:3;4203:14;4188:29;;4054:169;;;;:::o;4229:171::-;4369:23;4365:1;4357:6;4353:14;4346:47;4229:171;:::o;4406:366::-;4548:3;4569:67;4633:2;4628:3;4569:67;:::i;:::-;4562:74;;4645:93;4734:3;4645:93;:::i;:::-;4763:2;4758:3;4754:12;4747:19;;4406:366;;;:::o;4778:419::-;4944:4;4982:2;4971:9;4967:18;4959:26;;5031:9;5025:4;5021:20;5017:1;5006:9;5002:17;4995:47;5059:131;5185:4;5059:131;:::i;:::-;5051:139;;4778:419;;;:::o;5203:224::-;5343:34;5339:1;5331:6;5327:14;5320:58;5412:7;5407:2;5399:6;5395:15;5388:32;5203:224;:::o;5433:366::-;5575:3;5596:67;5660:2;5655:3;5596:67;:::i;:::-;5589:74;;5672:93;5761:3;5672:93;:::i;:::-;5790:2;5785:3;5781:12;5774:19;;5433:366;;;:::o;5805:419::-;5971:4;6009:2;5998:9;5994:18;5986:26;;6058:9;6052:4;6048:20;6044:1;6033:9;6029:17;6022:47;6086:131;6212:4;6086:131;:::i;:::-;6078:139;;5805:419;;;:::o;6230:226::-;6370:34;6366:1;6358:6;6354:14;6347:58;6439:9;6434:2;6426:6;6422:15;6415:34;6230:226;:::o;6462:366::-;6604:3;6625:67;6689:2;6684:3;6625:67;:::i;:::-;6618:74;;6701:93;6790:3;6701:93;:::i;:::-;6819:2;6814:3;6810:12;6803:19;;6462:366;;;:::o;6834:419::-;7000:4;7038:2;7027:9;7023:18;7015:26;;7087:9;7081:4;7077:20;7073:1;7062:9;7058:17;7051:47;7115:131;7241:4;7115:131;:::i;:::-;7107:139;;6834:419;;;:::o;7259:115::-;7344:23;7361:5;7344:23;:::i;:::-;7339:3;7332:36;7259:115;;:::o;7380:218::-;7471:4;7509:2;7498:9;7494:18;7486:26;;7522:69;7588:1;7577:9;7573:17;7564:6;7522:69;:::i;:::-;7380:218;;;;:::o;7604:228::-;7744:34;7740:1;7732:6;7728:14;7721:58;7813:11;7808:2;7800:6;7796:15;7789:36;7604:228;:::o;7838:366::-;7980:3;8001:67;8065:2;8060:3;8001:67;:::i;:::-;7994:74;;8077:93;8166:3;8077:93;:::i;:::-;8195:2;8190:3;8186:12;8179:19;;7838:366;;;:::o;8210:419::-;8376:4;8414:2;8403:9;8399:18;8391:26;;8463:9;8457:4;8453:20;8449:1;8438:9;8434:17;8427:47;8491:131;8617:4;8491:131;:::i;:::-;8483:139;;8210:419;;;:::o;8635:173::-;8775:25;8771:1;8763:6;8759:14;8752:49;8635:173;:::o;8814:366::-;8956:3;8977:67;9041:2;9036:3;8977:67;:::i;:::-;8970:74;;9053:93;9142:3;9053:93;:::i;:::-;9171:2;9166:3;9162:12;9155:19;;8814:366;;;:::o;9186:419::-;9352:4;9390:2;9379:9;9375:18;9367:26;;9439:9;9433:4;9429:20;9425:1;9414:9;9410:17;9403:47;9467:131;9593:4;9467:131;:::i;:::-;9459:139;;9186:419;;;:::o;9611:118::-;9698:24;9716:5;9698:24;:::i;:::-;9693:3;9686:37;9611:118;;:::o;9735:222::-;9828:4;9866:2;9855:9;9851:18;9843:26;;9879:71;9947:1;9936:9;9932:17;9923:6;9879:71;:::i;:::-;9735:222;;;;:::o;9963:182::-;10103:34;10099:1;10091:6;10087:14;10080:58;9963:182;:::o;10151:366::-;10293:3;10314:67;10378:2;10373:3;10314:67;:::i;:::-;10307:74;;10390:93;10479:3;10390:93;:::i;:::-;10508:2;10503:3;10499:12;10492:19;;10151:366;;;:::o;10523:419::-;10689:4;10727:2;10716:9;10712:18;10704:26;;10776:9;10770:4;10766:20;10762:1;10751:9;10747:17;10740:47;10804:131;10930:4;10804:131;:::i;:::-;10796:139;;10523:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"761400","executionCost":"792","totalCost":"762192"},"external":{"acceptOwnership()":"54725","owner()":"2522","pendingOwner()":"2566","renounceOwnership()":"54714","settingManagerBool(bytes32,address,uint256)":"infinite","transferOwnership(address)":"infinite","updateProtocolAddress(bytes32,address)":"31072","updateProtocolFee(uint64)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","settingManagerBool(bytes32,address,uint256)":"cd992400","transferOwnership(address)":"f2fde38b","updateProtocolAddress(bytes32,address)":"40ebc677","updateProtocolFee(uint64)":"47094e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"ProtocolAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"protocolFee\",\"type\":\"uint64\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"SetFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"SettingManagerBool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"settingManagerBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"updateProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_protocolFeePercent\",\"type\":\"uint64\"}],\"name\":\"updateProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"settingManagerBool(bytes32,address,uint256)\":{\"details\":\"Sets the boolean value for a specific setting.\",\"params\":{\"status\":\"The boolean value to be set. Requirements: - The value must not be a zero address.\",\"value\":\"The address or value associated with the setting.\",\"what\":\"The setting to be updated.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"updateProtocolAddress(bytes32,address)\":{\"details\":\"Updates a protocol address.\",\"params\":{\"value\":\"The new address to be set. Requirements: - The value must not be a zero address.\",\"what\":\"The address type to be updated (treasury or aggregator).\"}},\"updateProtocolFee(uint64)\":{\"details\":\"Updates the protocol fee percentage.\",\"params\":{\"_protocolFeePercent\":\"The new protocol fee percentage to be set.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GatewaySettingManager.sol\":\"GatewaySettingManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"contracts/GatewaySettingManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\n/**\\n * @title GatewaySettingManager\\n * @dev This contract manages the settings and configurations for the Gateway protocol.\\n */\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\\n\\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\\n\\tuint256 internal MAX_BPS;\\n\\tuint64 internal protocolFeePercent;\\n\\taddress internal treasuryAddress;\\n\\taddress internal _aggregatorAddress;\\n\\tmapping(address => uint256) internal _isTokenSupported;\\n\\n\\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\\n\\tuint256[50] private __gap;\\n\\n\\n\\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\\n\\tevent ProtocolFeeUpdated(uint64 protocolFee);\\n\\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\\n\\tevent SetFeeRecipient(address indexed treasuryAddress);\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\n\\t/**\\n\\t * @dev Sets the boolean value for a specific setting.\\n\\t * @param what The setting to be updated.\\n\\t * @param value The address or value associated with the setting.\\n\\t * @param status The boolean value to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\trequire(status == 1 || status == 2, 'Gateway: invalid status');\\n\\t\\tif (what == 'token') {\\n\\t\\t\\t_isTokenSupported[value] = status;\\n\\t\\t\\temit SettingManagerBool(what, value, status);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates the protocol fee percentage.\\n\\t * @param _protocolFeePercent The new protocol fee percentage to be set.\\n\\t */\\n\\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\\n\\t\\tprotocolFeePercent = _protocolFeePercent;\\n\\t\\temit ProtocolFeeUpdated(_protocolFeePercent);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates a protocol address.\\n\\t * @param what The address type to be updated (treasury or aggregator).\\n\\t * @param value The new address to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\tbool updated;\\n\\t\\tif (what == 'treasury') {\\n\\t\\t\\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\\n\\t\\t\\ttreasuryAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t} else if (what == 'aggregator') {\\n\\t\\t\\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\\n\\t\\t\\t_aggregatorAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t}\\n\\t\\tif (updated) {\\n\\t\\t\\temit ProtocolAddressUpdated(what, value);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xa6bc7df8377942cbbcd340f9fddad581486e8842ab71e5109b4d71ea1e148059\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":2403,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"MAX_BPS","offset":0,"slot":"151","type":"t_uint256"},{"astId":2405,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"protocolFeePercent","offset":0,"slot":"152","type":"t_uint64"},{"astId":2407,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"treasuryAddress","offset":8,"slot":"152","type":"t_address"},{"astId":2409,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_aggregatorAddress","offset":0,"slot":"153","type":"t_address"},{"astId":2413,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_isTokenSupported","offset":0,"slot":"154","type":"t_mapping(t_address,t_uint256)"},{"astId":2417,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IGateway.sol":{"IGateway":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFee","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"splitOrderId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"settlePercent","type":"uint96"}],"name":"OrderSettled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"senderFee","type":"address"},{"indexed":false,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"rate","type":"uint96"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"ProcessSettlement","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SenderFeeTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"_senderFee","type":"uint256"},{"internalType":"address","name":"_refundAddress","type":"address"},{"internalType":"string","name":"messageHash","type":"string"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFeeDetails","outputs":[{"internalType":"uint64","name":"protocolReward","type":"uint64"},{"internalType":"uint256","name":"max_bps","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"getOrderInfo","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"senderFee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint96","name":"currentBPS","type":"uint96"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IGateway.Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isTokenSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"_senderFee","type":"uint256"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"string","name":"_messageHash","type":"string"}],"name":"processSettlement","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"refund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_splitOrderId","type":"bytes32"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"uint64","name":"_settlePercent","type":"uint64"}],"name":"settle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"OrderCreated(address,address,uint256,uint256,bytes32,uint256,string)":{"details":"Emitted when a deposit is made.","params":{"amount":"The amount of the deposit.","messageHash":"The hash of the message.","orderId":"The ID of the order.","rate":"The rate at which the deposit is made.","sender":"The address of the sender.","token":"The address of the deposited token."}},"OrderRefunded(uint256,bytes32)":{"details":"Emitted when an aggregator refunds a transaction.","params":{"fee":"The fee deducted from the refund amount.","orderId":"The ID of the order."}},"OrderSettled(bytes32,bytes32,address,uint96)":{"details":"Emitted when an aggregator settles a transaction.","params":{"liquidityProvider":"The address of the liquidity provider.","orderId":"The ID of the order.","settlePercent":"The percentage at which the transaction is settled.","splitOrderId":"The ID of the split order."}},"ProcessSettlement(bytes32,uint256,address,address,address,address,uint96,string)":{"details":"Emitted when an onramp order is successfully processed"},"SenderFeeTransferred(address,uint256)":{"details":"Emitted when the sender's fee is transferred.","params":{"amount":"The amount of the fee transferred.","sender":"The address of the sender."}}},"kind":"dev","methods":{"createOrder(address,uint256,uint96,address,uint256,address,string)":{"details":"Requirements: - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call. - `_token` must be an acceptable token. See {isTokenSupported}. - `amount` must be greater than minimum. - `_refundAddress` refund address must not be zero address.","params":{"_amount":"The amount in the decimal of `_token` to be locked.","_rate":"The rate at which the sender intends to sell `_amount` of `_token`.","_refundAddress":"The address that will receive `_amount` in `_token` when there is a need to refund.","_senderFee":"The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.","_senderFeeRecipient":"The address that will receive `_senderFee` in `_token`.","_token":"The address of the token.","messageHash":"The hash of the message."},"returns":{"_orderId":"The ID of the order."}},"getFeeDetails()":{"returns":{"max_bps":"The maximum basis points.","protocolReward":"The protocol reward amount."}},"getOrderInfo(bytes32)":{"params":{"_orderId":"The ID of the order."},"returns":{"_0":"Order The order details."}},"isTokenSupported(address)":{"params":{"_token":"The address of the token to check."},"returns":{"_0":"bool the token is supported."}},"processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)":{"details":"This function is restricted to be called only by an authorized aggregatorIt processes an onramp orders and transfers tokens to the user","params":{"_amount":"Amount of tokens to be sent to the user","_liquidityProvider":"Address of the liquidity provider","_messageHash":"Hash of the message associated with the order","_orderId":"Unique identifier for the order being processed","_rate":"Rate at which the tokens are being sent","_recipient":"Address of the recipient who will receive the tokens","_senderFee":"Amount of fee to be paid to the sender fee recipient","_senderFeeRecipient":"Address that will receive the sender fee","_token":"Address of the token to be sent to the user"},"returns":{"_0":"success Boolean indicating if the operation was successful"}},"refund(uint256,bytes32)":{"details":"Requirements: - Only aggregators can call this function.","params":{"_fee":"The amount to be deducted from the amount to be refunded.","_orderId":"The ID of the transaction."},"returns":{"_0":"bool the refund is successful."}},"settle(bytes32,bytes32,address,uint64)":{"params":{"_liquidityProvider":"The address of the liquidity provider.","_orderId":"The ID of the transaction.","_settlePercent":"The rate at which the transaction is settled.","_splitOrderId":"The ID of the split order."},"returns":{"_0":"bool the settlement is successful."}}},"title":"IGateway","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createOrder(address,uint256,uint96,address,uint256,address,string)":"809804f7","getFeeDetails()":"b810c636","getOrderInfo(bytes32)":"768c6ec0","isTokenSupported(address)":"75151b63","processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)":"3d3f14f4","refund(uint256,bytes32)":"71eedb88","settle(bytes32,bytes32,address,uint64)":"f22ee704"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"splitOrderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"settlePercent\",\"type\":\"uint96\"}],\"name\":\"OrderSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"senderFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"rate\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"ProcessSettlement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SenderFeeTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_senderFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDetails\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"protocolReward\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"max_bps\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"currentBPS\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGateway.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_senderFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"string\",\"name\":\"_messageHash\",\"type\":\"string\"}],\"name\":\"processSettlement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_splitOrderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_settlePercent\",\"type\":\"uint64\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OrderCreated(address,address,uint256,uint256,bytes32,uint256,string)\":{\"details\":\"Emitted when a deposit is made.\",\"params\":{\"amount\":\"The amount of the deposit.\",\"messageHash\":\"The hash of the message.\",\"orderId\":\"The ID of the order.\",\"rate\":\"The rate at which the deposit is made.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"OrderRefunded(uint256,bytes32)\":{\"details\":\"Emitted when an aggregator refunds a transaction.\",\"params\":{\"fee\":\"The fee deducted from the refund amount.\",\"orderId\":\"The ID of the order.\"}},\"OrderSettled(bytes32,bytes32,address,uint96)\":{\"details\":\"Emitted when an aggregator settles a transaction.\",\"params\":{\"liquidityProvider\":\"The address of the liquidity provider.\",\"orderId\":\"The ID of the order.\",\"settlePercent\":\"The percentage at which the transaction is settled.\",\"splitOrderId\":\"The ID of the split order.\"}},\"ProcessSettlement(bytes32,uint256,address,address,address,address,uint96,string)\":{\"details\":\"Emitted when an onramp order is successfully processed\"},\"SenderFeeTransferred(address,uint256)\":{\"details\":\"Emitted when the sender's fee is transferred.\",\"params\":{\"amount\":\"The amount of the fee transferred.\",\"sender\":\"The address of the sender.\"}}},\"kind\":\"dev\",\"methods\":{\"createOrder(address,uint256,uint96,address,uint256,address,string)\":{\"details\":\"Requirements: - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call. - `_token` must be an acceptable token. See {isTokenSupported}. - `amount` must be greater than minimum. - `_refundAddress` refund address must not be zero address.\",\"params\":{\"_amount\":\"The amount in the decimal of `_token` to be locked.\",\"_rate\":\"The rate at which the sender intends to sell `_amount` of `_token`.\",\"_refundAddress\":\"The address that will receive `_amount` in `_token` when there is a need to refund.\",\"_senderFee\":\"The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\",\"_senderFeeRecipient\":\"The address that will receive `_senderFee` in `_token`.\",\"_token\":\"The address of the token.\",\"messageHash\":\"The hash of the message.\"},\"returns\":{\"_orderId\":\"The ID of the order.\"}},\"getFeeDetails()\":{\"returns\":{\"max_bps\":\"The maximum basis points.\",\"protocolReward\":\"The protocol reward amount.\"}},\"getOrderInfo(bytes32)\":{\"params\":{\"_orderId\":\"The ID of the order.\"},\"returns\":{\"_0\":\"Order The order details.\"}},\"isTokenSupported(address)\":{\"params\":{\"_token\":\"The address of the token to check.\"},\"returns\":{\"_0\":\"bool the token is supported.\"}},\"processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)\":{\"details\":\"This function is restricted to be called only by an authorized aggregatorIt processes an onramp orders and transfers tokens to the user\",\"params\":{\"_amount\":\"Amount of tokens to be sent to the user\",\"_liquidityProvider\":\"Address of the liquidity provider\",\"_messageHash\":\"Hash of the message associated with the order\",\"_orderId\":\"Unique identifier for the order being processed\",\"_rate\":\"Rate at which the tokens are being sent\",\"_recipient\":\"Address of the recipient who will receive the tokens\",\"_senderFee\":\"Amount of fee to be paid to the sender fee recipient\",\"_senderFeeRecipient\":\"Address that will receive the sender fee\",\"_token\":\"Address of the token to be sent to the user\"},\"returns\":{\"_0\":\"success Boolean indicating if the operation was successful\"}},\"refund(uint256,bytes32)\":{\"details\":\"Requirements: - Only aggregators can call this function.\",\"params\":{\"_fee\":\"The amount to be deducted from the amount to be refunded.\",\"_orderId\":\"The ID of the transaction.\"},\"returns\":{\"_0\":\"bool the refund is successful.\"}},\"settle(bytes32,bytes32,address,uint64)\":{\"params\":{\"_liquidityProvider\":\"The address of the liquidity provider.\",\"_orderId\":\"The ID of the transaction.\",\"_settlePercent\":\"The rate at which the transaction is settled.\",\"_splitOrderId\":\"The ID of the split order.\"},\"returns\":{\"_0\":\"bool the settlement is successful.\"}}},\"title\":\"IGateway\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createOrder(address,uint256,uint96,address,uint256,address,string)\":{\"notice\":\"Locks the sender's amount of token into Gateway.\"},\"getFeeDetails()\":{\"notice\":\"Gets the fee details of Gateway.\"},\"getOrderInfo(bytes32)\":{\"notice\":\"Gets the details of an order.\"},\"isTokenSupported(address)\":{\"notice\":\"Checks if a token is supported by Gateway.\"},\"processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)\":{\"notice\":\"Process an onramp order for cryptocurrency purchase\"},\"refund(uint256,bytes32)\":{\"notice\":\"Refunds to the specified refundable address.\"},\"settle(bytes32,bytes32,address,uint64)\":{\"notice\":\"Settles a transaction and distributes rewards accordingly.\"}},\"notice\":\"Interface for the Gateway contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGateway.sol\":\"IGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/IGateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title IGateway\\n * @notice Interface for the Gateway contract.\\n */\\ninterface IGateway {\\n    /* ##################################################################\\n                                EVENTS\\n    ################################################################## */\\n    /**\\n     * @dev Emitted when a deposit is made.\\n     * @param sender The address of the sender.\\n     * @param token The address of the deposited token.\\n     * @param amount The amount of the deposit.\\n     * @param orderId The ID of the order.\\n     * @param rate The rate at which the deposit is made.\\n     * @param messageHash The hash of the message.\\n     */\\n    event OrderCreated(\\n        address indexed sender,\\n        address indexed token,\\n        uint256 indexed amount,\\n        uint256 protocolFee,\\n        bytes32 orderId,\\n        uint256 rate,\\n        string messageHash\\n    );\\n\\n    /**\\n     * @dev Emitted when an aggregator settles a transaction.\\n     * @param splitOrderId The ID of the split order.\\n     * @param orderId The ID of the order.\\n     * @param liquidityProvider The address of the liquidity provider.\\n     * @param settlePercent The percentage at which the transaction is settled.\\n     */\\n    event OrderSettled(\\n        bytes32 splitOrderId,\\n        bytes32 indexed orderId,\\n        address indexed liquidityProvider,\\n        uint96 settlePercent\\n    );\\n\\n    /**\\n     * @dev Emitted when an aggregator refunds a transaction.\\n     * @param fee The fee deducted from the refund amount.\\n     * @param orderId The ID of the order.\\n     */\\n    event OrderRefunded(uint256 fee, bytes32 indexed orderId);\\n\\n    /**\\n     * @dev Emitted when an onramp order is successfully processed\\n     */\\n    event ProcessSettlement(\\n        bytes32 indexed orderId,\\n        uint256 indexed amount,\\n        address indexed recipient,\\n        address token,\\n        address senderFee,\\n\\t\\taddress liquidityProvider,\\n\\t\\tuint96 rate,\\n\\t\\tstring messageHash\\n    );\\n\\n    /**\\n     * @dev Emitted when the sender's fee is transferred.\\n     * @param sender The address of the sender.\\n     * @param amount The amount of the fee transferred.\\n     */\\n    event SenderFeeTransferred(address indexed sender, uint256 indexed amount);\\n\\n    /* ##################################################################\\n                                STRUCTS\\n    ################################################################## */\\n    /**\\n     * @dev Struct representing an order.\\n     * @param sender The address of the sender.\\n     * @param token The address of the token.\\n     * @param senderFeeRecipient The address of the sender fee recipient.\\n     * @param senderFee The fee to be paid to the sender fee recipient.\\n     * @param protocolFee The protocol fee to be paid.\\n     * @param isFulfilled Whether the order is fulfilled.\\n     * @param isRefunded Whether the order is refunded.\\n     * @param refundAddress The address to which the refund is made.\\n     * @param currentBPS The current basis points.\\n     * @param amount The amount of the order.\\n     */\\n    struct Order {\\n        address sender;\\n        address token;\\n        address senderFeeRecipient;\\n        uint256 senderFee;\\n        uint256 protocolFee;\\n        bool isFulfilled;\\n        bool isRefunded;\\n        address refundAddress;\\n        uint96 currentBPS;\\n        uint256 amount;\\n    }\\n\\n    /* ##################################################################\\n                                EXTERNAL CALLS\\n    ################################################################## */\\n    /**\\n     * @notice Locks the sender's amount of token into Gateway.\\n     * @dev Requirements:\\n     * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\\n     * - `_token` must be an acceptable token. See {isTokenSupported}.\\n     * - `amount` must be greater than minimum.\\n     * - `_refundAddress` refund address must not be zero address.\\n     * @param _token The address of the token.\\n     * @param _amount The amount in the decimal of `_token` to be locked.\\n     * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\\n     * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\\n     * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\\n     * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\\n     * @param messageHash The hash of the message.\\n     * @return _orderId The ID of the order.\\n     */\\n    function createOrder(\\n        address _token,\\n        uint256 _amount,\\n        uint96 _rate,\\n        address _senderFeeRecipient,\\n        uint256 _senderFee,\\n        address _refundAddress,\\n        string calldata messageHash\\n    ) external returns (bytes32 _orderId);\\n\\n    /**\\n     * @notice Settles a transaction and distributes rewards accordingly.\\n     * @param _splitOrderId The ID of the split order.\\n     * @param _orderId The ID of the transaction.\\n     * @param _liquidityProvider The address of the liquidity provider.\\n     * @param _settlePercent The rate at which the transaction is settled.\\n     * @return bool the settlement is successful.\\n     */\\n    function settle(\\n        bytes32 _splitOrderId,\\n        bytes32 _orderId,\\n        address _liquidityProvider,\\n        uint64 _settlePercent\\n    ) external returns (bool);\\n\\n    /**\\n     * @notice Refunds to the specified refundable address.\\n     * @dev Requirements:\\n     * - Only aggregators can call this function.\\n     * @param _fee The amount to be deducted from the amount to be refunded.\\n     * @param _orderId The ID of the transaction.\\n     * @return bool the refund is successful.\\n     */\\n    function refund(uint256 _fee, bytes32 _orderId) external returns (bool);\\n\\n    /**\\n     * @notice Process an onramp order for cryptocurrency purchase\\n     * @dev This function is restricted to be called only by an authorized aggregator\\n     * @dev It processes an onramp orders and transfers tokens to the user\\n     * @param _orderId Unique identifier for the order being processed\\n     * @param _token Address of the token to be sent to the user\\n     * @param _amount Amount of tokens to be sent to the user\\n     * @param _senderFeeRecipient Address that will receive the sender fee\\n     * @param _senderFee Amount of fee to be paid to the sender fee recipient\\n     * @param _liquidityProvider Address of the liquidity provider\\n     * @param _recipient Address of the recipient who will receive the tokens\\n     * @param _rate Rate at which the tokens are being sent\\n     * @param _messageHash Hash of the message associated with the order\\n     * @return success Boolean indicating if the operation was successful\\n     */\\n    function processSettlement(\\n        bytes32 _orderId,\\n        address _token,\\n        uint256 _amount,\\n        address _senderFeeRecipient,\\n        uint256 _senderFee,\\n        address _liquidityProvider,\\n        address _recipient,\\n        uint96 _rate,\\n        string calldata _messageHash\\n    ) external returns (bool);\\n\\n    /**\\n     * @notice Checks if a token is supported by Gateway.\\n     * @param _token The address of the token to check.\\n     * @return bool the token is supported.\\n     */\\n    function isTokenSupported(address _token) external view returns (bool);\\n\\n    /**\\n     * @notice Gets the details of an order.\\n     * @param _orderId The ID of the order.\\n     * @return Order The order details.\\n     */\\n    function getOrderInfo(\\n        bytes32 _orderId\\n    ) external view returns (Order memory);\\n\\n    /**\\n     * @notice Gets the fee details of Gateway.\\n     * @return protocolReward The protocol reward amount.\\n     * @return max_bps The maximum basis points.\\n     */\\n    function getFeeDetails()\\n        external\\n        view\\n        returns (uint64 protocolReward, uint256 max_bps);\\n}\\n\",\"keccak256\":\"0x59024bca0024d693328f4d25d8ba38fdb8d729f117738fae04925ac723eedea3\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"createOrder(address,uint256,uint96,address,uint256,address,string)":{"notice":"Locks the sender's amount of token into Gateway."},"getFeeDetails()":{"notice":"Gets the fee details of Gateway."},"getOrderInfo(bytes32)":{"notice":"Gets the details of an order."},"isTokenSupported(address)":{"notice":"Checks if a token is supported by Gateway."},"processSettlement(bytes32,address,uint256,address,uint256,address,address,uint96,string)":{"notice":"Process an onramp order for cryptocurrency purchase"},"refund(uint256,bytes32)":{"notice":"Refunds to the specified refundable address."},"settle(bytes32,bytes32,address,uint64)":{"notice":"Settles a transaction and distributes rewards accordingly."}},"notice":"Interface for the Gateway contract.","version":1}}},"contracts/mocks/MockUSDC.sol":{"MockUSDT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Mock mintable USDC","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2782":{"entryPoint":null,"id":2782,"parameterSlots":0,"returnSlots":0},"@_962":{"entryPoint":null,"id":962,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_1503":{"entryPoint":568,"id":1503,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1492":{"entryPoint":563,"id":1492,"parameterSlots":3,"returnSlots":0},"@_mint_1321":{"entryPoint":198,"id":1321,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":1496,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1675,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1535,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":731,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":573,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1438,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1616,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1052,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":867,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1013,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":887,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1207,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":752,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":678,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1177,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":877,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1145,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1569,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":631,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":584,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":927,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":768,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1132,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":985,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":1455,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":781,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":937,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":980,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7125:14","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:14","statements":[{"nodeType":"YulAssignment","src":"77:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:14"},"nodeType":"YulFunctionCall","src":"87:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:14","type":""}],"src":"7:99:14"},{"body":{"nodeType":"YulBlock","src":"140:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:14"},"nodeType":"YulFunctionCall","src":"150:88:14"},"nodeType":"YulExpressionStatement","src":"150:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:14"},"nodeType":"YulFunctionCall","src":"247:15:14"},"nodeType":"YulExpressionStatement","src":"247:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:14"},"nodeType":"YulFunctionCall","src":"271:15:14"},"nodeType":"YulExpressionStatement","src":"271:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:14"},{"body":{"nodeType":"YulBlock","src":"326:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:14"},"nodeType":"YulFunctionCall","src":"336:88:14"},"nodeType":"YulExpressionStatement","src":"336:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:14"},"nodeType":"YulFunctionCall","src":"433:15:14"},"nodeType":"YulExpressionStatement","src":"433:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:14"},"nodeType":"YulFunctionCall","src":"457:15:14"},"nodeType":"YulExpressionStatement","src":"457:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:14"},{"body":{"nodeType":"YulBlock","src":"535:269:14","statements":[{"nodeType":"YulAssignment","src":"545:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:14"},"nodeType":"YulFunctionCall","src":"555:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:14"},"nodeType":"YulFunctionCall","src":"602:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:14","statements":[{"nodeType":"YulAssignment","src":"667:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:14"},"nodeType":"YulFunctionCall","src":"677:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:14"},"nodeType":"YulFunctionCall","src":"626:26:14"},"nodeType":"YulIf","src":"623:81:14"},{"body":{"nodeType":"YulBlock","src":"756:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:14"},"nodeType":"YulFunctionCall","src":"770:18:14"},"nodeType":"YulExpressionStatement","src":"770:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:14"},"nodeType":"YulFunctionCall","src":"740:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:14"},"nodeType":"YulFunctionCall","src":"717:38:14"},"nodeType":"YulIf","src":"714:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:14","type":""}],"src":"484:320:14"},{"body":{"nodeType":"YulBlock","src":"864:87:14","statements":[{"nodeType":"YulAssignment","src":"874:11:14","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:14"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:14"},"nodeType":"YulFunctionCall","src":"895:14:14"},"nodeType":"YulExpressionStatement","src":"895:14:14"},{"nodeType":"YulAssignment","src":"918:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:14"},"nodeType":"YulFunctionCall","src":"926:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:14"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:14","type":""}],"src":"810:141:14"},{"body":{"nodeType":"YulBlock","src":"1001:49:14","statements":[{"nodeType":"YulAssignment","src":"1011:33:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:14"},"nodeType":"YulFunctionCall","src":"1025:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:14","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:14"},"nodeType":"YulFunctionCall","src":"1021:23:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:14"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:14","type":""}],"src":"957:93:14"},{"body":{"nodeType":"YulBlock","src":"1109:54:14","statements":[{"nodeType":"YulAssignment","src":"1119:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:14"},"nodeType":"YulFunctionCall","src":"1140:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:14"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:14","type":""}],"src":"1056:107:14"},{"body":{"nodeType":"YulBlock","src":"1245:317:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:14","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:14","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:14"},"nodeType":"YulFunctionCall","src":"1272:18:14"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:14"},"nodeType":"YulFunctionCall","src":"1311:97:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:14","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:14"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:14"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:14"},"nodeType":"YulFunctionCall","src":"1429:39:14"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:14"}]},{"nodeType":"YulAssignment","src":"1477:30:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:14"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:14"},"nodeType":"YulFunctionCall","src":"1497:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:14"},"nodeType":"YulFunctionCall","src":"1486:21:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:14"}]},{"nodeType":"YulAssignment","src":"1516:40:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:14"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:14"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:14"},"nodeType":"YulFunctionCall","src":"1536:19:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:14"},"nodeType":"YulFunctionCall","src":"1526:30:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:14"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:14","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:14","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:14","type":""}],"src":"1169:393:14"},{"body":{"nodeType":"YulBlock","src":"1613:32:14","statements":[{"nodeType":"YulAssignment","src":"1623:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:14","type":""}],"src":"1568:77:14"},{"body":{"nodeType":"YulBlock","src":"1683:28:14","statements":[{"nodeType":"YulAssignment","src":"1693:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:14"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:14","type":""}],"src":"1651:60:14"},{"body":{"nodeType":"YulBlock","src":"1777:82:14","statements":[{"nodeType":"YulAssignment","src":"1787:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:14"},"nodeType":"YulFunctionCall","src":"1827:24:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:14"},"nodeType":"YulFunctionCall","src":"1818:34:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:14"},"nodeType":"YulFunctionCall","src":"1800:53:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:14"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:14","type":""}],"src":"1717:142:14"},{"body":{"nodeType":"YulBlock","src":"1912:28:14","statements":[{"nodeType":"YulAssignment","src":"1922:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:14"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:14","type":""}],"src":"1865:75:14"},{"body":{"nodeType":"YulBlock","src":"2022:193:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:14","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:14"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:14"},"nodeType":"YulFunctionCall","src":"2056:39:14"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:14"},"nodeType":"YulFunctionCall","src":"2145:11:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:14"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:14"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:14"},"nodeType":"YulFunctionCall","src":"2166:41:14"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:14"},"nodeType":"YulFunctionCall","src":"2117:91:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:14"},"nodeType":"YulFunctionCall","src":"2104:105:14"},"nodeType":"YulExpressionStatement","src":"2104:105:14"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:14","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:14","type":""}],"src":"1946:269:14"},{"body":{"nodeType":"YulBlock","src":"2270:24:14","statements":[{"nodeType":"YulAssignment","src":"2280:8:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:14","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:14"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:14","type":""}],"src":"2221:73:14"},{"body":{"nodeType":"YulBlock","src":"2353:136:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:14","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:14"},"nodeType":"YulFunctionCall","src":"2377:32:14"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:14"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:14"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:14"},"nodeType":"YulFunctionCall","src":"2418:65:14"},"nodeType":"YulExpressionStatement","src":"2418:65:14"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:14","type":""}],"src":"2300:189:14"},{"body":{"nodeType":"YulBlock","src":"2545:136:14","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:14","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:14"},"nodeType":"YulFunctionCall","src":"2626:39:14"},"nodeType":"YulExpressionStatement","src":"2626:39:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:14"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:14"},"nodeType":"YulFunctionCall","src":"2562:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:14","statements":[{"nodeType":"YulAssignment","src":"2579:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:14"},"nodeType":"YulFunctionCall","src":"2588:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:14","statements":[]},"src":"2555:120:14"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:14","type":""}],"src":"2495:186:14"},{"body":{"nodeType":"YulBlock","src":"2766:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:14"},"nodeType":"YulFunctionCall","src":"2822:38:14"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:14","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:14"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:14"},"nodeType":"YulFunctionCall","src":"2906:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:14"},"nodeType":"YulFunctionCall","src":"2892:44:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:14","statements":[{"nodeType":"YulAssignment","src":"3095:23:14","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:14"},"nodeType":"YulFunctionCall","src":"3074:18:14"},"nodeType":"YulIf","src":"3071:49:14"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:14"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:14"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:14"},"nodeType":"YulFunctionCall","src":"3189:22:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:14"},"nodeType":"YulFunctionCall","src":"3175:37:14"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:14"},"nodeType":"YulFunctionCall","src":"3133:80:14"},"nodeType":"YulExpressionStatement","src":"3133:80:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:14"},"nodeType":"YulFunctionCall","src":"2780:11:14"},"nodeType":"YulIf","src":"2777:446:14"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:14","type":""}],"src":"2687:543:14"},{"body":{"nodeType":"YulBlock","src":"3299:54:14","statements":[{"nodeType":"YulAssignment","src":"3309:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:14"},"nodeType":"YulFunctionCall","src":"3330:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:14"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:14","type":""}],"src":"3236:117:14"},{"body":{"nodeType":"YulBlock","src":"3410:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:14","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:14"},"nodeType":"YulFunctionCall","src":"3465:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:14"},"nodeType":"YulFunctionCall","src":"3480:6:14"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:14"},"nodeType":"YulFunctionCall","src":"3436:51:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:14"},"nodeType":"YulFunctionCall","src":"3432:56:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:14","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:14"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:14"},"nodeType":"YulFunctionCall","src":"3507:15:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:14"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:14","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:14","type":""}],"src":"3359:169:14"},{"body":{"nodeType":"YulBlock","src":"3614:214:14","statements":[{"nodeType":"YulAssignment","src":"3747:37:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:14"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:14"},"nodeType":"YulFunctionCall","src":"3755:29:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:14"}]},{"nodeType":"YulAssignment","src":"3793:29:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:14","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:14"},"nodeType":"YulFunctionCall","src":"3810:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:14"},"nodeType":"YulFunctionCall","src":"3801:21:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:14","type":""}],"src":"3533:295:14"},{"body":{"nodeType":"YulBlock","src":"3925:1303:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:14"},"nodeType":"YulFunctionCall","src":"3950:37:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:14"},"nodeType":"YulFunctionCall","src":"4074:18:14"},"nodeType":"YulExpressionStatement","src":"4074:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:14"},"nodeType":"YulFunctionCall","src":"4041:30:14"},"nodeType":"YulIf","src":"4038:56:14"},{"nodeType":"YulVariableDeclaration","src":"4104:52:14","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:14"},"nodeType":"YulFunctionCall","src":"4144:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:14"},"nodeType":"YulFunctionCall","src":"4118:38:14"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:14"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:14"},"nodeType":"YulFunctionCall","src":"4203:67:14"},"nodeType":"YulExpressionStatement","src":"4203:67:14"},{"nodeType":"YulVariableDeclaration","src":"4280:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:14","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:14","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:14"},"nodeType":"YulFunctionCall","src":"4413:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:14"},"nodeType":"YulFunctionCall","src":"4401:22:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:14"},"nodeType":"YulFunctionCall","src":"4451:37:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:14"},"nodeType":"YulFunctionCall","src":"4608:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:14"},"nodeType":"YulFunctionCall","src":"4602:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:14"},"nodeType":"YulFunctionCall","src":"4587:42:14"},"nodeType":"YulExpressionStatement","src":"4587:42:14"},{"nodeType":"YulAssignment","src":"4646:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:14"},"nodeType":"YulFunctionCall","src":"4656:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:14"}]},{"nodeType":"YulAssignment","src":"4687:31:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:14"},"nodeType":"YulFunctionCall","src":"4700:18:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:14"},"nodeType":"YulFunctionCall","src":"4532:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:14","statements":[{"nodeType":"YulAssignment","src":"4549:17:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:14"},"nodeType":"YulFunctionCall","src":"4554:12:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:14","statements":[]},"src":"4524:208:14"},{"body":{"nodeType":"YulBlock","src":"4768:156:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:14"},"nodeType":"YulFunctionCall","src":"4809:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:14"},"nodeType":"YulFunctionCall","src":"4803:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:14"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:14","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:14"},"nodeType":"YulFunctionCall","src":"4891:17:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:14"},"nodeType":"YulFunctionCall","src":"4861:48:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:14"},"nodeType":"YulFunctionCall","src":"4846:64:14"},"nodeType":"YulExpressionStatement","src":"4846:64:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:14"},"nodeType":"YulFunctionCall","src":"4748:19:14"},"nodeType":"YulIf","src":"4745:179:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:14"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:14","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:14"},"nodeType":"YulFunctionCall","src":"4954:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:14"},"nodeType":"YulFunctionCall","src":"4950:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:14"},"nodeType":"YulFunctionCall","src":"4937:36:14"},"nodeType":"YulExpressionStatement","src":"4937:36:14"}]},"nodeType":"YulCase","src":"4365:618:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:14","statements":[{"nodeType":"YulAssignment","src":"5069:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:14"},"nodeType":"YulFunctionCall","src":"5084:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:14"},"nodeType":"YulFunctionCall","src":"5078:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:14"},"nodeType":"YulIf","src":"5041:77:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:14"},"nodeType":"YulFunctionCall","src":"5144:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:14"},"nodeType":"YulFunctionCall","src":"5131:81:14"},"nodeType":"YulExpressionStatement","src":"5131:81:14"}]},"nodeType":"YulCase","src":"4992:230:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:14"},"nodeType":"YulFunctionCall","src":"4342:14:14"},"nodeType":"YulSwitch","src":"4335:887:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:14","type":""}],"src":"3833:1395:14"},{"body":{"nodeType":"YulBlock","src":"5330:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5347:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"5352:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5340:6:14"},"nodeType":"YulFunctionCall","src":"5340:19:14"},"nodeType":"YulExpressionStatement","src":"5340:19:14"},{"nodeType":"YulAssignment","src":"5368:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5387:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5392:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5383:3:14"},"nodeType":"YulFunctionCall","src":"5383:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5368:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5302:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"5307:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5318:11:14","type":""}],"src":"5234:169:14"},{"body":{"nodeType":"YulBlock","src":"5515:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5537:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5545:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:14"},"nodeType":"YulFunctionCall","src":"5533:14:14"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"5549:33:14","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5526:6:14"},"nodeType":"YulFunctionCall","src":"5526:57:14"},"nodeType":"YulExpressionStatement","src":"5526:57:14"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5507:6:14","type":""}],"src":"5409:181:14"},{"body":{"nodeType":"YulBlock","src":"5742:220:14","statements":[{"nodeType":"YulAssignment","src":"5752:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5818:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5823:2:14","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5759:58:14"},"nodeType":"YulFunctionCall","src":"5759:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5752:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5924:3:14"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"5835:88:14"},"nodeType":"YulFunctionCall","src":"5835:93:14"},"nodeType":"YulExpressionStatement","src":"5835:93:14"},{"nodeType":"YulAssignment","src":"5937:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5948:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5953:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:14"},"nodeType":"YulFunctionCall","src":"5944:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5937:3:14"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5730:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5738:3:14","type":""}],"src":"5596:366:14"},{"body":{"nodeType":"YulBlock","src":"6139:248:14","statements":[{"nodeType":"YulAssignment","src":"6149:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6161:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6172:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6157:3:14"},"nodeType":"YulFunctionCall","src":"6157:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6149:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:14"},"nodeType":"YulFunctionCall","src":"6192:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6215:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6221:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6211:3:14"},"nodeType":"YulFunctionCall","src":"6211:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6185:6:14"},"nodeType":"YulFunctionCall","src":"6185:47:14"},"nodeType":"YulExpressionStatement","src":"6185:47:14"},{"nodeType":"YulAssignment","src":"6241:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6375:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6249:124:14"},"nodeType":"YulFunctionCall","src":"6249:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6241:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6119:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6134:4:14","type":""}],"src":"5968:419:14"},{"body":{"nodeType":"YulBlock","src":"6421:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6438:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6441:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6431:6:14"},"nodeType":"YulFunctionCall","src":"6431:88:14"},"nodeType":"YulExpressionStatement","src":"6431:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6535:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6538:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6528:6:14"},"nodeType":"YulFunctionCall","src":"6528:15:14"},"nodeType":"YulExpressionStatement","src":"6528:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6559:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6562:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6552:6:14"},"nodeType":"YulFunctionCall","src":"6552:15:14"},"nodeType":"YulExpressionStatement","src":"6552:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6393:180:14"},{"body":{"nodeType":"YulBlock","src":"6623:147:14","statements":[{"nodeType":"YulAssignment","src":"6633:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6656:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6638:17:14"},"nodeType":"YulFunctionCall","src":"6638:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6633:1:14"}]},{"nodeType":"YulAssignment","src":"6667:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6690:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6672:17:14"},"nodeType":"YulFunctionCall","src":"6672:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6667:1:14"}]},{"nodeType":"YulAssignment","src":"6701:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6712:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6715:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6708:3:14"},"nodeType":"YulFunctionCall","src":"6708:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6701:3:14"}]},{"body":{"nodeType":"YulBlock","src":"6741:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6743:16:14"},"nodeType":"YulFunctionCall","src":"6743:18:14"},"nodeType":"YulExpressionStatement","src":"6743:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6733:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"6736:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6730:2:14"},"nodeType":"YulFunctionCall","src":"6730:10:14"},"nodeType":"YulIf","src":"6727:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6610:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6613:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6619:3:14","type":""}],"src":"6579:191:14"},{"body":{"nodeType":"YulBlock","src":"6841:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6858:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6881:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6863:17:14"},"nodeType":"YulFunctionCall","src":"6863:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6851:6:14"},"nodeType":"YulFunctionCall","src":"6851:37:14"},"nodeType":"YulExpressionStatement","src":"6851:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6829:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6836:3:14","type":""}],"src":"6776:118:14"},{"body":{"nodeType":"YulBlock","src":"6998:124:14","statements":[{"nodeType":"YulAssignment","src":"7008:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7020:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7031:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7016:3:14"},"nodeType":"YulFunctionCall","src":"7016:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7008:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7088:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7101:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7112:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7097:3:14"},"nodeType":"YulFunctionCall","src":"7097:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7044:43:14"},"nodeType":"YulFunctionCall","src":"7044:71:14"},"nodeType":"YulExpressionStatement","src":"7044:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6970:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6982:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6993:4:14","type":""}],"src":"6900:222:14"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F636B55445343000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D55534443000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x4B7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x4B7 JUMP JUMPDEST POP POP POP PUSH3 0xC0 CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0xC6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6B9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x138 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12F SWAP1 PUSH3 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14C PUSH1 0x0 DUP4 DUP4 PUSH3 0x233 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x160 SWAP2 SWAP1 PUSH3 0x650 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x213 SWAP2 SWAP1 PUSH3 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x22F PUSH1 0x0 DUP4 DUP4 PUSH3 0x238 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D5 JUMPI PUSH3 0x2D4 PUSH3 0x277 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x33F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x300 JUMP JUMPDEST PUSH3 0x34B DUP7 DUP4 PUSH3 0x300 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x398 PUSH3 0x392 PUSH3 0x38C DUP5 PUSH3 0x363 JUMP JUMPDEST PUSH3 0x36D JUMP JUMPDEST PUSH3 0x363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B4 DUP4 PUSH3 0x377 JUMP JUMPDEST PUSH3 0x3CC PUSH3 0x3C3 DUP3 PUSH3 0x39F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x30D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3E3 PUSH3 0x3D4 JUMP JUMPDEST PUSH3 0x3F0 DUP2 DUP5 DUP5 PUSH3 0x3A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x418 JUMPI PUSH3 0x40C PUSH1 0x0 DUP3 PUSH3 0x3D9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x467 JUMPI PUSH3 0x431 DUP2 PUSH3 0x2DB JUMP JUMPDEST PUSH3 0x43C DUP5 PUSH3 0x2F0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x44C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x464 PUSH3 0x45B DUP6 PUSH3 0x2F0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3F5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x46C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A7 DUP4 DUP4 PUSH3 0x479 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4C2 DUP3 PUSH3 0x23D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4DE JUMPI PUSH3 0x4DD PUSH3 0x248 JUMP JUMPDEST JUMPDEST PUSH3 0x4EA DUP3 SLOAD PUSH3 0x2A6 JUMP JUMPDEST PUSH3 0x4F7 DUP3 DUP3 DUP6 PUSH3 0x41C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x52F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x51A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x526 DUP6 DUP3 PUSH3 0x499 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x596 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x53F DUP7 PUSH3 0x2DB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x569 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x542 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x589 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x585 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x479 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E7 PUSH1 0x1F DUP4 PUSH3 0x59E JUMP JUMPDEST SWAP2 POP PUSH3 0x5F4 DUP3 PUSH3 0x5AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x61A DUP2 PUSH3 0x5D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x65D DUP3 PUSH3 0x363 JUMP JUMPDEST SWAP2 POP PUSH3 0x66A DUP4 PUSH3 0x363 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x685 JUMPI PUSH3 0x684 PUSH3 0x621 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x696 DUP2 PUSH3 0x363 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x68B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1875 DUP1 PUSH3 0x6C9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x9975038C EQ PUSH2 0x243 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x113B JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x50E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x308 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x334 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x381 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x356 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x381 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x364 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x396 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A3 DUP2 DUP6 DUP6 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C3 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D0 DUP6 DUP3 DUP6 PUSH2 0x86A JUMP JUMPDEST PUSH2 0x3DB DUP6 DUP6 DUP6 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3FB PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH2 0x41C DUP2 DUP6 DUP6 PUSH2 0x40D DUP6 DUP10 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x431 CALLER DUP3 PUSH2 0xB6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x11D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x504 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x504 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 CALLER PUSH2 0x434 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x555 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x568 CALLER DUP3 PUSH2 0xB6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x575 CALLER DUP3 PUSH2 0xD39 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x583 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x591 DUP3 DUP7 PUSH2 0x612 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CD SWAP1 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5FA PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH2 0x607 DUP2 DUP6 DUP6 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x707 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 DUP5 DUP5 PUSH2 0x612 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x8F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DF DUP4 DUP4 DUP4 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5C SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB66 DUP5 DUP5 DUP5 PUSH2 0xE94 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE7 DUP3 PUSH1 0x0 DUP4 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC64 SWAP1 PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD20 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD34 DUP4 PUSH1 0x0 DUP5 PUSH2 0xE94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 PUSH1 0x0 DUP4 DUP4 PUSH2 0xE8F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE8B PUSH1 0x0 DUP4 DUP4 PUSH2 0xE94 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFB DUP3 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xF05 DUP2 DUP6 PUSH2 0xEA4 JUMP JUMPDEST SWAP4 POP PUSH2 0xF15 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xF1E DUP2 PUSH2 0xEDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF43 DUP2 DUP5 PUSH2 0xEF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP2 EQ PUSH2 0xF96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA8 DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC1 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP2 EQ PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDE DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101A DUP6 DUP3 DUP7 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1039 DUP2 PUSH2 0x1024 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1054 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1030 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1063 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x109D JUMPI PUSH2 0x109C PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10AB DUP7 DUP3 DUP8 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10BC DUP7 DUP3 DUP8 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10CD DUP7 DUP3 DUP8 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0x10D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1108 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1132 DUP5 DUP3 DUP6 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1151 JUMPI PUSH2 0x1150 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x115F DUP5 DUP3 DUP6 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x117F JUMPI PUSH2 0x117E PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x118D DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x119E DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1202 JUMPI PUSH2 0x1201 PUSH2 0x11A8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x124D DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1265 JUMPI PUSH2 0x1264 PUSH2 0x1208 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F636B555344543A204E6F7468696E6720746F206275726E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A1 PUSH1 0x19 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AC DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D0 DUP2 PUSH2 0x1294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1333 PUSH1 0x25 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x133E DUP3 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1362 DUP2 PUSH2 0x1326 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C5 PUSH1 0x24 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP3 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F4 DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1457 PUSH1 0x22 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1462 DUP3 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1486 DUP2 PUSH2 0x144A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C3 PUSH1 0x1D DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CE DUP3 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F2 DUP2 PUSH2 0x14B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1555 PUSH1 0x25 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1560 DUP3 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1584 DUP2 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E7 PUSH1 0x23 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F2 DUP3 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1616 DUP2 PUSH2 0x15DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1679 PUSH1 0x26 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1684 DUP3 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A8 DUP2 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170B PUSH1 0x21 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1716 DUP3 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x173A DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179D PUSH1 0x22 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A8 DUP3 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17CC DUP2 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1809 PUSH1 0x1F DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1814 DUP3 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1838 DUP2 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xD713BF4736C6764994 DUP10 0xBE PUSH27 0x244631CE61E66372A491B3CB5640B12172FE9464736F6C63430008 SLT STOP CALLER ","sourceMap":"162:496:13:-:0;;;195:89;;;;;;;;;;1980:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;246:31:13::1;252:10;264:12;246:5;;;:31;;:::i;:::-;162:496:::0;;8520:535:6;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;;;:49;;:::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;;;:48;;:::i;:::-;8520:535;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:169::-;5318:11;5352:6;5347:3;5340:19;5392:4;5387:3;5383:14;5368:29;;5234:169;;;;:::o;5409:181::-;5549:33;5545:1;5537:6;5533:14;5526:57;5409:181;:::o;5596:366::-;5738:3;5759:67;5823:2;5818:3;5759:67;:::i;:::-;5752:74;;5835:93;5924:3;5835:93;:::i;:::-;5953:2;5948:3;5944:12;5937:19;;5596:366;;;:::o;5968:419::-;6134:4;6172:2;6161:9;6157:18;6149:26;;6221:9;6215:4;6211:20;6207:1;6196:9;6192:17;6185:47;6249:131;6375:4;6249:131;:::i;:::-;6241:139;;5968:419;;;:::o;6393:180::-;6441:77;6438:1;6431:88;6538:4;6535:1;6528:15;6562:4;6559:1;6552:15;6579:191;6619:3;6638:20;6656:1;6638:20;:::i;:::-;6633:25;;6672:20;6690:1;6672:20;:::i;:::-;6667:25;;6715:1;6712;6708:9;6701:16;;6736:3;6733:1;6730:10;6727:36;;;6743:18;;:::i;:::-;6727:36;6579:191;;;;:::o;6776:118::-;6863:24;6881:5;6863:24;:::i;:::-;6858:3;6851:37;6776:118;;:::o;6900:222::-;6993:4;7031:2;7020:9;7016:18;7008:26;;7044:71;7112:1;7101:9;7097:17;7088:6;7044:71;:::i;:::-;6900:222;;;;:::o;162:496:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1503":{"entryPoint":3732,"id":1503,"parameterSlots":3,"returnSlots":0},"@_approve_1438":{"entryPoint":1697,"id":1438,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1492":{"entryPoint":3727,"id":1492,"parameterSlots":3,"returnSlots":0},"@_burn_1393":{"entryPoint":2924,"id":1393,"parameterSlots":2,"returnSlots":0},"@_mint_1321":{"entryPoint":3385,"id":1321,"parameterSlots":2,"returnSlots":0},"@_msgSender_1619":{"entryPoint":1689,"id":1619,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1481":{"entryPoint":2154,"id":1481,"parameterSlots":3,"returnSlots":0},"@_transfer_1264":{"entryPoint":2294,"id":1264,"parameterSlots":3,"returnSlots":0},"@allowance_1059":{"entryPoint":1554,"id":1059,"parameterSlots":2,"returnSlots":1},"@approve_1084":{"entryPoint":907,"id":1084,"parameterSlots":2,"returnSlots":1},"@balanceOf_1016":{"entryPoint":1076,"id":1016,"parameterSlots":1,"returnSlots":1},"@burnAll_2830":{"entryPoint":1294,"id":2830,"parameterSlots":0,"returnSlots":0},"@burn_2806":{"entryPoint":1063,"id":2806,"parameterSlots":1,"returnSlots":0},"@decimals_992":{"entryPoint":999,"id":992,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1187":{"entryPoint":1400,"id":1187,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1146":{"entryPoint":1008,"id":1146,"parameterSlots":2,"returnSlots":1},"@mint_2794":{"entryPoint":1387,"id":2794,"parameterSlots":1,"returnSlots":0},"@name_972":{"entryPoint":761,"id":972,"parameterSlots":0,"returnSlots":1},"@symbol_982":{"entryPoint":1148,"id":982,"parameterSlots":0,"returnSlots":1},"@totalSupply_1002":{"entryPoint":942,"id":1002,"parameterSlots":0,"returnSlots":1},"@transferFrom_1117":{"entryPoint":952,"id":1117,"parameterSlots":3,"returnSlots":1},"@transfer_1041":{"entryPoint":1519,"id":1041,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4456,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4228,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4068,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4144,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3824,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":5594,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":6032,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":5194,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":5302,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":5740,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09_to_t_string_memory_ptr_fromStack":{"entryPoint":4756,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":5886,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":5448,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":5048,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":4902,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":6140,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4186,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4324,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3881,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5629,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6067,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5337,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5775,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5921,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5483,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5083,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4937,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6175,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4339,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3737,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3748,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4663,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3952,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4132,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3920,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4014,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4311,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3765,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4567,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4616,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4520,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3915,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3807,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":5515,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":5953,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":5115,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":5261,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":5661,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09":{"entryPoint":4715,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":5807,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":5369,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":4969,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":4823,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":6099,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3970,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4024,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18043:14","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:14","statements":[{"nodeType":"YulAssignment","src":"77:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:14"},"nodeType":"YulFunctionCall","src":"87:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:14","type":""}],"src":"7:99:14"},{"body":{"nodeType":"YulBlock","src":"208:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:14"},"nodeType":"YulFunctionCall","src":"218:19:14"},"nodeType":"YulExpressionStatement","src":"218:19:14"},{"nodeType":"YulAssignment","src":"246:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:14"},"nodeType":"YulFunctionCall","src":"261:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:14","type":""}],"src":"112:169:14"},{"body":{"nodeType":"YulBlock","src":"349:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:14"},"nodeType":"YulFunctionCall","src":"449:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:14"},"nodeType":"YulFunctionCall","src":"468:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:14"},"nodeType":"YulFunctionCall","src":"462:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:14"},"nodeType":"YulFunctionCall","src":"442:39:14"},"nodeType":"YulExpressionStatement","src":"442:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:14"},"nodeType":"YulFunctionCall","src":"386:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:14","statements":[{"nodeType":"YulAssignment","src":"402:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:14"},"nodeType":"YulFunctionCall","src":"407:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:14","statements":[]},"src":"378:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:14"},"nodeType":"YulFunctionCall","src":"507:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:14"},"nodeType":"YulFunctionCall","src":"500:27:14"},"nodeType":"YulExpressionStatement","src":"500:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:14","type":""}],"src":"287:246:14"},{"body":{"nodeType":"YulBlock","src":"587:54:14","statements":[{"nodeType":"YulAssignment","src":"597:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:14"},"nodeType":"YulFunctionCall","src":"611:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:14"},"nodeType":"YulFunctionCall","src":"627:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:14"},"nodeType":"YulFunctionCall","src":"607:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:14","type":""}],"src":"539:102:14"},{"body":{"nodeType":"YulBlock","src":"739:285:14","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:14"},"nodeType":"YulFunctionCall","src":"763:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:14","type":""}]},{"nodeType":"YulAssignment","src":"811:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:14"},"nodeType":"YulFunctionCall","src":"818:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:14"},"nodeType":"YulFunctionCall","src":"933:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:14"},"nodeType":"YulFunctionCall","src":"898:65:14"},"nodeType":"YulExpressionStatement","src":"898:65:14"},{"nodeType":"YulAssignment","src":"972:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:14"},"nodeType":"YulFunctionCall","src":"988:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:14"},"nodeType":"YulFunctionCall","src":"979:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:14","type":""}],"src":"647:377:14"},{"body":{"nodeType":"YulBlock","src":"1148:195:14","statements":[{"nodeType":"YulAssignment","src":"1158:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:14"},"nodeType":"YulFunctionCall","src":"1166:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:14"},"nodeType":"YulFunctionCall","src":"1201:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:14"},"nodeType":"YulFunctionCall","src":"1220:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:14"},"nodeType":"YulFunctionCall","src":"1194:47:14"},"nodeType":"YulExpressionStatement","src":"1194:47:14"},{"nodeType":"YulAssignment","src":"1250:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:14"},"nodeType":"YulFunctionCall","src":"1258:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:14","type":""}],"src":"1030:313:14"},{"body":{"nodeType":"YulBlock","src":"1389:35:14","statements":[{"nodeType":"YulAssignment","src":"1399:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:14"},"nodeType":"YulFunctionCall","src":"1409:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:14","type":""}],"src":"1349:75:14"},{"body":{"nodeType":"YulBlock","src":"1519:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:14"},"nodeType":"YulFunctionCall","src":"1529:12:14"},"nodeType":"YulExpressionStatement","src":"1529:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:14"},{"body":{"nodeType":"YulBlock","src":"1642:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:14"},"nodeType":"YulFunctionCall","src":"1652:12:14"},"nodeType":"YulExpressionStatement","src":"1652:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:14"},{"body":{"nodeType":"YulBlock","src":"1721:81:14","statements":[{"nodeType":"YulAssignment","src":"1731:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:14"},"nodeType":"YulFunctionCall","src":"1742:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:14","type":""}],"src":"1676:126:14"},{"body":{"nodeType":"YulBlock","src":"1853:51:14","statements":[{"nodeType":"YulAssignment","src":"1863:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:14"},"nodeType":"YulFunctionCall","src":"1874:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:14","type":""}],"src":"1808:96:14"},{"body":{"nodeType":"YulBlock","src":"1953:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:14"},"nodeType":"YulFunctionCall","src":"2012:12:14"},"nodeType":"YulExpressionStatement","src":"2012:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:14"},"nodeType":"YulFunctionCall","src":"1983:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:14"},"nodeType":"YulFunctionCall","src":"1973:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:14"},"nodeType":"YulFunctionCall","src":"1966:43:14"},"nodeType":"YulIf","src":"1963:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:14","type":""}],"src":"1910:122:14"},{"body":{"nodeType":"YulBlock","src":"2090:87:14","statements":[{"nodeType":"YulAssignment","src":"2100:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:14"},"nodeType":"YulFunctionCall","src":"2109:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:14"},"nodeType":"YulFunctionCall","src":"2138:33:14"},"nodeType":"YulExpressionStatement","src":"2138:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:14","type":""}],"src":"2038:139:14"},{"body":{"nodeType":"YulBlock","src":"2228:32:14","statements":[{"nodeType":"YulAssignment","src":"2238:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:14","type":""}],"src":"2183:77:14"},{"body":{"nodeType":"YulBlock","src":"2309:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:14"},"nodeType":"YulFunctionCall","src":"2368:12:14"},"nodeType":"YulExpressionStatement","src":"2368:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:14"},"nodeType":"YulFunctionCall","src":"2339:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:14"},"nodeType":"YulFunctionCall","src":"2329:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:14"},"nodeType":"YulFunctionCall","src":"2322:43:14"},"nodeType":"YulIf","src":"2319:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:14","type":""}],"src":"2266:122:14"},{"body":{"nodeType":"YulBlock","src":"2446:87:14","statements":[{"nodeType":"YulAssignment","src":"2456:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:14"},"nodeType":"YulFunctionCall","src":"2465:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:14"},"nodeType":"YulFunctionCall","src":"2494:33:14"},"nodeType":"YulExpressionStatement","src":"2494:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:14","type":""}],"src":"2394:139:14"},{"body":{"nodeType":"YulBlock","src":"2622:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:14"},"nodeType":"YulFunctionCall","src":"2670:79:14"},"nodeType":"YulExpressionStatement","src":"2670:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:14"},"nodeType":"YulFunctionCall","src":"2639:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:14"},"nodeType":"YulFunctionCall","src":"2635:32:14"},"nodeType":"YulIf","src":"2632:119:14"},{"nodeType":"YulBlock","src":"2761:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:14"},"nodeType":"YulFunctionCall","src":"2836:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:14"},"nodeType":"YulFunctionCall","src":"2815:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:14"}]}]},{"nodeType":"YulBlock","src":"2888:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:14"},"nodeType":"YulFunctionCall","src":"2964:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:14"},"nodeType":"YulFunctionCall","src":"2943:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:14","type":""}],"src":"2539:474:14"},{"body":{"nodeType":"YulBlock","src":"3061:48:14","statements":[{"nodeType":"YulAssignment","src":"3071:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:14"},"nodeType":"YulFunctionCall","src":"3089:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:14"},"nodeType":"YulFunctionCall","src":"3082:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:14","type":""}],"src":"3019:90:14"},{"body":{"nodeType":"YulBlock","src":"3174:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:14"},"nodeType":"YulFunctionCall","src":"3196:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:14"},"nodeType":"YulFunctionCall","src":"3184:34:14"},"nodeType":"YulExpressionStatement","src":"3184:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:14","type":""}],"src":"3115:109:14"},{"body":{"nodeType":"YulBlock","src":"3322:118:14","statements":[{"nodeType":"YulAssignment","src":"3332:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:14"},"nodeType":"YulFunctionCall","src":"3340:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:14"},"nodeType":"YulFunctionCall","src":"3415:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:14"},"nodeType":"YulFunctionCall","src":"3368:65:14"},"nodeType":"YulExpressionStatement","src":"3368:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:14","type":""}],"src":"3230:210:14"},{"body":{"nodeType":"YulBlock","src":"3511:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:14"},"nodeType":"YulFunctionCall","src":"3533:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:14"},"nodeType":"YulFunctionCall","src":"3521:37:14"},"nodeType":"YulExpressionStatement","src":"3521:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:14","type":""}],"src":"3446:118:14"},{"body":{"nodeType":"YulBlock","src":"3668:124:14","statements":[{"nodeType":"YulAssignment","src":"3678:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:14"},"nodeType":"YulFunctionCall","src":"3686:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:14"},"nodeType":"YulFunctionCall","src":"3767:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:14"},"nodeType":"YulFunctionCall","src":"3714:71:14"},"nodeType":"YulExpressionStatement","src":"3714:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:14","type":""}],"src":"3570:222:14"},{"body":{"nodeType":"YulBlock","src":"3898:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:14"},"nodeType":"YulFunctionCall","src":"3946:79:14"},"nodeType":"YulExpressionStatement","src":"3946:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:14"},"nodeType":"YulFunctionCall","src":"3915:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:14"},"nodeType":"YulFunctionCall","src":"3911:32:14"},"nodeType":"YulIf","src":"3908:119:14"},{"nodeType":"YulBlock","src":"4037:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:14"},"nodeType":"YulFunctionCall","src":"4112:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:14"},"nodeType":"YulFunctionCall","src":"4091:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:14"}]}]},{"nodeType":"YulBlock","src":"4164:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:14"},"nodeType":"YulFunctionCall","src":"4240:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:14"},"nodeType":"YulFunctionCall","src":"4219:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:14"}]}]},{"nodeType":"YulBlock","src":"4292:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:14"},"nodeType":"YulFunctionCall","src":"4368:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:14"},"nodeType":"YulFunctionCall","src":"4347:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:14","type":""}],"src":"3798:619:14"},{"body":{"nodeType":"YulBlock","src":"4466:43:14","statements":[{"nodeType":"YulAssignment","src":"4476:27:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:14"},"nodeType":"YulFunctionCall","src":"4487:16:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:14"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:14","type":""}],"src":"4423:86:14"},{"body":{"nodeType":"YulBlock","src":"4576:51:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:14"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:14"},"nodeType":"YulFunctionCall","src":"4598:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:14"},"nodeType":"YulFunctionCall","src":"4586:35:14"},"nodeType":"YulExpressionStatement","src":"4586:35:14"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:14","type":""}],"src":"4515:112:14"},{"body":{"nodeType":"YulBlock","src":"4727:120:14","statements":[{"nodeType":"YulAssignment","src":"4737:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:14"},"nodeType":"YulFunctionCall","src":"4745:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:14"},"nodeType":"YulFunctionCall","src":"4822:17:14"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:14"},"nodeType":"YulFunctionCall","src":"4773:67:14"},"nodeType":"YulExpressionStatement","src":"4773:67:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:14","type":""}],"src":"4633:214:14"},{"body":{"nodeType":"YulBlock","src":"4919:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:14"},"nodeType":"YulFunctionCall","src":"4967:79:14"},"nodeType":"YulExpressionStatement","src":"4967:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:14"},"nodeType":"YulFunctionCall","src":"4936:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:14"},"nodeType":"YulFunctionCall","src":"4932:32:14"},"nodeType":"YulIf","src":"4929:119:14"},{"nodeType":"YulBlock","src":"5058:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:14"},"nodeType":"YulFunctionCall","src":"5133:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5112:20:14"},"nodeType":"YulFunctionCall","src":"5112:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:14","type":""}],"src":"4853:329:14"},{"body":{"nodeType":"YulBlock","src":"5254:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"5300:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5302:77:14"},"nodeType":"YulFunctionCall","src":"5302:79:14"},"nodeType":"YulExpressionStatement","src":"5302:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5275:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5284:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5271:3:14"},"nodeType":"YulFunctionCall","src":"5271:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5296:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5267:3:14"},"nodeType":"YulFunctionCall","src":"5267:32:14"},"nodeType":"YulIf","src":"5264:119:14"},{"nodeType":"YulBlock","src":"5393:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5408:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5422:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5412:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5437:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5472:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5483:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5468:3:14"},"nodeType":"YulFunctionCall","src":"5468:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5492:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5447:20:14"},"nodeType":"YulFunctionCall","src":"5447:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5437:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5224:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5235:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5247:6:14","type":""}],"src":"5188:329:14"},{"body":{"nodeType":"YulBlock","src":"5606:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"5652:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5654:77:14"},"nodeType":"YulFunctionCall","src":"5654:79:14"},"nodeType":"YulExpressionStatement","src":"5654:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5627:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5636:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5623:3:14"},"nodeType":"YulFunctionCall","src":"5623:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5648:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5619:3:14"},"nodeType":"YulFunctionCall","src":"5619:32:14"},"nodeType":"YulIf","src":"5616:119:14"},{"nodeType":"YulBlock","src":"5745:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5760:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5774:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5764:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5789:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5824:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5835:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5820:3:14"},"nodeType":"YulFunctionCall","src":"5820:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5844:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5799:20:14"},"nodeType":"YulFunctionCall","src":"5799:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5789:6:14"}]}]},{"nodeType":"YulBlock","src":"5872:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5887:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5901:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5891:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5917:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5952:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5963:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5948:3:14"},"nodeType":"YulFunctionCall","src":"5948:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5972:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5927:20:14"},"nodeType":"YulFunctionCall","src":"5927:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5917:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5568:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5579:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5591:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5599:6:14","type":""}],"src":"5523:474:14"},{"body":{"nodeType":"YulBlock","src":"6031:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6048:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6051:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6041:6:14"},"nodeType":"YulFunctionCall","src":"6041:88:14"},"nodeType":"YulExpressionStatement","src":"6041:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6145:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6148:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6138:6:14"},"nodeType":"YulFunctionCall","src":"6138:15:14"},"nodeType":"YulExpressionStatement","src":"6138:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6169:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6172:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6162:6:14"},"nodeType":"YulFunctionCall","src":"6162:15:14"},"nodeType":"YulExpressionStatement","src":"6162:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6003:180:14"},{"body":{"nodeType":"YulBlock","src":"6240:269:14","statements":[{"nodeType":"YulAssignment","src":"6250:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6264:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"6270:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6260:3:14"},"nodeType":"YulFunctionCall","src":"6260:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6250:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"6281:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6311:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6307:3:14"},"nodeType":"YulFunctionCall","src":"6307:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6285:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6358:51:14","statements":[{"nodeType":"YulAssignment","src":"6372:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6386:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6394:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6382:3:14"},"nodeType":"YulFunctionCall","src":"6382:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6372:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6338:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6331:6:14"},"nodeType":"YulFunctionCall","src":"6331:26:14"},"nodeType":"YulIf","src":"6328:81:14"},{"body":{"nodeType":"YulBlock","src":"6461:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6475:16:14"},"nodeType":"YulFunctionCall","src":"6475:18:14"},"nodeType":"YulExpressionStatement","src":"6475:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6425:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6448:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6456:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6445:2:14"},"nodeType":"YulFunctionCall","src":"6445:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6422:2:14"},"nodeType":"YulFunctionCall","src":"6422:38:14"},"nodeType":"YulIf","src":"6419:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6224:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6233:6:14","type":""}],"src":"6189:320:14"},{"body":{"nodeType":"YulBlock","src":"6543:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6560:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6563:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6553:6:14"},"nodeType":"YulFunctionCall","src":"6553:88:14"},"nodeType":"YulExpressionStatement","src":"6553:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6657:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6660:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6650:6:14"},"nodeType":"YulFunctionCall","src":"6650:15:14"},"nodeType":"YulExpressionStatement","src":"6650:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6681:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6684:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6674:6:14"},"nodeType":"YulFunctionCall","src":"6674:15:14"},"nodeType":"YulExpressionStatement","src":"6674:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6515:180:14"},{"body":{"nodeType":"YulBlock","src":"6745:147:14","statements":[{"nodeType":"YulAssignment","src":"6755:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6778:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6760:17:14"},"nodeType":"YulFunctionCall","src":"6760:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6755:1:14"}]},{"nodeType":"YulAssignment","src":"6789:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6812:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6794:17:14"},"nodeType":"YulFunctionCall","src":"6794:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6789:1:14"}]},{"nodeType":"YulAssignment","src":"6823:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6834:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6837:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6830:3:14"},"nodeType":"YulFunctionCall","src":"6830:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6823:3:14"}]},{"body":{"nodeType":"YulBlock","src":"6863:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6865:16:14"},"nodeType":"YulFunctionCall","src":"6865:18:14"},"nodeType":"YulExpressionStatement","src":"6865:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6855:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"6858:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6852:2:14"},"nodeType":"YulFunctionCall","src":"6852:10:14"},"nodeType":"YulIf","src":"6849:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6732:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6735:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6741:3:14","type":""}],"src":"6701:191:14"},{"body":{"nodeType":"YulBlock","src":"7004:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7026:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7034:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7022:3:14"},"nodeType":"YulFunctionCall","src":"7022:14:14"},{"hexValue":"4d6f636b555344543a204e6f7468696e6720746f206275726e","kind":"string","nodeType":"YulLiteral","src":"7038:27:14","type":"","value":"MockUSDT: Nothing to burn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7015:6:14"},"nodeType":"YulFunctionCall","src":"7015:51:14"},"nodeType":"YulExpressionStatement","src":"7015:51:14"}]},"name":"store_literal_in_memory_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6996:6:14","type":""}],"src":"6898:175:14"},{"body":{"nodeType":"YulBlock","src":"7225:220:14","statements":[{"nodeType":"YulAssignment","src":"7235:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7301:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7306:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7242:58:14"},"nodeType":"YulFunctionCall","src":"7242:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7235:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7407:3:14"}],"functionName":{"name":"store_literal_in_memory_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09","nodeType":"YulIdentifier","src":"7318:88:14"},"nodeType":"YulFunctionCall","src":"7318:93:14"},"nodeType":"YulExpressionStatement","src":"7318:93:14"},{"nodeType":"YulAssignment","src":"7420:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7431:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7436:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7427:3:14"},"nodeType":"YulFunctionCall","src":"7427:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7420:3:14"}]}]},"name":"abi_encode_t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7213:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7221:3:14","type":""}],"src":"7079:366:14"},{"body":{"nodeType":"YulBlock","src":"7622:248:14","statements":[{"nodeType":"YulAssignment","src":"7632:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7644:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7655:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7640:3:14"},"nodeType":"YulFunctionCall","src":"7640:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7632:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7679:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7690:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7675:3:14"},"nodeType":"YulFunctionCall","src":"7675:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7698:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7704:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7694:3:14"},"nodeType":"YulFunctionCall","src":"7694:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7668:6:14"},"nodeType":"YulFunctionCall","src":"7668:47:14"},"nodeType":"YulExpressionStatement","src":"7668:47:14"},{"nodeType":"YulAssignment","src":"7724:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7858:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7732:124:14"},"nodeType":"YulFunctionCall","src":"7732:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7724:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7602:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7617:4:14","type":""}],"src":"7451:419:14"},{"body":{"nodeType":"YulBlock","src":"7982:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8004:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8012:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8000:3:14"},"nodeType":"YulFunctionCall","src":"8000:14:14"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"8016:34:14","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7993:6:14"},"nodeType":"YulFunctionCall","src":"7993:58:14"},"nodeType":"YulExpressionStatement","src":"7993:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8072:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8080:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8068:3:14"},"nodeType":"YulFunctionCall","src":"8068:15:14"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"8085:7:14","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8061:6:14"},"nodeType":"YulFunctionCall","src":"8061:32:14"},"nodeType":"YulExpressionStatement","src":"8061:32:14"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7974:6:14","type":""}],"src":"7876:224:14"},{"body":{"nodeType":"YulBlock","src":"8252:220:14","statements":[{"nodeType":"YulAssignment","src":"8262:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8328:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8333:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8269:58:14"},"nodeType":"YulFunctionCall","src":"8269:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8262:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8434:3:14"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"8345:88:14"},"nodeType":"YulFunctionCall","src":"8345:93:14"},"nodeType":"YulExpressionStatement","src":"8345:93:14"},{"nodeType":"YulAssignment","src":"8447:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8458:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8463:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8454:3:14"},"nodeType":"YulFunctionCall","src":"8454:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8447:3:14"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8240:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8248:3:14","type":""}],"src":"8106:366:14"},{"body":{"nodeType":"YulBlock","src":"8649:248:14","statements":[{"nodeType":"YulAssignment","src":"8659:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8671:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8682:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8667:3:14"},"nodeType":"YulFunctionCall","src":"8667:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8659:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8706:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8717:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8702:3:14"},"nodeType":"YulFunctionCall","src":"8702:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8725:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8731:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8721:3:14"},"nodeType":"YulFunctionCall","src":"8721:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8695:6:14"},"nodeType":"YulFunctionCall","src":"8695:47:14"},"nodeType":"YulExpressionStatement","src":"8695:47:14"},{"nodeType":"YulAssignment","src":"8751:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8885:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8759:124:14"},"nodeType":"YulFunctionCall","src":"8759:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8751:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8629:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8644:4:14","type":""}],"src":"8478:419:14"},{"body":{"nodeType":"YulBlock","src":"9009:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9031:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9039:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9027:3:14"},"nodeType":"YulFunctionCall","src":"9027:14:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"9043:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9020:6:14"},"nodeType":"YulFunctionCall","src":"9020:58:14"},"nodeType":"YulExpressionStatement","src":"9020:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9099:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9107:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9095:3:14"},"nodeType":"YulFunctionCall","src":"9095:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"9112:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9088:6:14"},"nodeType":"YulFunctionCall","src":"9088:31:14"},"nodeType":"YulExpressionStatement","src":"9088:31:14"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9001:6:14","type":""}],"src":"8903:223:14"},{"body":{"nodeType":"YulBlock","src":"9278:220:14","statements":[{"nodeType":"YulAssignment","src":"9288:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9354:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9359:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9295:58:14"},"nodeType":"YulFunctionCall","src":"9295:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9288:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9460:3:14"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"9371:88:14"},"nodeType":"YulFunctionCall","src":"9371:93:14"},"nodeType":"YulExpressionStatement","src":"9371:93:14"},{"nodeType":"YulAssignment","src":"9473:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9484:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9489:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9480:3:14"},"nodeType":"YulFunctionCall","src":"9480:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9473:3:14"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9266:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9274:3:14","type":""}],"src":"9132:366:14"},{"body":{"nodeType":"YulBlock","src":"9675:248:14","statements":[{"nodeType":"YulAssignment","src":"9685:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9697:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9708:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9693:3:14"},"nodeType":"YulFunctionCall","src":"9693:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9685:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9732:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9743:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9728:3:14"},"nodeType":"YulFunctionCall","src":"9728:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9751:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9757:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9747:3:14"},"nodeType":"YulFunctionCall","src":"9747:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9721:6:14"},"nodeType":"YulFunctionCall","src":"9721:47:14"},"nodeType":"YulExpressionStatement","src":"9721:47:14"},{"nodeType":"YulAssignment","src":"9777:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9911:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9785:124:14"},"nodeType":"YulFunctionCall","src":"9785:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9777:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9655:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9670:4:14","type":""}],"src":"9504:419:14"},{"body":{"nodeType":"YulBlock","src":"10035:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10057:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10065:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10053:3:14"},"nodeType":"YulFunctionCall","src":"10053:14:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"10069:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10046:6:14"},"nodeType":"YulFunctionCall","src":"10046:58:14"},"nodeType":"YulExpressionStatement","src":"10046:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10125:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10133:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10121:3:14"},"nodeType":"YulFunctionCall","src":"10121:15:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"10138:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10114:6:14"},"nodeType":"YulFunctionCall","src":"10114:29:14"},"nodeType":"YulExpressionStatement","src":"10114:29:14"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10027:6:14","type":""}],"src":"9929:221:14"},{"body":{"nodeType":"YulBlock","src":"10302:220:14","statements":[{"nodeType":"YulAssignment","src":"10312:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10378:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10383:2:14","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10319:58:14"},"nodeType":"YulFunctionCall","src":"10319:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10312:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10484:3:14"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"10395:88:14"},"nodeType":"YulFunctionCall","src":"10395:93:14"},"nodeType":"YulExpressionStatement","src":"10395:93:14"},{"nodeType":"YulAssignment","src":"10497:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10508:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10513:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10504:3:14"},"nodeType":"YulFunctionCall","src":"10504:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10497:3:14"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10290:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10298:3:14","type":""}],"src":"10156:366:14"},{"body":{"nodeType":"YulBlock","src":"10699:248:14","statements":[{"nodeType":"YulAssignment","src":"10709:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10721:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10732:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10717:3:14"},"nodeType":"YulFunctionCall","src":"10717:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10709:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10756:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10767:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10752:3:14"},"nodeType":"YulFunctionCall","src":"10752:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10775:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10781:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10771:3:14"},"nodeType":"YulFunctionCall","src":"10771:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10745:6:14"},"nodeType":"YulFunctionCall","src":"10745:47:14"},"nodeType":"YulExpressionStatement","src":"10745:47:14"},{"nodeType":"YulAssignment","src":"10801:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10935:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10809:124:14"},"nodeType":"YulFunctionCall","src":"10809:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10801:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10679:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10694:4:14","type":""}],"src":"10528:419:14"},{"body":{"nodeType":"YulBlock","src":"11059:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11081:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11089:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11077:3:14"},"nodeType":"YulFunctionCall","src":"11077:14:14"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"11093:31:14","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11070:6:14"},"nodeType":"YulFunctionCall","src":"11070:55:14"},"nodeType":"YulExpressionStatement","src":"11070:55:14"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11051:6:14","type":""}],"src":"10953:179:14"},{"body":{"nodeType":"YulBlock","src":"11284:220:14","statements":[{"nodeType":"YulAssignment","src":"11294:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11360:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11365:2:14","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11301:58:14"},"nodeType":"YulFunctionCall","src":"11301:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11294:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11466:3:14"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"11377:88:14"},"nodeType":"YulFunctionCall","src":"11377:93:14"},"nodeType":"YulExpressionStatement","src":"11377:93:14"},{"nodeType":"YulAssignment","src":"11479:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11490:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11495:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11486:3:14"},"nodeType":"YulFunctionCall","src":"11486:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11479:3:14"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11272:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11280:3:14","type":""}],"src":"11138:366:14"},{"body":{"nodeType":"YulBlock","src":"11681:248:14","statements":[{"nodeType":"YulAssignment","src":"11691:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11703:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11714:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11699:3:14"},"nodeType":"YulFunctionCall","src":"11699:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11691:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11738:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11749:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11734:3:14"},"nodeType":"YulFunctionCall","src":"11734:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11757:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11763:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11753:3:14"},"nodeType":"YulFunctionCall","src":"11753:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11727:6:14"},"nodeType":"YulFunctionCall","src":"11727:47:14"},"nodeType":"YulExpressionStatement","src":"11727:47:14"},{"nodeType":"YulAssignment","src":"11783:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11917:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11791:124:14"},"nodeType":"YulFunctionCall","src":"11791:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11783:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11661:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11676:4:14","type":""}],"src":"11510:419:14"},{"body":{"nodeType":"YulBlock","src":"12041:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12063:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12071:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12059:3:14"},"nodeType":"YulFunctionCall","src":"12059:14:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"12075:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12052:6:14"},"nodeType":"YulFunctionCall","src":"12052:58:14"},"nodeType":"YulExpressionStatement","src":"12052:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12131:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12139:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12127:3:14"},"nodeType":"YulFunctionCall","src":"12127:15:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"12144:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12120:6:14"},"nodeType":"YulFunctionCall","src":"12120:32:14"},"nodeType":"YulExpressionStatement","src":"12120:32:14"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12033:6:14","type":""}],"src":"11935:224:14"},{"body":{"nodeType":"YulBlock","src":"12311:220:14","statements":[{"nodeType":"YulAssignment","src":"12321:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12387:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12392:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12328:58:14"},"nodeType":"YulFunctionCall","src":"12328:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12321:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12493:3:14"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"12404:88:14"},"nodeType":"YulFunctionCall","src":"12404:93:14"},"nodeType":"YulExpressionStatement","src":"12404:93:14"},{"nodeType":"YulAssignment","src":"12506:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12517:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12522:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12513:3:14"},"nodeType":"YulFunctionCall","src":"12513:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12506:3:14"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12299:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12307:3:14","type":""}],"src":"12165:366:14"},{"body":{"nodeType":"YulBlock","src":"12708:248:14","statements":[{"nodeType":"YulAssignment","src":"12718:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12730:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12741:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12726:3:14"},"nodeType":"YulFunctionCall","src":"12726:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12718:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12765:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12776:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12761:3:14"},"nodeType":"YulFunctionCall","src":"12761:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12784:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12790:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12780:3:14"},"nodeType":"YulFunctionCall","src":"12780:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12754:6:14"},"nodeType":"YulFunctionCall","src":"12754:47:14"},"nodeType":"YulExpressionStatement","src":"12754:47:14"},{"nodeType":"YulAssignment","src":"12810:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12944:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12818:124:14"},"nodeType":"YulFunctionCall","src":"12818:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12810:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12688:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12703:4:14","type":""}],"src":"12537:419:14"},{"body":{"nodeType":"YulBlock","src":"13068:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13090:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13098:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13086:3:14"},"nodeType":"YulFunctionCall","src":"13086:14:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"13102:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13079:6:14"},"nodeType":"YulFunctionCall","src":"13079:58:14"},"nodeType":"YulExpressionStatement","src":"13079:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13158:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13166:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13154:3:14"},"nodeType":"YulFunctionCall","src":"13154:15:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"13171:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13147:6:14"},"nodeType":"YulFunctionCall","src":"13147:30:14"},"nodeType":"YulExpressionStatement","src":"13147:30:14"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13060:6:14","type":""}],"src":"12962:222:14"},{"body":{"nodeType":"YulBlock","src":"13336:220:14","statements":[{"nodeType":"YulAssignment","src":"13346:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13412:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13417:2:14","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13353:58:14"},"nodeType":"YulFunctionCall","src":"13353:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13346:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13518:3:14"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"13429:88:14"},"nodeType":"YulFunctionCall","src":"13429:93:14"},"nodeType":"YulExpressionStatement","src":"13429:93:14"},{"nodeType":"YulAssignment","src":"13531:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13542:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13547:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13538:3:14"},"nodeType":"YulFunctionCall","src":"13538:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13531:3:14"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13324:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13332:3:14","type":""}],"src":"13190:366:14"},{"body":{"nodeType":"YulBlock","src":"13733:248:14","statements":[{"nodeType":"YulAssignment","src":"13743:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13755:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13766:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13751:3:14"},"nodeType":"YulFunctionCall","src":"13751:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13743:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13790:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13801:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13786:3:14"},"nodeType":"YulFunctionCall","src":"13786:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13809:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13815:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13805:3:14"},"nodeType":"YulFunctionCall","src":"13805:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13779:6:14"},"nodeType":"YulFunctionCall","src":"13779:47:14"},"nodeType":"YulExpressionStatement","src":"13779:47:14"},{"nodeType":"YulAssignment","src":"13835:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13969:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13843:124:14"},"nodeType":"YulFunctionCall","src":"13843:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13835:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13713:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13728:4:14","type":""}],"src":"13562:419:14"},{"body":{"nodeType":"YulBlock","src":"14093:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14115:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14123:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14111:3:14"},"nodeType":"YulFunctionCall","src":"14111:14:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"14127:34:14","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14104:6:14"},"nodeType":"YulFunctionCall","src":"14104:58:14"},"nodeType":"YulExpressionStatement","src":"14104:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14183:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14191:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14179:3:14"},"nodeType":"YulFunctionCall","src":"14179:15:14"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"14196:8:14","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14172:6:14"},"nodeType":"YulFunctionCall","src":"14172:33:14"},"nodeType":"YulExpressionStatement","src":"14172:33:14"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14085:6:14","type":""}],"src":"13987:225:14"},{"body":{"nodeType":"YulBlock","src":"14364:220:14","statements":[{"nodeType":"YulAssignment","src":"14374:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14440:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14445:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14381:58:14"},"nodeType":"YulFunctionCall","src":"14381:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14374:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14546:3:14"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"14457:88:14"},"nodeType":"YulFunctionCall","src":"14457:93:14"},"nodeType":"YulExpressionStatement","src":"14457:93:14"},{"nodeType":"YulAssignment","src":"14559:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14570:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14575:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14566:3:14"},"nodeType":"YulFunctionCall","src":"14566:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14559:3:14"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14352:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14360:3:14","type":""}],"src":"14218:366:14"},{"body":{"nodeType":"YulBlock","src":"14761:248:14","statements":[{"nodeType":"YulAssignment","src":"14771:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14783:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14794:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14779:3:14"},"nodeType":"YulFunctionCall","src":"14779:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14771:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14818:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14829:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14814:3:14"},"nodeType":"YulFunctionCall","src":"14814:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14837:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14843:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14833:3:14"},"nodeType":"YulFunctionCall","src":"14833:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14807:6:14"},"nodeType":"YulFunctionCall","src":"14807:47:14"},"nodeType":"YulExpressionStatement","src":"14807:47:14"},{"nodeType":"YulAssignment","src":"14863:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14997:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14871:124:14"},"nodeType":"YulFunctionCall","src":"14871:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14863:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14741:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14756:4:14","type":""}],"src":"14590:419:14"},{"body":{"nodeType":"YulBlock","src":"15121:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15143:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15151:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15139:3:14"},"nodeType":"YulFunctionCall","src":"15139:14:14"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"15155:34:14","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15132:6:14"},"nodeType":"YulFunctionCall","src":"15132:58:14"},"nodeType":"YulExpressionStatement","src":"15132:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15211:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15219:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15207:3:14"},"nodeType":"YulFunctionCall","src":"15207:15:14"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"15224:3:14","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15200:6:14"},"nodeType":"YulFunctionCall","src":"15200:28:14"},"nodeType":"YulExpressionStatement","src":"15200:28:14"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15113:6:14","type":""}],"src":"15015:220:14"},{"body":{"nodeType":"YulBlock","src":"15387:220:14","statements":[{"nodeType":"YulAssignment","src":"15397:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15463:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15468:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15404:58:14"},"nodeType":"YulFunctionCall","src":"15404:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15397:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15569:3:14"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"15480:88:14"},"nodeType":"YulFunctionCall","src":"15480:93:14"},"nodeType":"YulExpressionStatement","src":"15480:93:14"},{"nodeType":"YulAssignment","src":"15582:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15593:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15598:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15589:3:14"},"nodeType":"YulFunctionCall","src":"15589:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15582:3:14"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15375:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15383:3:14","type":""}],"src":"15241:366:14"},{"body":{"nodeType":"YulBlock","src":"15784:248:14","statements":[{"nodeType":"YulAssignment","src":"15794:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15806:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15817:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15802:3:14"},"nodeType":"YulFunctionCall","src":"15802:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15794:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15841:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15852:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15837:3:14"},"nodeType":"YulFunctionCall","src":"15837:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15860:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15866:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15856:3:14"},"nodeType":"YulFunctionCall","src":"15856:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15830:6:14"},"nodeType":"YulFunctionCall","src":"15830:47:14"},"nodeType":"YulExpressionStatement","src":"15830:47:14"},{"nodeType":"YulAssignment","src":"15886:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16020:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15894:124:14"},"nodeType":"YulFunctionCall","src":"15894:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15886:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15764:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15779:4:14","type":""}],"src":"15613:419:14"},{"body":{"nodeType":"YulBlock","src":"16144:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16166:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16174:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16162:3:14"},"nodeType":"YulFunctionCall","src":"16162:14:14"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"16178:34:14","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16155:6:14"},"nodeType":"YulFunctionCall","src":"16155:58:14"},"nodeType":"YulExpressionStatement","src":"16155:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16234:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16242:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16230:3:14"},"nodeType":"YulFunctionCall","src":"16230:15:14"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"16247:4:14","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16223:6:14"},"nodeType":"YulFunctionCall","src":"16223:29:14"},"nodeType":"YulExpressionStatement","src":"16223:29:14"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16136:6:14","type":""}],"src":"16038:221:14"},{"body":{"nodeType":"YulBlock","src":"16411:220:14","statements":[{"nodeType":"YulAssignment","src":"16421:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16487:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"16492:2:14","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16428:58:14"},"nodeType":"YulFunctionCall","src":"16428:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16421:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16593:3:14"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"16504:88:14"},"nodeType":"YulFunctionCall","src":"16504:93:14"},"nodeType":"YulExpressionStatement","src":"16504:93:14"},{"nodeType":"YulAssignment","src":"16606:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16617:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"16622:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16613:3:14"},"nodeType":"YulFunctionCall","src":"16613:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16606:3:14"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16399:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16407:3:14","type":""}],"src":"16265:366:14"},{"body":{"nodeType":"YulBlock","src":"16808:248:14","statements":[{"nodeType":"YulAssignment","src":"16818:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16830:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16841:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16826:3:14"},"nodeType":"YulFunctionCall","src":"16826:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16818:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16865:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16876:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16861:3:14"},"nodeType":"YulFunctionCall","src":"16861:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16884:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16890:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16880:3:14"},"nodeType":"YulFunctionCall","src":"16880:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16854:6:14"},"nodeType":"YulFunctionCall","src":"16854:47:14"},"nodeType":"YulExpressionStatement","src":"16854:47:14"},{"nodeType":"YulAssignment","src":"16910:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17044:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16918:124:14"},"nodeType":"YulFunctionCall","src":"16918:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16910:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16788:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16803:4:14","type":""}],"src":"16637:419:14"},{"body":{"nodeType":"YulBlock","src":"17168:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17190:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"17198:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17186:3:14"},"nodeType":"YulFunctionCall","src":"17186:14:14"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"17202:33:14","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17179:6:14"},"nodeType":"YulFunctionCall","src":"17179:57:14"},"nodeType":"YulExpressionStatement","src":"17179:57:14"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17160:6:14","type":""}],"src":"17062:181:14"},{"body":{"nodeType":"YulBlock","src":"17395:220:14","statements":[{"nodeType":"YulAssignment","src":"17405:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17471:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17476:2:14","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17412:58:14"},"nodeType":"YulFunctionCall","src":"17412:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17405:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17577:3:14"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"17488:88:14"},"nodeType":"YulFunctionCall","src":"17488:93:14"},"nodeType":"YulExpressionStatement","src":"17488:93:14"},{"nodeType":"YulAssignment","src":"17590:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17601:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17606:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17597:3:14"},"nodeType":"YulFunctionCall","src":"17597:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17590:3:14"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17383:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17391:3:14","type":""}],"src":"17249:366:14"},{"body":{"nodeType":"YulBlock","src":"17792:248:14","statements":[{"nodeType":"YulAssignment","src":"17802:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17814:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17825:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17810:3:14"},"nodeType":"YulFunctionCall","src":"17810:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17802:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17849:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17860:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17845:3:14"},"nodeType":"YulFunctionCall","src":"17845:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17868:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17874:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17864:3:14"},"nodeType":"YulFunctionCall","src":"17864:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17838:6:14"},"nodeType":"YulFunctionCall","src":"17838:47:14"},"nodeType":"YulExpressionStatement","src":"17838:47:14"},{"nodeType":"YulAssignment","src":"17894:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18028:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17902:124:14"},"nodeType":"YulFunctionCall","src":"17902:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17894:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17772:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17787:4:14","type":""}],"src":"17621:419:14"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09(memPtr) {\n\n        mstore(add(memPtr, 0), \"MockUSDT: Nothing to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43547a7ae62213e7dce03299d8a9d87ef695a2312e1671bb080ae04ee02aca09_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a0712d6811610066578063a0712d681461024d578063a457c2d714610269578063a9059cbb14610299578063dd62ed3e146102c9576100ea565b806370a08231146101f557806395d89b41146102255780639975038c14610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806342966c68146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102f9565b6040516101049190610f29565b60405180910390f35b61012760048036038101906101229190610fe4565b61038b565b604051610134919061103f565b60405180910390f35b6101456103ae565b6040516101529190611069565b60405180910390f35b61017560048036038101906101709190611084565b6103b8565b604051610182919061103f565b60405180910390f35b6101936103e7565b6040516101a091906110f3565b60405180910390f35b6101c360048036038101906101be9190610fe4565b6103f0565b6040516101d0919061103f565b60405180910390f35b6101f360048036038101906101ee919061110e565b610427565b005b61020f600480360381019061020a919061113b565b610434565b60405161021c9190611069565b60405180910390f35b61022d61047c565b60405161023a9190610f29565b60405180910390f35b61024b61050e565b005b6102676004803603810190610262919061110e565b61056b565b005b610283600480360381019061027e9190610fe4565b610578565b604051610290919061103f565b60405180910390f35b6102b360048036038101906102ae9190610fe4565b6105ef565b6040516102c0919061103f565b60405180910390f35b6102e360048036038101906102de9190611168565b610612565b6040516102f09190611069565b60405180910390f35b606060038054610308906111d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610334906111d7565b80156103815780601f1061035657610100808354040283529160200191610381565b820191906000526020600020905b81548152906001019060200180831161036457829003601f168201915b5050505050905090565b600080610396610699565b90506103a38185856106a1565b600191505092915050565b6000600254905090565b6000806103c3610699565b90506103d085828561086a565b6103db8585856108f6565b60019150509392505050565b60006012905090565b6000806103fb610699565b905061041c81858561040d8589610612565b6104179190611237565b6106a1565b600191505092915050565b6104313382610b6c565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461048b906111d7565b80601f01602080910402602001604051908101604052809291908181526020018280546104b7906111d7565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b5050505050905090565b600061051933610434565b90506000811161055e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610555906112b7565b60405180910390fd5b6105683382610b6c565b50565b6105753382610d39565b50565b600080610583610699565b905060006105918286610612565b9050838110156105d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cd90611349565b60405180910390fd5b6105e382868684036106a1565b60019250505092915050565b6000806105fa610699565b90506106078185856108f6565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610710576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610707906113db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107769061146d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161085d9190611069565b60405180910390a3505050565b60006108768484610612565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108f057818110156108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d9906114d9565b60405180910390fd5b6108ef84848484036106a1565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9061156b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cb906115fd565b60405180910390fd5b6109df838383610e8f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5c9061168f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b539190611069565b60405180910390a3610b66848484610e94565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd290611721565b60405180910390fd5b610be782600083610e8f565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c64906117b3565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d209190611069565b60405180910390a3610d3483600084610e94565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9f9061181f565b60405180910390fd5b610db460008383610e8f565b8060026000828254610dc69190611237565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e779190611069565b60405180910390a3610e8b60008383610e94565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed3578082015181840152602081019050610eb8565b60008484015250505050565b6000601f19601f8301169050919050565b6000610efb82610e99565b610f058185610ea4565b9350610f15818560208601610eb5565b610f1e81610edf565b840191505092915050565b60006020820190508181036000830152610f438184610ef0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7b82610f50565b9050919050565b610f8b81610f70565b8114610f9657600080fd5b50565b600081359050610fa881610f82565b92915050565b6000819050919050565b610fc181610fae565b8114610fcc57600080fd5b50565b600081359050610fde81610fb8565b92915050565b60008060408385031215610ffb57610ffa610f4b565b5b600061100985828601610f99565b925050602061101a85828601610fcf565b9150509250929050565b60008115159050919050565b61103981611024565b82525050565b60006020820190506110546000830184611030565b92915050565b61106381610fae565b82525050565b600060208201905061107e600083018461105a565b92915050565b60008060006060848603121561109d5761109c610f4b565b5b60006110ab86828701610f99565b93505060206110bc86828701610f99565b92505060406110cd86828701610fcf565b9150509250925092565b600060ff82169050919050565b6110ed816110d7565b82525050565b600060208201905061110860008301846110e4565b92915050565b60006020828403121561112457611123610f4b565b5b600061113284828501610fcf565b91505092915050565b60006020828403121561115157611150610f4b565b5b600061115f84828501610f99565b91505092915050565b6000806040838503121561117f5761117e610f4b565b5b600061118d85828601610f99565b925050602061119e85828601610f99565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111ef57607f821691505b602082108103611202576112016111a8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124282610fae565b915061124d83610fae565b925082820190508082111561126557611264611208565b5b92915050565b7f4d6f636b555344543a204e6f7468696e6720746f206275726e00000000000000600082015250565b60006112a1601983610ea4565b91506112ac8261126b565b602082019050919050565b600060208201905081810360008301526112d081611294565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611333602583610ea4565b915061133e826112d7565b604082019050919050565b6000602082019050818103600083015261136281611326565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113c5602483610ea4565b91506113d082611369565b604082019050919050565b600060208201905081810360008301526113f4816113b8565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611457602283610ea4565b9150611462826113fb565b604082019050919050565b600060208201905081810360008301526114868161144a565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114c3601d83610ea4565b91506114ce8261148d565b602082019050919050565b600060208201905081810360008301526114f2816114b6565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611555602583610ea4565b9150611560826114f9565b604082019050919050565b6000602082019050818103600083015261158481611548565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006115e7602383610ea4565b91506115f28261158b565b604082019050919050565b60006020820190508181036000830152611616816115da565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611679602683610ea4565b91506116848261161d565b604082019050919050565b600060208201905081810360008301526116a88161166c565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061170b602183610ea4565b9150611716826116af565b604082019050919050565b6000602082019050818103600083015261173a816116fe565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061179d602283610ea4565b91506117a882611741565b604082019050919050565b600060208201905081810360008301526117cc81611790565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611809601f83610ea4565b9150611814826117d3565b602082019050919050565b60006020820190508181036000830152611838816117fc565b905091905056fea264697066735822122068d713bf4736c676499489be7a244631ce61e66372a491b3cb5640b12172fe9464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x9975038C EQ PUSH2 0x243 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x113B JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x50E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x308 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x334 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x381 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x356 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x381 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x364 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x396 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A3 DUP2 DUP6 DUP6 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C3 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D0 DUP6 DUP3 DUP6 PUSH2 0x86A JUMP JUMPDEST PUSH2 0x3DB DUP6 DUP6 DUP6 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3FB PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH2 0x41C DUP2 DUP6 DUP6 PUSH2 0x40D DUP6 DUP10 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x431 CALLER DUP3 PUSH2 0xB6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x11D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x504 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x504 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 CALLER PUSH2 0x434 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x555 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x568 CALLER DUP3 PUSH2 0xB6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x575 CALLER DUP3 PUSH2 0xD39 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x583 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x591 DUP3 DUP7 PUSH2 0x612 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CD SWAP1 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5FA PUSH2 0x699 JUMP JUMPDEST SWAP1 POP PUSH2 0x607 DUP2 DUP6 DUP6 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x707 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 DUP5 DUP5 PUSH2 0x612 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x8F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DF DUP4 DUP4 DUP4 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5C SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB66 DUP5 DUP5 DUP5 PUSH2 0xE94 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE7 DUP3 PUSH1 0x0 DUP4 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC64 SWAP1 PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD20 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD34 DUP4 PUSH1 0x0 DUP5 PUSH2 0xE94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 PUSH1 0x0 DUP4 DUP4 PUSH2 0xE8F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE8B PUSH1 0x0 DUP4 DUP4 PUSH2 0xE94 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFB DUP3 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xF05 DUP2 DUP6 PUSH2 0xEA4 JUMP JUMPDEST SWAP4 POP PUSH2 0xF15 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xF1E DUP2 PUSH2 0xEDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF43 DUP2 DUP5 PUSH2 0xEF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP2 EQ PUSH2 0xF96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA8 DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC1 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP2 EQ PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDE DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101A DUP6 DUP3 DUP7 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1039 DUP2 PUSH2 0x1024 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1054 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1030 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1063 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x109D JUMPI PUSH2 0x109C PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10AB DUP7 DUP3 DUP8 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10BC DUP7 DUP3 DUP8 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10CD DUP7 DUP3 DUP8 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0x10D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1108 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1132 DUP5 DUP3 DUP6 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1151 JUMPI PUSH2 0x1150 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x115F DUP5 DUP3 DUP6 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x117F JUMPI PUSH2 0x117E PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x118D DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x119E DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1202 JUMPI PUSH2 0x1201 PUSH2 0x11A8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x124D DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1265 JUMPI PUSH2 0x1264 PUSH2 0x1208 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F636B555344543A204E6F7468696E6720746F206275726E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A1 PUSH1 0x19 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AC DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D0 DUP2 PUSH2 0x1294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1333 PUSH1 0x25 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x133E DUP3 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1362 DUP2 PUSH2 0x1326 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C5 PUSH1 0x24 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP3 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F4 DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1457 PUSH1 0x22 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1462 DUP3 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1486 DUP2 PUSH2 0x144A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C3 PUSH1 0x1D DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CE DUP3 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F2 DUP2 PUSH2 0x14B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1555 PUSH1 0x25 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1560 DUP3 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1584 DUP2 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E7 PUSH1 0x23 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F2 DUP3 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1616 DUP2 PUSH2 0x15DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1679 PUSH1 0x26 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1684 DUP3 PUSH2 0x161D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16A8 DUP2 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170B PUSH1 0x21 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1716 DUP3 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x173A DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179D PUSH1 0x22 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A8 DUP3 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17CC DUP2 PUSH2 0x1790 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1809 PUSH1 0x1F DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1814 DUP3 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1838 DUP2 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xD713BF4736C6764994 DUP10 0xBE PUSH27 0x244631CE61E66372A491B3CB5640B12172FE9464736F6C63430008 SLT STOP CALLER ","sourceMap":"162:496:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;379:83:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3419:125:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;468:188:13;;;:::i;:::-;;290:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6575:427:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;379:83:13:-;429:26;435:10;447:7;429:5;:26::i;:::-;379:83;:::o;3419:125:6:-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;468:188:13:-;506:18;527:21;537:10;527:9;:21::i;:::-;506:42;;579:1;566:10;:14;558:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;620:29;626:10;638;620:5;:29::i;:::-;496:160;468:188::o;290:83::-;340:26;346:10;358:7;340:5;:26::i;:::-;290:83;:::o;6575:427:6:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;655:96:9:-;708:7;734:10;727:17;;655:96;:::o;10457:340:6:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;9375:659::-;9477:1;9458:21;;:7;:21;;;9450:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;9588:22;9613:9;:18;9623:7;9613:18;;;;;;;;;;;;;;;;9588:43;;9667:6;9649:14;:24;;9641:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9784:6;9767:14;:23;9746:9;:18;9756:7;9746:18;;;;;;;;;;;;;;;:44;;;;9899:6;9883:12;;:22;;;;;;;;;;;9957:1;9931:37;;9940:7;9931:37;;;9961:6;9931:37;;;;;;:::i;:::-;;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:19;:48::i;:::-;9440:594;9375:659;;:::o;8520:535::-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:474::-;5591:6;5599;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5901:2;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5872:118;5523:474;;;;;:::o;6003:180::-;6051:77;6048:1;6041:88;6148:4;6145:1;6138:15;6172:4;6169:1;6162:15;6189:320;6233:6;6270:1;6264:4;6260:12;6250:22;;6317:1;6311:4;6307:12;6338:18;6328:81;;6394:4;6386:6;6382:17;6372:27;;6328:81;6456:2;6448:6;6445:14;6425:18;6422:38;6419:84;;6475:18;;:::i;:::-;6419:84;6240:269;6189:320;;;:::o;6515:180::-;6563:77;6560:1;6553:88;6660:4;6657:1;6650:15;6684:4;6681:1;6674:15;6701:191;6741:3;6760:20;6778:1;6760:20;:::i;:::-;6755:25;;6794:20;6812:1;6794:20;:::i;:::-;6789:25;;6837:1;6834;6830:9;6823:16;;6858:3;6855:1;6852:10;6849:36;;;6865:18;;:::i;:::-;6849:36;6701:191;;;;:::o;6898:175::-;7038:27;7034:1;7026:6;7022:14;7015:51;6898:175;:::o;7079:366::-;7221:3;7242:67;7306:2;7301:3;7242:67;:::i;:::-;7235:74;;7318:93;7407:3;7318:93;:::i;:::-;7436:2;7431:3;7427:12;7420:19;;7079:366;;;:::o;7451:419::-;7617:4;7655:2;7644:9;7640:18;7632:26;;7704:9;7698:4;7694:20;7690:1;7679:9;7675:17;7668:47;7732:131;7858:4;7732:131;:::i;:::-;7724:139;;7451:419;;;:::o;7876:224::-;8016:34;8012:1;8004:6;8000:14;7993:58;8085:7;8080:2;8072:6;8068:15;8061:32;7876:224;:::o;8106:366::-;8248:3;8269:67;8333:2;8328:3;8269:67;:::i;:::-;8262:74;;8345:93;8434:3;8345:93;:::i;:::-;8463:2;8458:3;8454:12;8447:19;;8106:366;;;:::o;8478:419::-;8644:4;8682:2;8671:9;8667:18;8659:26;;8731:9;8725:4;8721:20;8717:1;8706:9;8702:17;8695:47;8759:131;8885:4;8759:131;:::i;:::-;8751:139;;8478:419;;;:::o;8903:223::-;9043:34;9039:1;9031:6;9027:14;9020:58;9112:6;9107:2;9099:6;9095:15;9088:31;8903:223;:::o;9132:366::-;9274:3;9295:67;9359:2;9354:3;9295:67;:::i;:::-;9288:74;;9371:93;9460:3;9371:93;:::i;:::-;9489:2;9484:3;9480:12;9473:19;;9132:366;;;:::o;9504:419::-;9670:4;9708:2;9697:9;9693:18;9685:26;;9757:9;9751:4;9747:20;9743:1;9732:9;9728:17;9721:47;9785:131;9911:4;9785:131;:::i;:::-;9777:139;;9504:419;;;:::o;9929:221::-;10069:34;10065:1;10057:6;10053:14;10046:58;10138:4;10133:2;10125:6;10121:15;10114:29;9929:221;:::o;10156:366::-;10298:3;10319:67;10383:2;10378:3;10319:67;:::i;:::-;10312:74;;10395:93;10484:3;10395:93;:::i;:::-;10513:2;10508:3;10504:12;10497:19;;10156:366;;;:::o;10528:419::-;10694:4;10732:2;10721:9;10717:18;10709:26;;10781:9;10775:4;10771:20;10767:1;10756:9;10752:17;10745:47;10809:131;10935:4;10809:131;:::i;:::-;10801:139;;10528:419;;;:::o;10953:179::-;11093:31;11089:1;11081:6;11077:14;11070:55;10953:179;:::o;11138:366::-;11280:3;11301:67;11365:2;11360:3;11301:67;:::i;:::-;11294:74;;11377:93;11466:3;11377:93;:::i;:::-;11495:2;11490:3;11486:12;11479:19;;11138:366;;;:::o;11510:419::-;11676:4;11714:2;11703:9;11699:18;11691:26;;11763:9;11757:4;11753:20;11749:1;11738:9;11734:17;11727:47;11791:131;11917:4;11791:131;:::i;:::-;11783:139;;11510:419;;;:::o;11935:224::-;12075:34;12071:1;12063:6;12059:14;12052:58;12144:7;12139:2;12131:6;12127:15;12120:32;11935:224;:::o;12165:366::-;12307:3;12328:67;12392:2;12387:3;12328:67;:::i;:::-;12321:74;;12404:93;12493:3;12404:93;:::i;:::-;12522:2;12517:3;12513:12;12506:19;;12165:366;;;:::o;12537:419::-;12703:4;12741:2;12730:9;12726:18;12718:26;;12790:9;12784:4;12780:20;12776:1;12765:9;12761:17;12754:47;12818:131;12944:4;12818:131;:::i;:::-;12810:139;;12537:419;;;:::o;12962:222::-;13102:34;13098:1;13090:6;13086:14;13079:58;13171:5;13166:2;13158:6;13154:15;13147:30;12962:222;:::o;13190:366::-;13332:3;13353:67;13417:2;13412:3;13353:67;:::i;:::-;13346:74;;13429:93;13518:3;13429:93;:::i;:::-;13547:2;13542:3;13538:12;13531:19;;13190:366;;;:::o;13562:419::-;13728:4;13766:2;13755:9;13751:18;13743:26;;13815:9;13809:4;13805:20;13801:1;13790:9;13786:17;13779:47;13843:131;13969:4;13843:131;:::i;:::-;13835:139;;13562:419;;;:::o;13987:225::-;14127:34;14123:1;14115:6;14111:14;14104:58;14196:8;14191:2;14183:6;14179:15;14172:33;13987:225;:::o;14218:366::-;14360:3;14381:67;14445:2;14440:3;14381:67;:::i;:::-;14374:74;;14457:93;14546:3;14457:93;:::i;:::-;14575:2;14570:3;14566:12;14559:19;;14218:366;;;:::o;14590:419::-;14756:4;14794:2;14783:9;14779:18;14771:26;;14843:9;14837:4;14833:20;14829:1;14818:9;14814:17;14807:47;14871:131;14997:4;14871:131;:::i;:::-;14863:139;;14590:419;;;:::o;15015:220::-;15155:34;15151:1;15143:6;15139:14;15132:58;15224:3;15219:2;15211:6;15207:15;15200:28;15015:220;:::o;15241:366::-;15383:3;15404:67;15468:2;15463:3;15404:67;:::i;:::-;15397:74;;15480:93;15569:3;15480:93;:::i;:::-;15598:2;15593:3;15589:12;15582:19;;15241:366;;;:::o;15613:419::-;15779:4;15817:2;15806:9;15802:18;15794:26;;15866:9;15860:4;15856:20;15852:1;15841:9;15837:17;15830:47;15894:131;16020:4;15894:131;:::i;:::-;15886:139;;15613:419;;;:::o;16038:221::-;16178:34;16174:1;16166:6;16162:14;16155:58;16247:4;16242:2;16234:6;16230:15;16223:29;16038:221;:::o;16265:366::-;16407:3;16428:67;16492:2;16487:3;16428:67;:::i;:::-;16421:74;;16504:93;16593:3;16504:93;:::i;:::-;16622:2;16617:3;16613:12;16606:19;;16265:366;;;:::o;16637:419::-;16803:4;16841:2;16830:9;16826:18;16818:26;;16890:9;16884:4;16880:20;16876:1;16865:9;16861:17;16854:47;16918:131;17044:4;16918:131;:::i;:::-;16910:139;;16637:419;;;:::o;17062:181::-;17202:33;17198:1;17190:6;17186:14;17179:57;17062:181;:::o;17249:366::-;17391:3;17412:67;17476:2;17471:3;17412:67;:::i;:::-;17405:74;;17488:93;17577:3;17488:93;:::i;:::-;17606:2;17601:3;17597:12;17590:19;;17249:366;;;:::o;17621:419::-;17787:4;17825:2;17814:9;17810:18;17802:26;;17874:9;17868:4;17864:20;17860:1;17849:9;17845:17;17838:47;17902:131;18028:4;17902:131;:::i;:::-;17894:139;;17621:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1252200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2864","burn(uint256)":"infinite","burnAll()":"36156","decimals()":"388","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","mint(uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2505","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnAll()":"9975038c","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(uint256)":"a0712d68","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Mock mintable USDC\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockUSDC.sol\":\"MockUSDT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/mocks/MockUSDC.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport {ERC20} from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\n/// @dev Mock mintable USDC\\ncontract MockUSDT is ERC20 {\\n    constructor() ERC20(\\\"MockUDSC\\\", \\\"MUSDC\\\") {\\n        _mint(msg.sender, 1_000_000E18);\\n    }\\n\\n    function mint(uint256 _amount) external {\\n        _mint(msg.sender, _amount);\\n    }\\n\\n    function burn(uint256 _amount) external {\\n        _burn(msg.sender, _amount);\\n    }\\n\\n    function burnAll() external {\\n        uint256 _balanceOf = balanceOf(msg.sender);\\n        require(_balanceOf > 0, \\\"MockUSDT: Nothing to burn\\\");\\n        _burn(msg.sender, _balanceOf);\\n    }\\n}\\n\",\"keccak256\":\"0x983ae7c4c407602537b8623a63a3598cf983fbb637943d39338f0bb0fb6d4f13\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":933,"contract":"contracts/mocks/MockUSDC.sol:MockUSDT","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":939,"contract":"contracts/mocks/MockUSDC.sol:MockUSDT","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":941,"contract":"contracts/mocks/MockUSDC.sol:MockUSDT","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":943,"contract":"contracts/mocks/MockUSDC.sol:MockUSDT","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":945,"contract":"contracts/mocks/MockUSDC.sol:MockUSDT","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}